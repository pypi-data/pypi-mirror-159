 From John Coady: Here are instructions on how to create your own vpython jupyterlab extension on your computer. You will need to come up with a unique name for your vpython labextension so you can make is something like "vpythontest" or "myvpython" or something else that you would like to call it. Just don't call it "vpython" otherwise you might have installation problems with the official vpython labextension. So here are the steps.

Step 1:  In a console window, activate the conda environment where you have jupyterlab installed.

    jupyter labextension list

JupyterLab v0.35.3
Known labextensions:
   app dir: C:\Users\Bruce\Anaconda3\share\jupyter\lab
        vpython v0.2.9 enabled  ok
        

Step 2:  Uninstall the official vpython labextension from this jupyterlab so that there are no conflicts with your custom vpython labextension.

    jupyter labextension uninstall vpython

    Check that the vpython labextension is uninstalled.

    jupyter labextension list


Step 3:  In the console window, navigate to your home directory. The following command will ask you for the name you want to give your custom labextension (it will also ask you for a github address, which you can ignore). Remember, don't call your extension vpython. Here, "my-cookie-cutter-name" will be the name you give your custom extension, and the cd will put you in a folder created by the coookiecutter machinery.

    pip install cookiecutter
    cookiecutter https://github.com/jupyterlab/extension-cookiecutter-ts
    cd my-cookie-cutter-name
    
 
Step 4: Now that you are in your directory for your custom labextension, enter the following commands.

    npm install
    npm install --save @jupyterlab/notebook @jupyterlab/application @jupyterlab/apputils @jupyterlab/docregistry @phosphor/disposable script-loader


Step 5:  If you look at the contents of this directory where your labextension is located it should contain some files and a directory called "src" and another directory called "style". Copy all of the files and the directories from 

    https://github.com/BruceSherwood/vpython-jupyter/tree/master/labextension/vpython

to your custom labextension directory and overwrite the existing files.


Step 6:  Build your custom extension.

    npm run build
    

Step 7: You should now have a directory called "lib" in your custom labextension folder. Copy vpython_data and vpython_libraries folders and their contents from

    https://github.com/BruceSherwood/vpython-jupyter/tree/master/vpython
 
    to the lib directory.
    

Step 8:  Now build and install your custom labextension.
   
    npm run build
    jupyter labextension install .
    

Step 9:  Check that your labextension is installed.

    jupyter labextension list
    

Step 10: In a separate console window activate the conda environment that contains jupyterlab that you are working with and launch jupyterlab.

    jupyter lab

    You should have your custom vpython working in jupyterlab. 
    

If you make a change to the code then you just need to repeat step 8 to rebuild and install your changes in jupyterlab. You should probably close jupyterlab and restart it for the changes to be picked up.