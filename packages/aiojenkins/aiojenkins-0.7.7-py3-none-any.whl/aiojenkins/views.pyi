from .exceptions import JenkinsError as JenkinsError
from _typeshed import Incomplete
from typing import Dict

class Views:
    jenkins: Incomplete
    def __init__(self, jenkins) -> None: ...
    async def get_all(self) -> Dict[str, dict]: ...
    async def is_exists(self, name: str) -> bool: ...
    async def get_config(self, name: str) -> str: ...
    async def create(self, name: str, config: str) -> None: ...
    async def reconfigure(self, name: str, config: str) -> None: ...
    async def delete(self, name: str) -> None: ...
