{"version":3,"file":"chunks/17740.392547a7a4b5bfe6e57c.min.js","mappings":"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","sources":["webpack://plone.staticresources/./node_modules/datatables.net-buttons/js/buttons.colVis.js"],"sourcesContent":["/*!\n * Column visibility buttons for Buttons and DataTables.\n * 2016 SpryMedia Ltd - datatables.net/license\n */\n\n(function( factory ){\n\tif ( typeof define === 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( ['jquery', 'datatables.net', 'datatables.net-buttons'], function ( $ ) {\n\t\t\treturn factory( $, window, document );\n\t\t} );\n\t}\n\telse if ( typeof exports === 'object' ) {\n\t\t// CommonJS\n\t\tmodule.exports = function (root, $) {\n\t\t\tif ( ! root ) {\n\t\t\t\troot = window;\n\t\t\t}\n\n\t\t\tif ( ! $ || ! $.fn.dataTable ) {\n\t\t\t\t$ = require('datatables.net')(root, $).$;\n\t\t\t}\n\n\t\t\tif ( ! $.fn.dataTable.Buttons ) {\n\t\t\t\trequire('datatables.net-buttons')(root, $);\n\t\t\t}\n\n\t\t\treturn factory( $, root, root.document );\n\t\t};\n\t}\n\telse {\n\t\t// Browser\n\t\tfactory( jQuery, window, document );\n\t}\n}(function( $, window, document, undefined ) {\n'use strict';\nvar DataTable = $.fn.dataTable;\n\n\n$.extend( DataTable.ext.buttons, {\n\t// A collection of column visibility buttons\n\tcolvis: function ( dt, conf ) {\n\t\tvar node = null;\n\t\tvar buttonConf = {\n\t\t\textend: 'collection',\n\t\t\tinit: function ( dt, n ) {\n\t\t\t\tnode = n;\n\t\t\t},\n\t\t\ttext: function ( dt ) {\n\t\t\t\treturn dt.i18n( 'buttons.colvis', 'Column visibility' );\n\t\t\t},\n\t\t\tclassName: 'buttons-colvis',\n\t\t\tcloseButton: false,\n\t\t\tbuttons: [ {\n\t\t\t\textend: 'columnsToggle',\n\t\t\t\tcolumns: conf.columns,\n\t\t\t\tcolumnText: conf.columnText\n\t\t\t} ]\n\t\t};\n\n\t\t// Rebuild the collection with the new column structure if columns are reordered\n\t\tdt.on( 'column-reorder.dt'+conf.namespace, function (e, settings, details) {\n\t\t\t// console.log(node);\n\t\t\t// console.log('node', dt.button(null, node).node());\n\t\t\tdt.button(null, dt.button(null, node).node()).collectionRebuild([{\n\t\t\t\textend: 'columnsToggle',\n\t\t\t\tcolumns: conf.columns,\n\t\t\t\tcolumnText: conf.columnText\n\t\t\t}]);\n\t\t});\n\n\t\treturn buttonConf;\n\t},\n\n\t// Selected columns with individual buttons - toggle column visibility\n\tcolumnsToggle: function ( dt, conf ) {\n\t\tvar columns = dt.columns( conf.columns ).indexes().map( function ( idx ) {\n\t\t\treturn {\n\t\t\t\textend: 'columnToggle',\n\t\t\t\tcolumns: idx,\n\t\t\t\tcolumnText: conf.columnText\n\t\t\t};\n\t\t} ).toArray();\n\n\t\treturn columns;\n\t},\n\n\t// Single button to toggle column visibility\n\tcolumnToggle: function ( dt, conf ) {\n\t\treturn {\n\t\t\textend: 'columnVisibility',\n\t\t\tcolumns: conf.columns,\n\t\t\tcolumnText: conf.columnText\n\t\t};\n\t},\n\n\t// Selected columns with individual buttons - set column visibility\n\tcolumnsVisibility: function ( dt, conf ) {\n\t\tvar columns = dt.columns( conf.columns ).indexes().map( function ( idx ) {\n\t\t\treturn {\n\t\t\t\textend: 'columnVisibility',\n\t\t\t\tcolumns: idx,\n\t\t\t\tvisibility: conf.visibility,\n\t\t\t\tcolumnText: conf.columnText\n\t\t\t};\n\t\t} ).toArray();\n\n\t\treturn columns;\n\t},\n\n\t// Single button to set column visibility\n\tcolumnVisibility: {\n\t\tcolumns: undefined, // column selector\n\t\ttext: function ( dt, button, conf ) {\n\t\t\treturn conf._columnText( dt, conf );\n\t\t},\n\t\tclassName: 'buttons-columnVisibility',\n\t\taction: function ( e, dt, button, conf ) {\n\t\t\tvar col = dt.columns( conf.columns );\n\t\t\tvar curr = col.visible();\n\n\t\t\tcol.visible( conf.visibility !== undefined ?\n\t\t\t\tconf.visibility :\n\t\t\t\t! (curr.length ? curr[0] : false )\n\t\t\t);\n\t\t},\n\t\tinit: function ( dt, button, conf ) {\n\t\t\tvar that = this;\n\t\t\tbutton.attr( 'data-cv-idx', conf.columns );\n\n\t\t\tdt\n\t\t\t\t.on( 'column-visibility.dt'+conf.namespace, function (e, settings) {\n\t\t\t\t\tif ( ! settings.bDestroying && settings.nTable == dt.settings()[0].nTable ) {\n\t\t\t\t\t\tthat.active( dt.column( conf.columns ).visible() );\n\t\t\t\t\t}\n\t\t\t\t} )\n\t\t\t\t.on( 'column-reorder.dt'+conf.namespace, function (e, settings, details) {\n\t\t\t\t\t// Button has been removed from the DOM\n\t\t\t\t\tif ( conf.destroying ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( dt.columns( conf.columns ).count() !== 1 ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// This button controls the same column index but the text for the column has\n\t\t\t\t\t// changed\n\t\t\t\t\tthat.text( conf._columnText( dt, conf ) );\n\n\t\t\t\t\t// Since its a different column, we need to check its visibility\n\t\t\t\t\tthat.active( dt.column( conf.columns ).visible() );\n\t\t\t\t} );\n\n\t\t\tthis.active( dt.column( conf.columns ).visible() );\n\t\t},\n\t\tdestroy: function ( dt, button, conf ) {\n\t\t\tdt\n\t\t\t\t.off( 'column-visibility.dt'+conf.namespace )\n\t\t\t\t.off( 'column-reorder.dt'+conf.namespace );\n\t\t},\n\n\t\t_columnText: function ( dt, conf ) {\n\t\t\t// Use DataTables' internal data structure until this is presented\n\t\t\t// is a public API. The other option is to use\n\t\t\t// `$( column(col).node() ).text()` but the node might not have been\n\t\t\t// populated when Buttons is constructed.\n\t\t\tvar idx = dt.column( conf.columns ).index();\n\t\t\tvar title = dt.settings()[0].aoColumns[ idx ].sTitle;\n\n\t\t\tif (! title) {\n\t\t\t\ttitle = dt.column(idx).header().innerHTML;\n\t\t\t}\n\n\t\t\ttitle = title\n\t\t\t\t.replace(/\\n/g,\" \")        // remove new lines\n\t\t\t\t.replace(/<br\\s*\\/?>/gi, \" \")  // replace line breaks with spaces\n\t\t\t\t.replace(/<select(.*?)<\\/select>/g, \"\") // remove select tags, including options text\n\t\t\t\t.replace(/<!\\-\\-.*?\\-\\->/g, \"\") // strip HTML comments\n\t\t\t\t.replace(/<.*?>/g, \"\")   // strip HTML\n\t\t\t\t.replace(/^\\s+|\\s+$/g,\"\"); // trim\n\n\t\t\treturn conf.columnText ?\n\t\t\t\tconf.columnText( dt, idx, title ) :\n\t\t\t\ttitle;\n\t\t}\n\t},\n\n\n\tcolvisRestore: {\n\t\tclassName: 'buttons-colvisRestore',\n\n\t\ttext: function ( dt ) {\n\t\t\treturn dt.i18n( 'buttons.colvisRestore', 'Restore visibility' );\n\t\t},\n\n\t\tinit: function ( dt, button, conf ) {\n\t\t\tconf._visOriginal = dt.columns().indexes().map( function ( idx ) {\n\t\t\t\treturn dt.column( idx ).visible();\n\t\t\t} ).toArray();\n\t\t},\n\n\t\taction: function ( e, dt, button, conf ) {\n\t\t\tdt.columns().every( function ( i ) {\n\t\t\t\t// Take into account that ColReorder might have disrupted our\n\t\t\t\t// indexes\n\t\t\t\tvar idx = dt.colReorder && dt.colReorder.transpose ?\n\t\t\t\t\tdt.colReorder.transpose( i, 'toOriginal' ) :\n\t\t\t\t\ti;\n\n\t\t\t\tthis.visible( conf._visOriginal[ idx ] );\n\t\t\t} );\n\t\t}\n\t},\n\n\n\tcolvisGroup: {\n\t\tclassName: 'buttons-colvisGroup',\n\n\t\taction: function ( e, dt, button, conf ) {\n\t\t\tdt.columns( conf.show ).visible( true, false );\n\t\t\tdt.columns( conf.hide ).visible( false, false );\n\n\t\t\tdt.columns.adjust();\n\t\t},\n\n\t\tshow: [],\n\n\t\thide: []\n\t}\n} );\n\n\nreturn DataTable.Buttons;\n}));\n"],"names":["$","window","document","undefined","DataTable","fn","dataTable","extend","ext","buttons","colvis","dt","conf","node","buttonConf","init","n","text","i18n","className","closeButton","columns","columnText","on","namespace","e","settings","details","button","collectionRebuild","columnsToggle","indexes","map","idx","toArray","columnToggle","columnsVisibility","visibility","columnVisibility","_columnText","action","col","curr","visible","length","that","this","attr","bDestroying","nTable","active","column","destroying","count","destroy","off","index","title","aoColumns","sTitle","header","innerHTML","replace","colvisRestore","_visOriginal","every","i","colReorder","transpose","colvisGroup","show","hide","adjust","Buttons","factory"],"sourceRoot":""}