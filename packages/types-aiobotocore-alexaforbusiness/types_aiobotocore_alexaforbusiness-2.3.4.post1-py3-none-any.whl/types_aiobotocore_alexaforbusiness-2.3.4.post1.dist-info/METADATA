Metadata-Version: 2.1
Name: types-aiobotocore-alexaforbusiness
Version: 2.3.4.post1
Summary: Type annotations for aiobotocore.AlexaForBusiness 2.3.4 service generated with mypy-boto3-builder 7.8.0
Home-page: https://github.com/youtype/mypy_boto3_builder
Author: Vlad Emelianov
Author-email: vlad.emelianov.nz@gmail.com
License: MIT License
Project-URL: Documentation, https://youtype.github.io/types_aiobotocore_docs/types_aiobotocore_alexaforbusiness/
Project-URL: Source, https://github.com/youtype/mypy_boto3_builder
Project-URL: Tracker, https://github.com/youtype/mypy_boto3_builder/issues
Keywords: aiobotocore alexaforbusiness type-annotations boto3-stubs mypy typeshed autocomplete
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Environment :: Console
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Typing :: Typed
Requires-Python: >=3.6
Description-Content-Type: text/markdown
Requires-Dist: typing-extensions (>=4.1.0)

<a id="types-aiobotocore-alexaforbusiness"></a>

# types-aiobotocore-alexaforbusiness

[![PyPI - types-aiobotocore-alexaforbusiness](https://img.shields.io/pypi/v/types-aiobotocore-alexaforbusiness.svg?color=blue)](https://pypi.org/project/types-aiobotocore-alexaforbusiness)
[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/types-aiobotocore-alexaforbusiness.svg?color=blue)](https://pypi.org/project/types-aiobotocore-alexaforbusiness)
[![Docs](https://img.shields.io/readthedocs/mypy-boto3-builder.svg?color=blue)](https://mypy-boto3-builder.readthedocs.io/)
[![PyPI - Downloads](https://img.shields.io/pypi/dm/types-aiobotocore-alexaforbusiness?color=blue)](https://pypistats.org/packages/types-aiobotocore-alexaforbusiness)

![boto3.typed](https://github.com/youtype/mypy_boto3_builder/raw/main/logo.png)

Type annotations for
[aiobotocore.AlexaForBusiness 2.3.4](https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/alexaforbusiness.html#AlexaForBusiness)
service compatible with [VSCode](https://code.visualstudio.com/),
[PyCharm](https://www.jetbrains.com/pycharm/),
[Emacs](https://www.gnu.org/software/emacs/),
[Sublime Text](https://www.sublimetext.com/),
[mypy](https://github.com/python/mypy),
[pyright](https://github.com/microsoft/pyright) and other tools.

Generated by
[mypy-boto3-builder 7.8.0](https://github.com/youtype/mypy_boto3_builder).

More information can be found on
[types-aiobotocore](https://pypi.org/project/types-aiobotocore/) page and in
[types-aiobotocore-alexaforbusiness docs](https://youtype.github.io/types_aiobotocore_docs/types_aiobotocore_alexaforbusiness/).

See how it helps to find and fix potential bugs:

![boto3-stubs demo](https://github.com/youtype/mypy_boto3_builder/raw/main/demo.gif)

- [types-aiobotocore-alexaforbusiness](#types-aiobotocore-alexaforbusiness)
  - [How to install](#how-to-install)
    - [VSCode extension](#vscode-extension)
    - [From PyPI with pip](#from-pypi-with-pip)
  - [How to uninstall](#how-to-uninstall)
  - [Usage](#usage)
    - [VSCode](#vscode)
    - [PyCharm](#pycharm)
    - [Emacs](#emacs)
    - [Sublime Text](#sublime-text)
    - [Other IDEs](#other-ides)
    - [mypy](#mypy)
    - [pyright](#pyright)
  - [Explicit type annotations](#explicit-type-annotations)
    - [Client annotations](#client-annotations)
    - [Paginators annotations](#paginators-annotations)

<a id="how-to-install"></a>

## How to install

<a id="vscode-extension"></a>

### VSCode extension

Add
[AWS Boto3](https://marketplace.visualstudio.com/items?itemName=Boto3typed.boto3-ide)
extension to your VSCode and run `AWS boto3: Quick Start` command.

Click `Modify` and select `boto3 common` and `AlexaForBusiness`.

<a id="from-pypi-with-pip"></a>

### From PyPI with pip

Install `types-aiobotocore` for `AlexaForBusiness` service.

```bash
# install with aiobotocore type annotations
python -m pip install 'types-aiobotocore[alexaforbusiness]'


# Lite version does not provide session.client/resource overloads
# it is more RAM-friendly, but requires explicit type annotations
python -m pip install 'types-aiobotocore-lite[alexaforbusiness]'


# standalone installation
python -m pip install types-aiobotocore-alexaforbusiness
```

<a id="how-to-uninstall"></a>

## How to uninstall

```bash
python -m pip uninstall -y types-aiobotocore-alexaforbusiness
```

<a id="usage"></a>

## Usage

<a id="vscode"></a>

### VSCode

- Install
  [Python extension](https://marketplace.visualstudio.com/items?itemName=ms-python.python)
- Install
  [Pylance extension](https://marketplace.visualstudio.com/items?itemName=ms-python.vscode-pylance)
- Set `Pylance` as your Python Language Server
- Install `types-aiobotocore[alexaforbusiness]` in your environment:

```bash
python -m pip install 'types-aiobotocore[alexaforbusiness]'
```

Both type checking and code completion should now work. No explicit type
annotations required, write your `aiobotocore` code as usual.

<a id="pycharm"></a>

### PyCharm

Install `types-aiobotocore-lite[alexaforbusiness]` in your environment:

```bash
python -m pip install 'types-aiobotocore-lite[alexaforbusiness]'`
```

Both type checking and code completion should now work. Explicit type
annotations **are required**.

Use `types-aiobotocore` package instead for implicit type discovery.

<a id="emacs"></a>

### Emacs

- Install `types-aiobotocore` with services you use in your environment:

```bash
python -m pip install 'types-aiobotocore[alexaforbusiness]'
```

- Install [use-package](https://github.com/jwiegley/use-package),
  [lsp](https://github.com/emacs-lsp/lsp-mode/),
  [company](https://github.com/company-mode/company-mode) and
  [flycheck](https://github.com/flycheck/flycheck) packages
- Install [lsp-pyright](https://github.com/emacs-lsp/lsp-pyright) package

```elisp
(use-package lsp-pyright
  :ensure t
  :hook (python-mode . (lambda ()
                          (require 'lsp-pyright)
                          (lsp)))  ; or lsp-deferred
  :init (when (executable-find "python3")
          (setq lsp-pyright-python-executable-cmd "python3"))
  )
```

- Make sure emacs uses the environment where you have installed
  `types-aiobotocore`

Type checking should now work. No explicit type annotations required, write
your `aiobotocore` code as usual.

<a id="sublime-text"></a>

### Sublime Text

- Install `types-aiobotocore[alexaforbusiness]` with services you use in your
  environment:

```bash
python -m pip install 'types-aiobotocore[alexaforbusiness]'
```

- Install [LSP-pyright](https://github.com/sublimelsp/LSP-pyright) package

Type checking should now work. No explicit type annotations required, write
your `aiobotocore` code as usual.

<a id="other-ides"></a>

### Other IDEs

Not tested, but as long as your IDE supports `mypy` or `pyright`, everything
should work.

<a id="mypy"></a>

### mypy

- Install `mypy`: `python -m pip install mypy`
- Install `types-aiobotocore[alexaforbusiness]` in your environment:

```bash
python -m pip install 'types-aiobotocore[alexaforbusiness]'`
```

Type checking should now work. No explicit type annotations required, write
your `aiobotocore` code as usual.

<a id="pyright"></a>

### pyright

- Install `pyright`: `npm i -g pyright`
- Install `types-aiobotocore[alexaforbusiness]` in your environment:

```bash
python -m pip install 'types-aiobotocore[alexaforbusiness]'
```

Optionally, you can install `types-aiobotocore` to `typings` folder.

Type checking should now work. No explicit type annotations required, write
your `aiobotocore` code as usual.

<a id="explicit-type-annotations"></a>

## Explicit type annotations

<a id="client-annotations"></a>

### Client annotations

`AlexaForBusinessClient` provides annotations for
`session.create_client("alexaforbusiness")`.

```python
from aiobotocore.session import get_session

from types_aiobotocore_alexaforbusiness import AlexaForBusinessClient

session = get_session()
async with session.create_client("alexaforbusiness") as client:
    client: AlexaForBusinessClient
    # now client usage is checked by mypy and IDE should provide code completion
```

<a id="paginators-annotations"></a>

### Paginators annotations

`types_aiobotocore_alexaforbusiness.paginator` module contains type annotations
for all paginators.

````python
from aiobotocore.session import get_session

from types_aiobotocore_alexaforbusiness import AlexaForBusinessClient
from types_aiobotocore_alexaforbusiness.paginator import (
    ListBusinessReportSchedulesPaginator,
    ListConferenceProvidersPaginator,
    ListDeviceEventsPaginator,
    ListSkillsPaginator,
    ListSkillsStoreCategoriesPaginator,
    ListSkillsStoreSkillsByCategoryPaginator,
    ListSmartHomeAppliancesPaginator,
    ListTagsPaginator,
    SearchDevicesPaginator,
    SearchProfilesPaginator,
    SearchRoomsPaginator,
    SearchSkillGroupsPaginator,
    SearchUsersPaginator,
)

session = get_session()
async with session.create_client("alexaforbusiness") as client:
    client: AlexaForBusinessClient

    # Explicit type annotations are optional here
    # Type should be correctly discovered by mypy and IDEs
    # VSCode requires explicit type annotations
        list_business_report_schedules_paginator: ListBusinessReportSchedulesPaginator = client.get_paginator("list_business_report_schedules")
        list_conference_providers_paginator: ListConferenceProvidersPaginator = client.get_paginator("list_conference_providers")
        list_device_events_paginator: ListDeviceEventsPaginator = client.get_paginator("list_device_events")
        list_skills_paginator: ListSkillsPaginator = client.get_paginator("list_skills")
        list_skills_store_categories_paginator: ListSkillsStoreCategoriesPaginator = client.get_paginator("list_skills_store_categories")
        list_skills_store_skills_by_category_paginator: ListSkillsStoreSkillsByCategoryPaginator = client.get_paginator("list_skills_store_skills_by_category")
        list_smart_home_appliances_paginator: ListSmartHomeAppliancesPaginator = client.get_paginator("list_smart_home_appliances")
        list_tags_paginator: ListTagsPaginator = client.get_paginator("list_tags")
        search_devices_paginator: SearchDevicesPaginator = client.get_paginator("search_devices")
        search_profiles_paginator: SearchProfilesPaginator = client.get_paginator("search_profiles")
        search_rooms_paginator: SearchRoomsPaginator = client.get_paginator("search_rooms")
        search_skill_groups_paginator: SearchSkillGroupsPaginator = client.get_paginator("search_skill_groups")
        search_users_paginator: SearchUsersPaginator = client.get_paginator("search_users")
    ```







### Literals

`types_aiobotocore_alexaforbusiness.literals` module contains literals extracted from shapes
that can be used in user code for type checking.

```python
from types_aiobotocore_alexaforbusiness.literals import (
    BusinessReportFailureCodeType,
    BusinessReportFormatType,
    BusinessReportIntervalType,
    BusinessReportStatusType,
    CommsProtocolType,
    ConferenceProviderTypeType,
    ConnectionStatusType,
    DeviceEventTypeType,
    DeviceStatusDetailCodeType,
    DeviceStatusType,
    DeviceUsageTypeType,
    DistanceUnitType,
    EnablementTypeFilterType,
    EnablementTypeType,
    EndOfMeetingReminderTypeType,
    EnrollmentStatusType,
    FeatureType,
    ListBusinessReportSchedulesPaginatorName,
    ListConferenceProvidersPaginatorName,
    ListDeviceEventsPaginatorName,
    ListSkillsPaginatorName,
    ListSkillsStoreCategoriesPaginatorName,
    ListSkillsStoreSkillsByCategoryPaginatorName,
    ListSmartHomeAppliancesPaginatorName,
    ListTagsPaginatorName,
    LocaleType,
    NetworkEapMethodType,
    NetworkSecurityTypeType,
    PhoneNumberTypeType,
    RequirePinType,
    SearchDevicesPaginatorName,
    SearchProfilesPaginatorName,
    SearchRoomsPaginatorName,
    SearchSkillGroupsPaginatorName,
    SearchUsersPaginatorName,
    SipTypeType,
    SkillTypeFilterType,
    SkillTypeType,
    SortValueType,
    TemperatureUnitType,
    WakeWordType,
    AlexaForBusinessServiceName,
    ServiceName,
    ResourceServiceName,
    PaginatorName,
    RegionName,
)

def check_value(value: BusinessReportFailureCodeType) -> bool:
    ...
````

### Typed dictionaries

`types_aiobotocore_alexaforbusiness.type_defs` module contains structures and
shapes assembled to typed dictionaries for additional type checking.

```python
from types_aiobotocore_alexaforbusiness.type_defs import (
    AddressBookDataTypeDef,
    AddressBookTypeDef,
    ApproveSkillRequestRequestTypeDef,
    AssociateContactWithAddressBookRequestRequestTypeDef,
    AssociateDeviceWithNetworkProfileRequestRequestTypeDef,
    AssociateDeviceWithRoomRequestRequestTypeDef,
    AssociateSkillGroupWithRoomRequestRequestTypeDef,
    AssociateSkillWithSkillGroupRequestRequestTypeDef,
    AssociateSkillWithUsersRequestRequestTypeDef,
    AudioTypeDef,
    BusinessReportContentRangeTypeDef,
    BusinessReportRecurrenceTypeDef,
    BusinessReportS3LocationTypeDef,
    CategoryTypeDef,
    ConferencePreferenceTypeDef,
    IPDialInTypeDef,
    MeetingSettingTypeDef,
    PSTNDialInTypeDef,
    PhoneNumberTypeDef,
    SipAddressTypeDef,
    SsmlTypeDef,
    TextTypeDef,
    TagTypeDef,
    ResponseMetadataTypeDef,
    CreateEndOfMeetingReminderTypeDef,
    CreateInstantBookingTypeDef,
    CreateRequireCheckInTypeDef,
    DeleteAddressBookRequestRequestTypeDef,
    DeleteBusinessReportScheduleRequestRequestTypeDef,
    DeleteConferenceProviderRequestRequestTypeDef,
    DeleteContactRequestRequestTypeDef,
    DeleteDeviceRequestRequestTypeDef,
    DeleteDeviceUsageDataRequestRequestTypeDef,
    DeleteGatewayGroupRequestRequestTypeDef,
    DeleteNetworkProfileRequestRequestTypeDef,
    DeleteProfileRequestRequestTypeDef,
    DeleteRoomRequestRequestTypeDef,
    DeleteRoomSkillParameterRequestRequestTypeDef,
    DeleteSkillAuthorizationRequestRequestTypeDef,
    DeleteSkillGroupRequestRequestTypeDef,
    DeleteUserRequestRequestTypeDef,
    DeveloperInfoTypeDef,
    DeviceEventTypeDef,
    DeviceNetworkProfileInfoTypeDef,
    DeviceStatusDetailTypeDef,
    DisassociateContactFromAddressBookRequestRequestTypeDef,
    DisassociateDeviceFromRoomRequestRequestTypeDef,
    DisassociateSkillFromSkillGroupRequestRequestTypeDef,
    DisassociateSkillFromUsersRequestRequestTypeDef,
    DisassociateSkillGroupFromRoomRequestRequestTypeDef,
    EndOfMeetingReminderTypeDef,
    FilterTypeDef,
    ForgetSmartHomeAppliancesRequestRequestTypeDef,
    GatewayGroupSummaryTypeDef,
    GatewayGroupTypeDef,
    GatewaySummaryTypeDef,
    GatewayTypeDef,
    GetAddressBookRequestRequestTypeDef,
    GetConferenceProviderRequestRequestTypeDef,
    GetContactRequestRequestTypeDef,
    GetDeviceRequestRequestTypeDef,
    GetGatewayGroupRequestRequestTypeDef,
    GetGatewayRequestRequestTypeDef,
    GetNetworkProfileRequestRequestTypeDef,
    NetworkProfileTypeDef,
    GetProfileRequestRequestTypeDef,
    GetRoomRequestRequestTypeDef,
    RoomTypeDef,
    GetRoomSkillParameterRequestRequestTypeDef,
    RoomSkillParameterTypeDef,
    GetSkillGroupRequestRequestTypeDef,
    SkillGroupTypeDef,
    InstantBookingTypeDef,
    PaginatorConfigTypeDef,
    ListBusinessReportSchedulesRequestRequestTypeDef,
    ListConferenceProvidersRequestRequestTypeDef,
    ListDeviceEventsRequestRequestTypeDef,
    ListGatewayGroupsRequestRequestTypeDef,
    ListGatewaysRequestRequestTypeDef,
    ListSkillsRequestRequestTypeDef,
    SkillSummaryTypeDef,
    ListSkillsStoreCategoriesRequestRequestTypeDef,
    ListSkillsStoreSkillsByCategoryRequestRequestTypeDef,
    ListSmartHomeAppliancesRequestRequestTypeDef,
    SmartHomeApplianceTypeDef,
    ListTagsRequestRequestTypeDef,
    RequireCheckInTypeDef,
    NetworkProfileDataTypeDef,
    ProfileDataTypeDef,
    PutInvitationConfigurationRequestRequestTypeDef,
    PutSkillAuthorizationRequestRequestTypeDef,
    RejectSkillRequestRequestTypeDef,
    ResolveRoomRequestRequestTypeDef,
    RevokeInvitationRequestRequestTypeDef,
    RoomDataTypeDef,
    SortTypeDef,
    SkillGroupDataTypeDef,
    UserDataTypeDef,
    SendInvitationRequestRequestTypeDef,
    StartDeviceSyncRequestRequestTypeDef,
    StartSmartHomeApplianceDiscoveryRequestRequestTypeDef,
    UntagResourceRequestRequestTypeDef,
    UpdateAddressBookRequestRequestTypeDef,
    UpdateDeviceRequestRequestTypeDef,
    UpdateEndOfMeetingReminderTypeDef,
    UpdateGatewayGroupRequestRequestTypeDef,
    UpdateGatewayRequestRequestTypeDef,
    UpdateInstantBookingTypeDef,
    UpdateRequireCheckInTypeDef,
    UpdateNetworkProfileRequestRequestTypeDef,
    UpdateRoomRequestRequestTypeDef,
    UpdateSkillGroupRequestRequestTypeDef,
    UpdateBusinessReportScheduleRequestRequestTypeDef,
    BusinessReportTypeDef,
    PutConferencePreferenceRequestRequestTypeDef,
    ConferenceProviderTypeDef,
    UpdateConferenceProviderRequestRequestTypeDef,
    ContactDataTypeDef,
    ContactTypeDef,
    UpdateContactRequestRequestTypeDef,
    ContentTypeDef,
    CreateAddressBookRequestRequestTypeDef,
    CreateBusinessReportScheduleRequestRequestTypeDef,
    CreateConferenceProviderRequestRequestTypeDef,
    CreateContactRequestRequestTypeDef,
    CreateGatewayGroupRequestRequestTypeDef,
    CreateNetworkProfileRequestRequestTypeDef,
    CreateRoomRequestRequestTypeDef,
    CreateSkillGroupRequestRequestTypeDef,
    CreateUserRequestRequestTypeDef,
    RegisterAVSDeviceRequestRequestTypeDef,
    TagResourceRequestRequestTypeDef,
    CreateAddressBookResponseTypeDef,
    CreateBusinessReportScheduleResponseTypeDef,
    CreateConferenceProviderResponseTypeDef,
    CreateContactResponseTypeDef,
    CreateGatewayGroupResponseTypeDef,
    CreateNetworkProfileResponseTypeDef,
    CreateProfileResponseTypeDef,
    CreateRoomResponseTypeDef,
    CreateSkillGroupResponseTypeDef,
    CreateUserResponseTypeDef,
    GetAddressBookResponseTypeDef,
    GetConferencePreferenceResponseTypeDef,
    GetInvitationConfigurationResponseTypeDef,
    ListSkillsStoreCategoriesResponseTypeDef,
    ListTagsResponseTypeDef,
    RegisterAVSDeviceResponseTypeDef,
    SearchAddressBooksResponseTypeDef,
    SendAnnouncementResponseTypeDef,
    CreateMeetingRoomConfigurationTypeDef,
    SkillDetailsTypeDef,
    ListDeviceEventsResponseTypeDef,
    DeviceStatusInfoTypeDef,
    ListGatewayGroupsResponseTypeDef,
    GetGatewayGroupResponseTypeDef,
    ListGatewaysResponseTypeDef,
    GetGatewayResponseTypeDef,
    GetNetworkProfileResponseTypeDef,
    GetRoomResponseTypeDef,
    GetRoomSkillParameterResponseTypeDef,
    PutRoomSkillParameterRequestRequestTypeDef,
    ResolveRoomResponseTypeDef,
    GetSkillGroupResponseTypeDef,
    ListBusinessReportSchedulesRequestListBusinessReportSchedulesPaginateTypeDef,
    ListConferenceProvidersRequestListConferenceProvidersPaginateTypeDef,
    ListDeviceEventsRequestListDeviceEventsPaginateTypeDef,
    ListSkillsRequestListSkillsPaginateTypeDef,
    ListSkillsStoreCategoriesRequestListSkillsStoreCategoriesPaginateTypeDef,
    ListSkillsStoreSkillsByCategoryRequestListSkillsStoreSkillsByCategoryPaginateTypeDef,
    ListSmartHomeAppliancesRequestListSmartHomeAppliancesPaginateTypeDef,
    ListTagsRequestListTagsPaginateTypeDef,
    ListSkillsResponseTypeDef,
    ListSmartHomeAppliancesResponseTypeDef,
    MeetingRoomConfigurationTypeDef,
    SearchNetworkProfilesResponseTypeDef,
    SearchProfilesResponseTypeDef,
    SearchRoomsResponseTypeDef,
    SearchAddressBooksRequestRequestTypeDef,
    SearchContactsRequestRequestTypeDef,
    SearchDevicesRequestRequestTypeDef,
    SearchDevicesRequestSearchDevicesPaginateTypeDef,
    SearchNetworkProfilesRequestRequestTypeDef,
    SearchProfilesRequestRequestTypeDef,
    SearchProfilesRequestSearchProfilesPaginateTypeDef,
    SearchRoomsRequestRequestTypeDef,
    SearchRoomsRequestSearchRoomsPaginateTypeDef,
    SearchSkillGroupsRequestRequestTypeDef,
    SearchSkillGroupsRequestSearchSkillGroupsPaginateTypeDef,
    SearchUsersRequestRequestTypeDef,
    SearchUsersRequestSearchUsersPaginateTypeDef,
    SearchSkillGroupsResponseTypeDef,
    SearchUsersResponseTypeDef,
    UpdateMeetingRoomConfigurationTypeDef,
    BusinessReportScheduleTypeDef,
    GetConferenceProviderResponseTypeDef,
    ListConferenceProvidersResponseTypeDef,
    SearchContactsResponseTypeDef,
    GetContactResponseTypeDef,
    SendAnnouncementRequestRequestTypeDef,
    CreateProfileRequestRequestTypeDef,
    SkillsStoreSkillTypeDef,
    DeviceDataTypeDef,
    DeviceTypeDef,
    ProfileTypeDef,
    UpdateProfileRequestRequestTypeDef,
    ListBusinessReportSchedulesResponseTypeDef,
    ListSkillsStoreSkillsByCategoryResponseTypeDef,
    SearchDevicesResponseTypeDef,
    GetDeviceResponseTypeDef,
    GetProfileResponseTypeDef,
)

def get_structure() -> AddressBookDataTypeDef:
    return {
      ...
    }
```

## How it works

Fully automated
[mypy-boto3-builder](https://github.com/youtype/mypy_boto3_builder) carefully
generates type annotations for each service, patiently waiting for
`aiobotocore` updates. It delivers a drop-in type annotations for you and makes
sure that:

- All available `aiobotocore` services are covered.
- Each public class and method of every `aiobotocore` service gets valid type
  annotations extracted from the documentation (blame `botocore` docs if types
  are incorrect).
- Type annotations include up-to-date documentation.
- Link to documentation is provided for every method.
- Code is processed by [black](https://github.com/psf/black) and
  [isort](https://github.com/PyCQA/isort) for readability.

## What's new

### Implemented features

- Fully type annotated `boto3`, `botocore` and `aiobotocore` libraries
- `mypy`, `pyright`, `VSCode`, `PyCharm`, `Sublime Text` and `Emacs`
  compatibility
- `Client`, `ServiceResource`, `Resource`, `Waiter` `Paginator` type
  annotations for each service
- Generated `TypeDefs` for each service
- Generated `Literals` for each service
- Auto discovery of types for `boto3.client` and `boto3.session` calls
- Auto discovery of types for `session.client` and `session.session` calls
- Auto discovery of types for `client.get_waiter` and `client.get_paginator`
  calls
- Auto discovery of types for `ServiceResource` and `Resource` collections
- Auto discovery of types for `aiobotocore.Session.create_client` calls

### Latest changes

Builder changelog can be found in
[Releases](https://github.com/youtype/mypy_boto3_builder/releases).

## Versioning

`types-aiobotocore-alexaforbusiness` version is the same as related
`aiobotocore` version and follows
[PEP 440](https://www.python.org/dev/peps/pep-0440/) format.

## Thank you

- [Allie Fitter](https://github.com/alliefitter) for
  [boto3-type-annotations](https://pypi.org/project/boto3-type-annotations/),
  this package is based on top of his work
- [black](https://github.com/psf/black) developers for an awesome formatting
  tool
- [Timothy Edmund Crosley](https://github.com/timothycrosley) for
  [isort](https://github.com/PyCQA/isort) and how flexible it is
- [mypy](https://github.com/python/mypy) developers for doing all dirty work
  for us
- [pyright](https://github.com/microsoft/pyright) team for the new era of typed
  Python

## Documentation

All services type annotations can be found in
[aiobotocore docs](https://youtype.github.io/types_aiobotocore_docs/types_aiobotocore_alexaforbusiness/)

## Support and contributing

This package is auto-generated. Please reports any bugs or request new features
in [mypy-boto3-builder](https://github.com/youtype/mypy_boto3_builder/issues/)
repository.


