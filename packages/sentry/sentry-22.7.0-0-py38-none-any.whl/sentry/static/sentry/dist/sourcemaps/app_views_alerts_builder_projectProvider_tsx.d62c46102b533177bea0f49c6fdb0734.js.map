{"version":3,"file":"chunks/app_views_alerts_builder_projectProvider_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"yrBAuBA,SAASA,EAA4BC,GAAc,MACjD,MAAMC,GAAMC,EAAAA,EAAAA,MACZC,EAAAA,EAAAA,GAAe,CAACC,SAAUJ,EAAMI,WAEhC,MAAM,SAACC,EAAD,OAAWC,EAAX,aAAmBC,KAAiBC,GAASR,EAC7CS,EAAYH,EAAOG,WAAaT,EAAMI,SAASM,MAAMC,QACrDC,EAAmBL,EAAaM,SAASC,SAAS,mBAClDC,EAAkBH,QAAkCI,IAAdP,GAGtC,SAACQ,EAAD,gBAAWC,EAAX,SAA4BC,EAA5B,WAAsCC,IAAcC,EAAAA,EAAAA,GACxDN,OACIC,EACA,CACEM,MAAO,CAACb,KAGVE,EAAUI,EAAe,UAC3BE,EAASM,MAAKC,GAAKA,EAAEC,kBADM,QACQR,EAASS,QAAUT,EAAS,GAC/DA,EAASM,MAAK,QAAC,KAACI,GAAF,SAAYA,IAASlB,KAWvC,OATAmB,EAAAA,EAAAA,YAAU,KACHjB,IAKLkB,EAAAA,EAAAA,IAAgB5B,EAAKM,EAAaoB,KAAM,CAAChB,EAAQmB,OAChD,CAAC7B,EAAKM,EAAcI,KAElBO,GAAmBC,GACf,QAAC,IAAD,KAIJR,GAAYS,IACfW,EAAAA,EAAAA,GACEnB,EACK,kBAAiBL,EAAaoB,gCAAgC3B,EAAMI,SAASM,MAAMsB,8BACnF,kBAAiBzB,EAAaoB,2CAA2C3B,EAAMI,SAASM,MAAMsB,WACnGhC,EAAMiC,SAKLtB,GAAWS,GAEZ,QAAC,IAAD,CAAOc,KAAK,UAAZ,UAAuBC,EAAAA,EAAAA,GAAE,sDAK3B,QAAC,EAAAC,SAAD,UACG/B,IAAYgC,EAAAA,EAAAA,gBAAehC,IACxBiC,EAAAA,EAAAA,cAAajC,EAAU,IAClBG,KACAH,EAASL,MACZW,QAAAA,EACAF,UAAWM,EAAkBJ,EAAQgB,KAAOlB,EAC5CF,aAAAA,IAEFF,KA7DDN,EAAAA,YAAAA,8BAkET","sources":["webpack:///./app/views/alerts/builder/projectProvider.tsx"],"sourcesContent":["import {cloneElement, Fragment, isValidElement, useEffect} from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport {fetchOrgMembers} from 'sentry/actionCreators/members';\nimport {navigateTo} from 'sentry/actionCreators/navigation';\nimport Alert from 'sentry/components/alert';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport useApi from 'sentry/utils/useApi';\nimport useProjects from 'sentry/utils/useProjects';\nimport useScrollToTop from 'sentry/utils/useScrollToTop';\n\ntype Props = RouteComponentProps<RouteParams, {}> & {\n  hasMetricAlerts: boolean;\n  organization: Organization;\n  children?: React.ReactNode;\n};\n\ntype RouteParams = {\n  projectId?: string;\n};\n\nfunction AlertBuilderProjectProvider(props: Props) {\n  const api = useApi();\n  useScrollToTop({location: props.location});\n\n  const {children, params, organization, ...other} = props;\n  const projectId = params.projectId || props.location.query.project;\n  const hasAlertWizardV3 = organization.features.includes('alert-wizard-v3');\n  const useFirstProject = hasAlertWizardV3 && projectId === undefined;\n\n  // calling useProjects() without args fetches all projects\n  const {projects, initiallyLoaded, fetching, fetchError} = useProjects(\n    useFirstProject\n      ? undefined\n      : {\n          slugs: [projectId],\n        }\n  );\n  const project = useFirstProject\n    ? projects.find(p => p.isMember) ?? (projects.length && projects[0])\n    : projects.find(({slug}) => slug === projectId);\n\n  useEffect(() => {\n    if (!project) {\n      return;\n    }\n\n    // fetch members list for mail action fields\n    fetchOrgMembers(api, organization.slug, [project.id]);\n  }, [api, organization, project]);\n\n  if (!initiallyLoaded || fetching) {\n    return <LoadingIndicator />;\n  }\n\n  // If there's no project show the project selector modal\n  if (!project && !fetchError) {\n    navigateTo(\n      hasAlertWizardV3\n        ? `/organizations/${organization.slug}/alerts/wizard/?referrer=${props.location.query.referrer}&project=:projectId`\n        : `/organizations/${organization.slug}/alerts/:projectId/wizard/?referrer=${props.location.query.referrer}`,\n      props.router\n    );\n  }\n\n  // if loaded, but project fetching states incomplete or project can't be found, project doesn't exist\n  if (!project || fetchError) {\n    return (\n      <Alert type=\"warning\">{t('The project you were looking for was not found.')}</Alert>\n    );\n  }\n\n  return (\n    <Fragment>\n      {children && isValidElement(children)\n        ? cloneElement(children, {\n            ...other,\n            ...children.props,\n            project,\n            projectId: useFirstProject ? project.slug : projectId,\n            organization,\n          })\n        : children}\n    </Fragment>\n  );\n}\n\nexport default AlertBuilderProjectProvider;\n"],"names":["AlertBuilderProjectProvider","props","api","useApi","useScrollToTop","location","children","params","organization","other","projectId","query","project","hasAlertWizardV3","features","includes","useFirstProject","undefined","projects","initiallyLoaded","fetching","fetchError","useProjects","slugs","find","p","isMember","length","slug","useEffect","fetchOrgMembers","id","navigateTo","referrer","router","type","t","Fragment","isValidElement","cloneElement"],"sourceRoot":""}