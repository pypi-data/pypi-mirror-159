{"version":3,"file":"chunks/app_views_releases_detail_commitsAndFiles_filesChanged_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/fileIcon.tsx","webpack:///./app/components/listGroup.tsx","webpack:///./app/components/fileChange.tsx","webpack:///./app/views/releases/detail/commitsAndFiles/filesChanged.tsx"],"sourcesContent":["import {IconFile} from 'sentry/icons';\nimport {fileExtensionToPlatform, getFileExtension} from 'sentry/utils/fileExtension';\nimport theme from 'sentry/utils/theme';\n\ntype Props = {\n  fileName: string;\n  className?: string;\n  size?: string;\n};\n\nconst FileIcon = ({fileName, size: providedSize = 'sm', className}: Props) => {\n  const fileExtension = getFileExtension(fileName);\n  const iconName = fileExtension ? fileExtensionToPlatform(fileExtension) : null;\n  const size = theme.iconSizes[providedSize] ?? providedSize;\n\n  if (!iconName) {\n    return <IconFile size={size} className={className} />;\n  }\n\n  return (\n    <img\n      src={require(`platformicons/svg/${iconName}.svg`)}\n      width={size}\n      height={size}\n      className={className}\n    />\n  );\n};\n\nexport default FileIcon;\n","import styled from '@emotion/styled';\n\nimport space from 'sentry/styles/space';\n\ntype ListGroupProps = {\n  striped?: boolean;\n};\n\ntype ListGroupItemProps = {\n  centered?: boolean;\n};\n\nconst ListGroupItem = styled('li')<ListGroupItemProps>`\n  position: relative;\n  display: block;\n  min-height: 36px;\n  border: 1px solid ${p => p.theme.border};\n\n  padding: ${space(0.5)} ${space(1.5)};\n\n  margin-bottom: -1px;\n  ${p => (p.centered ? 'text-align: center;' : '')}\n\n  &:first-child {\n    border-top-left-radius: ${p => p.theme.borderRadius};\n    border-top-right-radius: ${p => p.theme.borderRadius};\n  }\n  &:last-child {\n    border-bottom-left-radius: ${p => p.theme.borderRadius};\n    border-bottom-right-radius: ${p => p.theme.borderRadius};\n  }\n`;\n\nconst ListGroup = styled('ul')<ListGroupProps>`\n  box-shadow: 0 1px 0px rgba(0, 0, 0, 0.03);\n  background: ${p => p.theme.background};\n  padding: 0;\n  margin: 0;\n\n  ${p =>\n    p.striped\n      ? `\n    & > li:nth-child(odd) {\n      background: ${p.theme.backgroundSecondary};\n    }\n  `\n      : ''}\n`;\n\nexport {ListGroup, ListGroupItem};\n","import styled from '@emotion/styled';\n\nimport AvatarList from 'sentry/components/avatar/avatarList';\nimport FileIcon from 'sentry/components/fileIcon';\nimport {ListGroupItem} from 'sentry/components/listGroup';\nimport TextOverflow from 'sentry/components/textOverflow';\nimport space from 'sentry/styles/space';\nimport {AvatarUser, CommitAuthor} from 'sentry/types';\n\ntype Props = {\n  authors: CommitAuthor[];\n  filename: string;\n  className?: string;\n};\n\nconst FileChange = ({filename, authors, className}: Props) => (\n  <FileItem className={className}>\n    <Filename>\n      <StyledFileIcon fileName={filename} />\n      <TextOverflow>{filename}</TextOverflow>\n    </Filename>\n    <div>\n      <AvatarList users={authors as AvatarUser[]} avatarSize={25} typeMembers=\"authors\" />\n    </div>\n  </FileItem>\n);\n\nconst FileItem = styled(ListGroupItem)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Filename = styled('div')`\n  font-size: ${p => p.theme.fontSizeMedium};\n  display: grid;\n  gap: ${space(1)};\n  margin-right: ${space(3)};\n  align-items: center;\n  grid-template-columns: max-content 1fr;\n`;\n\nconst StyledFileIcon = styled(FileIcon)`\n  color: ${p => p.theme.gray200};\n  border-radius: 3px;\n`;\n\nexport default FileChange;\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport FileChange from 'sentry/components/fileChange';\nimport {Body, Main} from 'sentry/components/layouts/thirds';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport Pagination from 'sentry/components/pagination';\nimport {Panel, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport {t, tn} from 'sentry/locale';\nimport {CommitFile, Organization, Project, Repository} from 'sentry/types';\nimport {formatVersion} from 'sentry/utils/formatters';\nimport routeTitleGen from 'sentry/utils/routeTitle';\nimport AsyncView from 'sentry/views/asyncView';\n\nimport {getFilesByRepository, getQuery, getReposToRender} from '../utils';\n\nimport EmptyState from './emptyState';\nimport RepositorySwitcher from './repositorySwitcher';\nimport withReleaseRepos from './withReleaseRepos';\n\ntype Props = RouteComponentProps<{orgId: string; release: string}, {}> & {\n  location: Location;\n  orgSlug: Organization['slug'];\n  projectSlug: Project['slug'];\n  release: string;\n  releaseRepos: Repository[];\n  activeReleaseRepo?: Repository;\n} & AsyncView['props'];\n\ntype State = {\n  fileList: CommitFile[];\n} & AsyncView['state'];\n\nclass FilesChanged extends AsyncView<Props, State> {\n  getTitle() {\n    const {params, projectSlug} = this.props;\n    const {orgId} = params;\n\n    return routeTitleGen(\n      t('Files Changed - Release %s', formatVersion(params.release)),\n      orgId,\n      false,\n      projectSlug\n    );\n  }\n\n  getDefaultState(): State {\n    return {\n      ...super.getDefaultState(),\n      fileList: [],\n    };\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    if (prevProps.activeReleaseRepo?.name !== this.props.activeReleaseRepo?.name) {\n      this.remountComponent();\n      return;\n    }\n    super.componentDidUpdate(prevProps, prevState);\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {activeReleaseRepo: activeRepository, location, release, orgSlug} = this.props;\n\n    const query = getQuery({location, activeRepository});\n\n    return [\n      [\n        'fileList',\n        `/organizations/${orgSlug}/releases/${encodeURIComponent(release)}/commitfiles/`,\n        {query},\n      ],\n    ];\n  }\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderContent() {\n    const {fileList, fileListPageLinks, loading} = this.state;\n    const {activeReleaseRepo} = this.props;\n\n    if (loading) {\n      return <LoadingIndicator />;\n    }\n\n    if (!fileList.length) {\n      return (\n        <EmptyState>\n          {!activeReleaseRepo\n            ? t('There are no changed files associated with this release.')\n            : t(\n                'There are no changed files associated with this release in the %s repository.',\n                activeReleaseRepo.name\n              )}\n        </EmptyState>\n      );\n    }\n\n    const filesByRepository = getFilesByRepository(fileList);\n    const reposToRender = getReposToRender(Object.keys(filesByRepository));\n\n    return (\n      <Fragment>\n        {reposToRender.map(repoName => {\n          const repoData = filesByRepository[repoName];\n          const files = Object.keys(repoData);\n          const fileCount = files.length;\n          return (\n            <Panel key={repoName}>\n              <PanelHeader>\n                <span>{repoName}</span>\n                <span>{tn('%s file changed', '%s files changed', fileCount)}</span>\n              </PanelHeader>\n              <PanelBody>\n                {files.map(filename => {\n                  const {authors} = repoData[filename];\n                  return (\n                    <StyledFileChange\n                      key={filename}\n                      filename={filename}\n                      authors={Object.values(authors)}\n                    />\n                  );\n                })}\n              </PanelBody>\n            </Panel>\n          );\n        })}\n        <Pagination pageLinks={fileListPageLinks} />\n      </Fragment>\n    );\n  }\n\n  renderBody() {\n    const {activeReleaseRepo, releaseRepos, router, location} = this.props;\n    return (\n      <Fragment>\n        {releaseRepos.length > 1 && (\n          <RepositorySwitcher\n            repositories={releaseRepos}\n            activeRepository={activeReleaseRepo}\n            location={location}\n            router={router}\n          />\n        )}\n        {this.renderContent()}\n      </Fragment>\n    );\n  }\n\n  renderComponent() {\n    return (\n      <Body>\n        <Main fullWidth>{super.renderComponent()}</Main>\n      </Body>\n    );\n  }\n}\n\nexport default withReleaseRepos(FilesChanged);\n\nconst StyledFileChange = styled(FileChange)`\n  border-radius: 0;\n  border-left: none;\n  border-right: none;\n  border-top: none;\n  :last-child {\n    border: none;\n    border-radius: 0;\n  }\n`;\n"],"names":["FileIcon","fileName","size","providedSize","className","fileExtension","getFileExtension","iconName","fileExtensionToPlatform","theme","src","require","width","height","ListGroupItem","p","border","space","centered","borderRadius","FileChange","filename","authors","FileItem","Filename","StyledFileIcon","users","avatarSize","typeMembers","fontSizeMedium","gray200","FilesChanged","AsyncView","getTitle","params","projectSlug","this","props","orgId","routeTitleGen","t","formatVersion","release","getDefaultState","super","fileList","componentDidUpdate","prevProps","prevState","activeReleaseRepo","name","remountComponent","getEndpoints","activeRepository","location","orgSlug","query","getQuery","encodeURIComponent","renderLoading","renderBody","renderContent","fileListPageLinks","loading","state","length","filesByRepository","getFilesByRepository","reposToRender","getReposToRender","Object","keys","Fragment","map","repoName","repoData","files","fileCount","tn","StyledFileChange","values","pageLinks","releaseRepos","router","repositories","renderComponent","fullWidth","withReleaseRepos"],"sourceRoot":""}