{"version":3,"file":"chunks/app_utils_performance_vitals_constants_tsx-app_views_alerts_filterBar_tsx-app_views_alerts_li-365b31.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/utils/performance/vitals/constants.tsx","webpack:///./app/views/alerts/filterBar.tsx","webpack:///./app/views/alerts/list/header.tsx","webpack:///./app/views/alerts/list/rules/teamFilter.tsx"],"sourcesContent":["import {t} from 'sentry/locale';\nimport {measurementType, MobileVital, WebVital} from 'sentry/utils/discover/fields';\nimport {Vital} from 'sentry/utils/performance/vitals/types';\n\nexport const WEB_VITAL_DETAILS: Record<WebVital, Vital> = {\n  [WebVital.FP]: {\n    slug: 'fp',\n    name: t('First Paint'),\n    acronym: 'FP',\n    description: t(\n      'Render time of the first pixel loaded in the viewport (may overlap with FCP).'\n    ),\n    poorThreshold: 3000,\n    type: measurementType(WebVital.FP),\n  },\n  [WebVital.FCP]: {\n    slug: 'fcp',\n    name: t('First Contentful Paint'),\n    acronym: 'FCP',\n    description: t(\n      'Render time of the first image, text or other DOM node in the viewport.'\n    ),\n    poorThreshold: 3000,\n    type: measurementType(WebVital.FCP),\n  },\n  [WebVital.LCP]: {\n    slug: 'lcp',\n    name: t('Largest Contentful Paint'),\n    acronym: 'LCP',\n    description: t(\n      'Render time of the largest image, text or other DOM node in the viewport.'\n    ),\n    poorThreshold: 4000,\n    type: measurementType(WebVital.LCP),\n  },\n  [WebVital.FID]: {\n    slug: 'fid',\n    name: t('First Input Delay'),\n    acronym: 'FID',\n    description: t(\n      'Response time of the browser to a user interaction (clicking, tapping, etc).'\n    ),\n    poorThreshold: 300,\n    type: measurementType(WebVital.FID),\n  },\n  [WebVital.CLS]: {\n    slug: 'cls',\n    name: t('Cumulative Layout Shift'),\n    acronym: 'CLS',\n    description: t(\n      'Sum of layout shift scores that measure the visual stability of the page.'\n    ),\n    poorThreshold: 0.25,\n    type: measurementType(WebVital.CLS),\n  },\n  [WebVital.TTFB]: {\n    slug: 'ttfb',\n    name: t('Time to First Byte'),\n    acronym: 'TTFB',\n    description: t(\n      \"The time that it takes for a user's browser to receive the first byte of page content.\"\n    ),\n    poorThreshold: 600,\n    type: measurementType(WebVital.TTFB),\n  },\n  [WebVital.RequestTime]: {\n    slug: 'ttfb.requesttime',\n    name: t('Request Time'),\n    acronym: 'RT',\n    description: t(\n      'Captures the time spent making the request and receiving the first byte of the response.'\n    ),\n    poorThreshold: 600,\n    type: measurementType(WebVital.RequestTime),\n  },\n};\n\nexport const MOBILE_VITAL_DETAILS: Record<MobileVital, Vital> = {\n  [MobileVital.AppStartCold]: {\n    slug: 'app_start_cold',\n    name: t('App Start Cold'),\n    description: t(\n      'Cold start is a measure of the application start up time from scratch.'\n    ),\n    type: measurementType(MobileVital.AppStartCold),\n  },\n  [MobileVital.AppStartWarm]: {\n    slug: 'app_start_warm',\n    name: t('App Start Warm'),\n    description: t(\n      'Warm start is a measure of the application start up time while still in memory.'\n    ),\n    type: measurementType(MobileVital.AppStartWarm),\n  },\n  [MobileVital.FramesTotal]: {\n    slug: 'frames_total',\n    name: t('Total Frames'),\n    description: t(\n      'Total frames is a count of the number of frames recorded within a transaction.'\n    ),\n    type: measurementType(MobileVital.FramesTotal),\n  },\n  [MobileVital.FramesSlow]: {\n    slug: 'frames_slow',\n    name: t('Slow Frames'),\n    description: t(\n      'Slow frames is a count of the number of slow frames recorded within a transaction.'\n    ),\n    type: measurementType(MobileVital.FramesSlow),\n  },\n  [MobileVital.FramesFrozen]: {\n    slug: 'frames_frozen',\n    name: t('Frozen Frames'),\n    description: t(\n      'Frozen frames is a count of the number of frozen frames recorded within a transaction.'\n    ),\n    type: measurementType(MobileVital.FramesFrozen),\n  },\n  [MobileVital.FramesSlowRate]: {\n    slug: 'frames_slow_rate',\n    name: t('Slow Frames Rate'),\n    description: t(\n      'Slow Frames Rate is the percentage of frames recorded within a transaction that is considered slow.'\n    ),\n    type: measurementType(MobileVital.FramesSlowRate),\n  },\n  [MobileVital.FramesFrozenRate]: {\n    slug: 'frames_frozen_rate',\n    name: t('Frozen Frames Rate'),\n    description: t(\n      'Frozen Frames Rate is the percentage of frames recorded within a transaction that is considered frozen.'\n    ),\n    type: measurementType(MobileVital.FramesFrozenRate),\n  },\n  [MobileVital.StallCount]: {\n    slug: 'stall_count',\n    name: t('Stalls'),\n    description: t(\n      'Stalls is the number of times the application stalled within a transaction.'\n    ),\n    type: measurementType(MobileVital.StallCount),\n  },\n  [MobileVital.StallTotalTime]: {\n    slug: 'stall_total_time',\n    name: t('Total Stall Time'),\n    description: t(\n      'Stall Total Time is the total amount of time the application is stalled within a transaction.'\n    ),\n    type: measurementType(MobileVital.StallTotalTime),\n  },\n  [MobileVital.StallLongestTime]: {\n    slug: 'stall_longest_time',\n    name: t('Longest Stall Time'),\n    description: t(\n      'Stall Longest Time is the longest amount of time the application is stalled within a transaction.'\n    ),\n    type: measurementType(MobileVital.StallLongestTime),\n  },\n  [MobileVital.StallPercentage]: {\n    slug: 'stall_percentage',\n    name: t('Stall Percentage'),\n    description: t(\n      'Stall Percentage is the percentage of the transaction duration the application was stalled.'\n    ),\n    type: measurementType(MobileVital.StallPercentage),\n  },\n};\n\nexport enum Browser {\n  CHROME = 'Chrome',\n  EDGE = 'Edge',\n  OPERA = 'Opera',\n  FIREFOX = 'Firefox',\n  SAFARI = 'Safari',\n  IE = 'IE',\n}\n","import styled from '@emotion/styled';\nimport type {Location} from 'history';\n\nimport ButtonBar from 'sentry/components/buttonBar';\nimport CompactSelect from 'sentry/components/forms/compactSelect';\nimport ProjectPageFilter from 'sentry/components/projectPageFilter';\nimport SearchBar from 'sentry/components/searchBar';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\n\nimport TeamFilter from './list/rules/teamFilter';\nimport {getQueryStatus, getTeamParams} from './utils';\n\ninterface Props {\n  location: Location<any>;\n  onChangeFilter: (activeFilters: string[]) => void;\n  onChangeSearch: (query: string) => void;\n  hasStatusFilters?: boolean;\n  onChangeStatus?: (status: string) => void;\n}\n\nfunction FilterBar({\n  location,\n  onChangeSearch,\n  onChangeFilter,\n  onChangeStatus,\n  hasStatusFilters,\n}: Props) {\n  const selectedTeams = getTeamParams(location.query.team);\n  const selectedStatus = getQueryStatus(location.query.status);\n\n  return (\n    <Wrapper>\n      <FilterButtons gap={1.5}>\n        <TeamFilter selectedTeams={selectedTeams} handleChangeFilter={onChangeFilter} />\n        <ProjectPageFilter />\n        {hasStatusFilters && onChangeStatus && (\n          <CompactSelect\n            triggerProps={{\n              prefix: t('Status'),\n            }}\n            options={[\n              {\n                value: 'all',\n                label: t('All'),\n              },\n              {\n                value: 'open',\n                label: t('Active'),\n              },\n              {\n                value: 'closed',\n                label: t('Inactive'),\n              },\n            ]}\n            value={selectedStatus}\n            onChange={({value}) => onChangeStatus(value)}\n          />\n        )}\n      </FilterButtons>\n      <SearchBar\n        placeholder={t('Search by name')}\n        query={location.query?.name}\n        onSearch={onChangeSearch}\n      />\n    </Wrapper>\n  );\n}\n\nexport default FilterBar;\n\nconst Wrapper = styled('div')`\n  display: grid;\n  gap: ${space(1.5)};\n  margin-bottom: ${space(2)};\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    grid-template-columns: min-content 1fr;\n  }\n`;\n\nconst FilterButtons = styled(ButtonBar)`\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    display: flex;\n    align-items: flex-start;\n    gap: ${space(1.5)};\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    display: grid;\n    grid-auto-columns: minmax(auto, 300px);\n  }\n`;\n","import {InjectedRouter} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {navigateTo} from 'sentry/actionCreators/navigation';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport CreateAlertButton from 'sentry/components/createAlertButton';\nimport GlobalSelectionLink from 'sentry/components/globalSelectionLink';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport {IconSettings} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\n\ntype Props = {\n  activeTab: 'stream' | 'rules';\n  organization: Organization;\n  projectSlugs: string[];\n  router: InjectedRouter;\n};\n\nconst AlertHeader = ({router, organization, activeTab, projectSlugs}: Props) => {\n  /**\n   * Incidents list is currently at the organization level, but the link needs to\n   * go down to a specific project scope.\n   */\n  const handleNavigateToSettings = (e: React.MouseEvent) => {\n    e.preventDefault();\n    navigateTo(`/settings/${organization.slug}/projects/:projectId/alerts/`, router);\n  };\n\n  const alertRulesLink = (\n    <li className={activeTab === 'rules' ? 'active' : ''}>\n      <GlobalSelectionLink to={`/organizations/${organization.slug}/alerts/rules/`}>\n        {t('Alert Rules')}\n      </GlobalSelectionLink>\n    </li>\n  );\n\n  return (\n    <Layout.Header>\n      <Layout.HeaderContent>\n        <StyledLayoutTitle>{t('Alerts')}</StyledLayoutTitle>\n      </Layout.HeaderContent>\n      <Layout.HeaderActions>\n        <Actions gap={1}>\n          <CreateAlertButton\n            organization={organization}\n            iconProps={{size: 'sm'}}\n            priority=\"primary\"\n            referrer=\"alert_stream\"\n            showPermissionGuide\n            projectSlug={projectSlugs.length === 1 ? projectSlugs[0] : undefined}\n          >\n            {t('Create Alert')}\n          </CreateAlertButton>\n          <Button\n            onClick={handleNavigateToSettings}\n            href=\"#\"\n            icon={<IconSettings size=\"sm\" />}\n            aria-label={t('Settings')}\n          />\n        </Actions>\n      </Layout.HeaderActions>\n      <Layout.HeaderNavTabs underlined>\n        {alertRulesLink}\n        <li className={activeTab === 'stream' ? 'active' : ''}>\n          <GlobalSelectionLink to={`/organizations/${organization.slug}/alerts/`}>\n            {t('History')}\n          </GlobalSelectionLink>\n        </li>\n      </Layout.HeaderNavTabs>\n    </Layout.Header>\n  );\n};\n\nexport default AlertHeader;\n\nconst StyledLayoutTitle = styled(Layout.Title)`\n  margin-top: ${space(0.5)};\n`;\n\nconst Actions = styled(ButtonBar)`\n  height: 32px;\n`;\n","import {Fragment, useMemo} from 'react';\nimport styled from '@emotion/styled';\nimport debounce from 'lodash/debounce';\n\nimport TeamAvatar from 'sentry/components/avatar/teamAvatar';\nimport Badge from 'sentry/components/badge';\nimport CompactSelect from 'sentry/components/forms/compactSelect';\nimport {DEFAULT_DEBOUNCE_DURATION} from 'sentry/constants';\nimport {IconUser} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport useTeams from 'sentry/utils/useTeams';\n\ninterface Props {\n  handleChangeFilter: (activeFilters: string[]) => void;\n  selectedTeams: string[];\n  /**\n   * only show teams user is a member of\n   */\n  showIsMemberTeams?: boolean;\n  /**\n   * show My Teams as the default dropdown description\n   */\n  showMyTeamsDescription?: boolean;\n  /**\n   * show suggested options (My Teams and Unassigned)\n   */\n  showSuggestedOptions?: boolean;\n}\n\nconst suggestedOptions = [\n  {\n    label: t('My Teams'),\n    value: 'myteams',\n  },\n  {\n    label: t('Unassigned'),\n    value: 'unassigned',\n  },\n];\n\nfunction TeamFilter({\n  selectedTeams,\n  handleChangeFilter,\n  showIsMemberTeams = false,\n  showSuggestedOptions = true,\n  showMyTeamsDescription = false,\n}: Props) {\n  const {teams, onSearch, fetching} = useTeams({provideUserTeams: showIsMemberTeams});\n\n  const teamOptions = useMemo(\n    () =>\n      teams.map(team => ({\n        value: team.id,\n        label: `#${team.slug}`,\n        leadingItems: <TeamAvatar team={team} size={18} />,\n      })),\n    [teams]\n  );\n\n  const [triggerIcon, triggerLabel] = useMemo(() => {\n    const firstSelectedSuggestion =\n      selectedTeams[0] && suggestedOptions.find(opt => opt.value === selectedTeams[0]);\n\n    const firstSelectedTeam =\n      selectedTeams[0] && teams.find(team => team.id === selectedTeams[0]);\n\n    if (firstSelectedSuggestion) {\n      return [<IconUser key={0} />, firstSelectedSuggestion.label];\n    }\n\n    if (firstSelectedTeam) {\n      return [\n        <TeamAvatar team={firstSelectedTeam} size={16} key={0} />,\n        `#${firstSelectedTeam.slug}`,\n      ];\n    }\n\n    return [\n      <IconUser key={0} />,\n      showMyTeamsDescription ? t('My Teams') : t('All Teams'),\n    ];\n  }, [selectedTeams, teams, showMyTeamsDescription]);\n\n  return (\n    <CompactSelect\n      multiple\n      isClearable\n      isSearchable\n      isLoading={fetching}\n      menuTitle={t('Filter teams')}\n      options={\n        showSuggestedOptions\n          ? [\n              {value: '_suggested', label: t('Suggested'), options: suggestedOptions},\n              {value: '_teams', label: t('Teams'), options: teamOptions},\n            ]\n          : teamOptions\n      }\n      value={selectedTeams}\n      onInputChange={debounce(val => void onSearch(val), DEFAULT_DEBOUNCE_DURATION)}\n      onChange={opts => handleChangeFilter(opts.map(opt => opt.value))}\n      triggerLabel={\n        <Fragment>\n          {triggerLabel}\n          {selectedTeams.length > 1 && (\n            <StyledBadge text={`+${selectedTeams.length - 1}`} />\n          )}\n        </Fragment>\n      }\n      triggerProps={{icon: triggerIcon}}\n    />\n  );\n}\n\nexport default TeamFilter;\n\nconst StyledBadge = styled(Badge)`\n  flex-shrink: 0;\n`;\n"],"names":["WEB_VITAL_DETAILS","WebVital","slug","name","t","acronym","description","poorThreshold","type","measurementType","MOBILE_VITAL_DETAILS","MobileVital","Browser","FilterBar","location","onChangeSearch","onChangeFilter","onChangeStatus","hasStatusFilters","selectedTeams","getTeamParams","query","team","selectedStatus","getQueryStatus","status","Wrapper","FilterButtons","gap","handleChangeFilter","triggerProps","prefix","options","value","label","onChange","placeholder","onSearch","space","p","theme","breakpoints","small","ButtonBar","AlertHeader","router","organization","activeTab","projectSlugs","alertRulesLink","className","to","StyledLayoutTitle","Actions","iconProps","size","priority","referrer","showPermissionGuide","projectSlug","length","undefined","onClick","e","preventDefault","navigateTo","href","icon","underlined","Layout","suggestedOptions","TeamFilter","showIsMemberTeams","showSuggestedOptions","showMyTeamsDescription","teams","fetching","useTeams","provideUserTeams","teamOptions","useMemo","map","id","leadingItems","triggerIcon","triggerLabel","firstSelectedSuggestion","find","opt","firstSelectedTeam","multiple","isClearable","isSearchable","isLoading","menuTitle","onInputChange","debounce","val","DEFAULT_DEBOUNCE_DURATION","opts","Fragment","StyledBadge","text","Badge"],"sourceRoot":""}