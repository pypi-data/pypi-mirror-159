{"version":3,"file":"chunks/app_views_settings_projectProguard_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/acl/role.tsx","webpack:///./app/components/fileSize.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/projectProguard/projectProguardRow.tsx","webpack:///./app/views/settings/projectProguard/projectProguard.tsx","webpack:///./app/views/settings/projectProguard/index.tsx"],"sourcesContent":["import {useMemo} from 'react';\n\nimport ConfigStore from 'sentry/stores/configStore';\nimport {Organization, User} from 'sentry/types';\nimport {isActiveSuperuser} from 'sentry/utils/isActiveSuperuser';\nimport {isRenderFunc} from 'sentry/utils/isRenderFunc';\nimport withOrganization from 'sentry/utils/withOrganization';\n\ntype RoleRenderProps = {\n  hasRole: boolean;\n};\n\ntype ChildrenRenderFn = (props: RoleRenderProps) => React.ReactElement | null;\n\nfunction checkUserRole(user: User, organization: Organization, role: RoleProps['role']) {\n  if (!user) {\n    return false;\n  }\n\n  if (isActiveSuperuser()) {\n    return true;\n  }\n\n  if (!Array.isArray(organization.orgRoleList)) {\n    return false;\n  }\n\n  const roleIds = organization.orgRoleList.map(r => r.id);\n\n  if (!roleIds.includes(role) || !roleIds.includes(organization.role ?? '')) {\n    return false;\n  }\n\n  const requiredIndex = roleIds.indexOf(role);\n  const currentIndex = roleIds.indexOf(organization.role ?? '');\n  return currentIndex >= requiredIndex;\n}\n\ninterface RoleProps {\n  /**\n   * If children is a function then will be treated as a render prop and\n   * passed RoleRenderProps.\n   *\n   * The other interface is more simple, only show `children` if user has\n   * the minimum required role.\n   */\n  children: React.ReactElement | ChildrenRenderFn;\n  /**\n   * Current Organization\n   */\n  organization: Organization;\n  /**\n   * Minimum required role\n   */\n  role: string;\n}\n\nfunction Role({role, organization, children}: RoleProps): React.ReactElement | null {\n  const user = ConfigStore.get('user');\n\n  const hasRole = useMemo(\n    () => checkUserRole(user, organization, role),\n    // It seems that this returns a stable reference, but\n    [organization, role, user]\n  );\n\n  if (isRenderFunc<ChildrenRenderFn>(children)) {\n    return children({hasRole});\n  }\n\n  return hasRole ? children : null;\n}\n\nconst withOrganizationRole = withOrganization(Role);\n\nexport {withOrganizationRole as Role};\n","import styled from '@emotion/styled';\n\nimport {formatBytesBase2} from 'sentry/utils';\nimport getDynamicText from 'sentry/utils/getDynamicText';\n\ntype Props = {\n  bytes: number;\n  className?: string;\n};\n\nfunction FileSize(props: Props) {\n  const {className, bytes} = props;\n\n  return (\n    <Span className={className}>\n      {getDynamicText({value: formatBytesBase2(bytes), fixed: 'xx KB'})}\n    </Span>\n  );\n}\n\nconst Span = styled('span')`\n  font-variant-numeric: tabular-nums;\n`;\n\nexport default FileSize;\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport Access from 'sentry/components/acl/access';\nimport {Role} from 'sentry/components/acl/role';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport Confirm from 'sentry/components/confirm';\nimport FileSize from 'sentry/components/fileSize';\nimport Link from 'sentry/components/links/link';\nimport TimeSince from 'sentry/components/timeSince';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconClock, IconDelete, IconDownload} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {DebugFile} from 'sentry/types/debugFiles';\n\ntype Props = {\n  downloadRole: string;\n  downloadUrl: string;\n  mapping: DebugFile;\n  onDelete: (id: string) => void;\n  orgSlug: string;\n};\n\nconst ProjectProguardRow = ({\n  mapping,\n  onDelete,\n  downloadUrl,\n  downloadRole,\n  orgSlug,\n}: Props) => {\n  const {id, debugId, uuid, size, dateCreated} = mapping;\n\n  const handleDeleteClick = () => {\n    onDelete(id);\n  };\n\n  return (\n    <Fragment>\n      <NameColumn>\n        <Name>{debugId || uuid || `(${t('empty')})`}</Name>\n        <TimeWrapper>\n          <IconClock size=\"sm\" />\n          <TimeSince date={dateCreated} />\n        </TimeWrapper>\n      </NameColumn>\n      <SizeColumn>\n        <FileSize bytes={size} />\n      </SizeColumn>\n      <ActionsColumn>\n        <ButtonBar gap={0.5}>\n          <Role role={downloadRole}>\n            {({hasRole}) => (\n              <Tooltip\n                title={tct(\n                  'Mappings can only be downloaded by users with organization [downloadRole] role[orHigher]. This can be changed in [settingsLink:Debug Files Access] settings.',\n                  {\n                    downloadRole,\n                    orHigher: downloadRole !== 'owner' ? ` ${t('or higher')}` : '',\n                    settingsLink: <Link to={`/settings/${orgSlug}/#debugFilesRole`} />,\n                  }\n                )}\n                disabled={hasRole}\n                isHoverable\n              >\n                <Button\n                  size=\"sm\"\n                  icon={<IconDownload size=\"sm\" />}\n                  disabled={!hasRole}\n                  href={downloadUrl}\n                  title={hasRole ? t('Download Mapping') : undefined}\n                  aria-label={t('Download Mapping')}\n                />\n              </Tooltip>\n            )}\n          </Role>\n\n          <Access access={['project:releases']}>\n            {({hasAccess}) => (\n              <Tooltip\n                disabled={hasAccess}\n                title={t('You do not have permission to delete mappings.')}\n              >\n                <Confirm\n                  message={t('Are you sure you want to remove this mapping?')}\n                  onConfirm={handleDeleteClick}\n                  disabled={!hasAccess}\n                >\n                  <Button\n                    size=\"sm\"\n                    icon={<IconDelete size=\"sm\" />}\n                    title={hasAccess ? t('Remove Mapping') : undefined}\n                    aria-label={t('Remove Mapping')}\n                    disabled={!hasAccess}\n                  />\n                </Confirm>\n              </Tooltip>\n            )}\n          </Access>\n        </ButtonBar>\n      </ActionsColumn>\n    </Fragment>\n  );\n};\n\nconst NameColumn = styled('div')`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n`;\n\nconst SizeColumn = styled('div')`\n  display: flex;\n  justify-content: flex-end;\n  text-align: right;\n  align-items: center;\n`;\n\nconst ActionsColumn = styled(SizeColumn)``;\n\nconst Name = styled('div')`\n  padding-right: ${space(4)};\n  overflow-wrap: break-word;\n  word-break: break-all;\n`;\n\nconst TimeWrapper = styled('div')`\n  display: grid;\n  gap: ${space(0.5)};\n  grid-template-columns: min-content 1fr;\n  font-size: ${p => p.theme.fontSizeMedium};\n  align-items: center;\n  color: ${p => p.theme.subText};\n  margin-top: ${space(1)};\n`;\n\nexport default ProjectProguardRow;\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Pagination from 'sentry/components/pagination';\nimport {PanelTable} from 'sentry/components/panels';\nimport SearchBar from 'sentry/components/searchBar';\nimport {t, tct} from 'sentry/locale';\nimport {Organization, Project} from 'sentry/types';\nimport {DebugFile} from 'sentry/types/debugFiles';\nimport routeTitleGen from 'sentry/utils/routeTitle';\nimport AsyncView from 'sentry/views/asyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\n\nimport ProjectProguardRow from './projectProguardRow';\n\ntype Props = RouteComponentProps<{orgId: string; projectId: string}, {}> & {\n  organization: Organization;\n  project: Project;\n};\n\ntype State = AsyncView['state'] & {\n  mappings: DebugFile[];\n};\n\nclass ProjectProguard extends AsyncView<Props, State> {\n  getTitle() {\n    const {projectId} = this.props.params;\n\n    return routeTitleGen(t('ProGuard Mappings'), projectId, false);\n  }\n\n  getDefaultState(): State {\n    return {\n      ...super.getDefaultState(),\n      mappings: [],\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {params, location} = this.props;\n    const {orgId, projectId} = params;\n\n    const endpoints: ReturnType<AsyncView['getEndpoints']> = [\n      [\n        'mappings',\n        `/projects/${orgId}/${projectId}/files/dsyms/`,\n        {query: {query: location.query.query, file_formats: 'proguard'}},\n      ],\n    ];\n\n    return endpoints;\n  }\n\n  handleDelete = (id: string) => {\n    const {orgId, projectId} = this.props.params;\n\n    this.setState({\n      loading: true,\n    });\n\n    this.api.request(\n      `/projects/${orgId}/${projectId}/files/dsyms/?id=${encodeURIComponent(id)}`,\n      {\n        method: 'DELETE',\n        complete: () => this.fetchData(),\n      }\n    );\n  };\n\n  handleSearch = (query: string) => {\n    const {location, router} = this.props;\n\n    router.push({\n      ...location,\n      query: {...location.query, cursor: undefined, query},\n    });\n  };\n\n  getQuery() {\n    const {query} = this.props.location.query;\n\n    return typeof query === 'string' ? query : undefined;\n  }\n\n  getEmptyMessage() {\n    if (this.getQuery()) {\n      return t('There are no mappings that match your search.');\n    }\n\n    return t('There are no mappings for this project.');\n  }\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderMappings() {\n    const {mappings} = this.state;\n    const {organization, params} = this.props;\n    const {orgId, projectId} = params;\n\n    if (!mappings?.length) {\n      return null;\n    }\n\n    return mappings.map(mapping => {\n      const downloadUrl = `${\n        this.api.baseUrl\n      }/projects/${orgId}/${projectId}/files/dsyms/?id=${encodeURIComponent(mapping.id)}`;\n\n      return (\n        <ProjectProguardRow\n          mapping={mapping}\n          downloadUrl={downloadUrl}\n          onDelete={this.handleDelete}\n          downloadRole={organization.debugFilesRole}\n          key={mapping.id}\n          orgSlug={organization.slug}\n        />\n      );\n    });\n  }\n\n  renderBody() {\n    const {loading, mappings, mappingsPageLinks} = this.state;\n\n    return (\n      <Fragment>\n        <SettingsPageHeader\n          title={t('ProGuard Mappings')}\n          action={\n            <SearchBar\n              placeholder={t('Filter mappings')}\n              onSearch={this.handleSearch}\n              query={this.getQuery()}\n              width=\"280px\"\n            />\n          }\n        />\n\n        <TextBlock>\n          {tct(\n            `ProGuard mapping files are used to convert minified classes, methods and field names into a human readable format. To learn more about proguard mapping files, [link: read the docs].`,\n            {\n              link: (\n                <ExternalLink href=\"https://docs.sentry.io/platforms/android/proguard/\" />\n              ),\n            }\n          )}\n        </TextBlock>\n\n        <StyledPanelTable\n          headers={[\n            t('Mapping'),\n            <SizeColumn key=\"size\">{t('File Size')}</SizeColumn>,\n            '',\n          ]}\n          emptyMessage={this.getEmptyMessage()}\n          isEmpty={mappings?.length === 0}\n          isLoading={loading}\n        >\n          {this.renderMappings()}\n        </StyledPanelTable>\n        <Pagination pageLinks={mappingsPageLinks} />\n      </Fragment>\n    );\n  }\n}\n\nconst StyledPanelTable = styled(PanelTable)`\n  grid-template-columns: minmax(220px, 1fr) max-content 120px;\n`;\n\nconst SizeColumn = styled('div')`\n  text-align: right;\n`;\n\nexport default ProjectProguard;\n","import {Component} from 'react';\n\nimport withOrganization from 'sentry/utils/withOrganization';\n\nimport ProjectProguard from './projectProguard';\n\nclass ProjectProguardContainer extends Component<ProjectProguard['props']> {\n  render() {\n    return <ProjectProguard {...this.props} />;\n  }\n}\n\nexport default withOrganization(ProjectProguardContainer);\n"],"names":["withOrganizationRole","withOrganization","role","organization","children","user","ConfigStore","hasRole","useMemo","isActiveSuperuser","Array","isArray","orgRoleList","roleIds","map","r","id","includes","requiredIndex","indexOf","checkUserRole","isRenderFunc","FileSize","props","className","bytes","Span","getDynamicText","value","formatBytesBase2","fixed","routeName","orgSlug","withSentry","projectSlug","tmplBase","tmpl","AsyncView","AsyncComponent","getTitle","render","title","this","renderComponent","ProjectProguardRow","mapping","onDelete","downloadUrl","downloadRole","debugId","uuid","size","dateCreated","handleDeleteClick","Fragment","NameColumn","Name","t","TimeWrapper","date","SizeColumn","ActionsColumn","gap","tct","orHigher","settingsLink","to","disabled","isHoverable","icon","href","undefined","access","hasAccess","message","onConfirm","space","p","theme","fontSizeMedium","subText","ProjectProguard","orgId","projectId","params","setState","loading","api","request","encodeURIComponent","method","complete","fetchData","query","location","router","push","cursor","routeTitleGen","getDefaultState","super","mappings","getEndpoints","file_formats","getQuery","getEmptyMessage","renderLoading","renderBody","renderMappings","state","length","baseUrl","handleDelete","debugFilesRole","slug","mappingsPageLinks","action","placeholder","onSearch","handleSearch","width","link","StyledPanelTable","headers","emptyMessage","isEmpty","isLoading","pageLinks","PanelTable","ProjectProguardContainer","Component"],"sourceRoot":""}