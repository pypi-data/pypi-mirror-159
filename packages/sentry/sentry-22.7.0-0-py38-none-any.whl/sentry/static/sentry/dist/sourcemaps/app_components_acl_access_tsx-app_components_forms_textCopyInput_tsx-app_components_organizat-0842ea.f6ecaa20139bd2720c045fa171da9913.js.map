{"version":3,"file":"chunks/app_components_acl_access_tsx-app_components_forms_textCopyInput_tsx-app_components_organizat-0842ea.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/acl/access.tsx","webpack:///./app/components/forms/textCopyInput.tsx","webpack:///./app/components/organizations/pageFilters/utils.tsx","webpack:///./app/components/truncate.tsx","webpack:///./app/data/forms/accountEmails.tsx","webpack:///./app/utils/events.tsx","webpack:///./app/utils/platform.tsx","webpack:///./app/utils/useOrganization.tsx","webpack:///./app/utils/withConfig.tsx","webpack:///./app/views/organizationContext.tsx"],"sourcesContent":["import {Component} from 'react';\n\nimport Alert from 'sentry/components/alert';\nimport {t} from 'sentry/locale';\nimport {Config, Organization, Scope} from 'sentry/types';\nimport {isRenderFunc} from 'sentry/utils/isRenderFunc';\nimport withConfig from 'sentry/utils/withConfig';\nimport withOrganization from 'sentry/utils/withOrganization';\n\nconst DEFAULT_NO_ACCESS_MESSAGE = (\n  <Alert type=\"error\" showIcon>\n    {t('You do not have sufficient permissions to access this.')}\n  </Alert>\n);\n\n// Props that function children will get.\nexport type ChildRenderProps = {\n  hasAccess: boolean;\n  hasSuperuser: boolean;\n};\n\ntype ChildFunction = (props: ChildRenderProps) => React.ReactNode;\n\ntype DefaultProps = {\n  /**\n   * List of required access levels\n   */\n  access: Scope[];\n\n  /**\n   * Custom renderer function for \"no access\" message OR `true` to use\n   * default message. `false` will suppress message.\n   */\n  renderNoAccessMessage: ChildFunction | boolean;\n\n  /**\n   * Requires superuser\n   */\n  isSuperuser?: boolean;\n\n  /**\n   * Should the component require all access levels or just one or more.\n   */\n  requireAll?: boolean;\n};\n\nconst defaultProps: DefaultProps = {\n  renderNoAccessMessage: false,\n  isSuperuser: false,\n  requireAll: true,\n  access: [],\n};\n\ntype Props = {\n  /**\n   * Configuration from ConfigStore\n   */\n  config: Config;\n\n  /**\n   * Current Organization\n   */\n  organization: Organization;\n\n  /**\n   * Children can be a node or a function as child.\n   */\n  children?: React.ReactNode | ChildFunction;\n} & Partial<DefaultProps>;\n\n/**\n * Component to handle access restrictions.\n */\nclass Access extends Component<Props> {\n  static defaultProps = defaultProps;\n\n  render() {\n    const {\n      organization,\n      config,\n      access,\n      requireAll,\n      isSuperuser,\n      renderNoAccessMessage,\n      children,\n    } = this.props;\n\n    const {access: orgAccess} = organization || {access: []};\n    const method = requireAll ? 'every' : 'some';\n\n    const hasAccess = !access || access[method](acc => orgAccess.includes(acc));\n    const hasSuperuser = !!(config.user && config.user.isSuperuser);\n\n    const renderProps: ChildRenderProps = {\n      hasAccess,\n      hasSuperuser,\n    };\n\n    const render = hasAccess && (!isSuperuser || hasSuperuser);\n\n    if (!render && typeof renderNoAccessMessage === 'function') {\n      return renderNoAccessMessage(renderProps);\n    }\n    if (!render && renderNoAccessMessage) {\n      return DEFAULT_NO_ACCESS_MESSAGE;\n    }\n\n    if (isRenderFunc<ChildFunction>(children)) {\n      return children(renderProps);\n    }\n\n    return render ? children : null;\n  }\n}\n\nexport default withOrganization(withConfig(Access));\n","import {Component, createRef} from 'react';\nimport {findDOMNode} from 'react-dom';\nimport styled from '@emotion/styled';\n\nimport Button from 'sentry/components/button';\nimport Clipboard from 'sentry/components/clipboard';\nimport {IconCopy} from 'sentry/icons';\nimport {inputStyles} from 'sentry/styles/input';\nimport {selectText} from 'sentry/utils/selectText';\n\nconst Wrapper = styled('div')`\n  display: flex;\n`;\n\nexport const StyledInput = styled('input')<{rtl?: boolean}>`\n  ${inputStyles};\n  background-color: ${p => p.theme.backgroundSecondary};\n  border-right-width: 0;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  direction: ${p => (p.rtl ? 'rtl' : 'ltr')};\n\n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.backgroundSecondary};\n    border-right-width: 0;\n  }\n`;\n\nconst OverflowContainer = styled('div')`\n  flex-grow: 1;\n  border: none;\n`;\n\nexport const StyledCopyButton = styled(Button)`\n  flex-shrink: 1;\n  border-radius: 0 0.25em 0.25em 0;\n  box-shadow: none;\n`;\n\ntype Props = {\n  /**\n   * Text to copy\n   */\n  children: string;\n  className?: string;\n  disabled?: boolean;\n  onCopy?: (value: string, event: React.MouseEvent) => void;\n  /**\n   * Always show the ending of a long overflowing text in input\n   */\n  rtl?: boolean;\n  style?: React.CSSProperties;\n};\n\nclass TextCopyInput extends Component<Props> {\n  textRef = createRef<HTMLInputElement>();\n\n  // Select text when copy button is clicked\n  handleCopyClick = (e: React.MouseEvent) => {\n    if (!this.textRef.current) {\n      return;\n    }\n\n    const {onCopy, children} = this.props;\n\n    this.handleSelectText();\n\n    onCopy?.(children, e);\n\n    e.stopPropagation();\n  };\n\n  handleSelectText = () => {\n    const {rtl} = this.props;\n\n    if (!this.textRef.current) {\n      return;\n    }\n\n    // We use findDOMNode here because `this.textRef` is not a dom node,\n    // it's a ref to AutoSelectText\n    const node = findDOMNode(this.textRef.current); // eslint-disable-line react/no-find-dom-node\n    if (!node || !(node instanceof HTMLElement)) {\n      return;\n    }\n\n    if (rtl && node instanceof HTMLInputElement) {\n      // we don't want to select the first character - \\u202A, nor the last - \\u202C\n      node.setSelectionRange(1, node.value.length - 1);\n    } else {\n      selectText(node);\n    }\n  };\n\n  render() {\n    const {className, disabled, style, children, rtl} = this.props;\n\n    /**\n     * We are using direction: rtl; to always show the ending of a long overflowing text in input.\n     *\n     * This however means that the trailing characters with BiDi class O.N. ('Other Neutrals') goes to the other side.\n     * Hello! becomes !Hello and vice versa. This is a problem for us when we want to show path in this component, because\n     * /user/local/bin becomes user/local/bin/. Wrapping in unicode characters for left-to-righ embedding solves this,\n     * however we need to be aware of them when selecting the text - we are solving that by offsetting the selectionRange.\n     */\n    const inputValue = rtl ? '\\u202A' + children + '\\u202C' : children;\n\n    return (\n      <Wrapper className={className}>\n        <OverflowContainer>\n          <StyledInput\n            readOnly\n            disabled={disabled}\n            ref={this.textRef}\n            style={style}\n            value={inputValue}\n            onClick={this.handleSelectText}\n            rtl={rtl}\n          />\n        </OverflowContainer>\n        <Clipboard hideUnsupported value={children}>\n          <StyledCopyButton\n            type=\"button\"\n            disabled={disabled}\n            onClick={this.handleCopyClick}\n          >\n            <IconCopy />\n          </StyledCopyButton>\n        </Clipboard>\n      </Wrapper>\n    );\n  }\n}\n\nexport default TextCopyInput;\n","import {Location} from 'history';\nimport identity from 'lodash/identity';\nimport isEqual from 'lodash/isEqual';\nimport pick from 'lodash/pick';\nimport pickBy from 'lodash/pickBy';\n\nimport {DEFAULT_STATS_PERIOD} from 'sentry/constants';\nimport {DATE_TIME_KEYS, URL_PARAM} from 'sentry/constants/pageFilters';\nimport {PageFilters} from 'sentry/types';\n\n/**\n * Make a default page filters object\n */\nexport function getDefaultSelection(): PageFilters {\n  const datetime = {\n    start: null,\n    end: null,\n    period: DEFAULT_STATS_PERIOD,\n    utc: null,\n  };\n\n  return {\n    projects: [],\n    environments: [],\n    datetime,\n  };\n}\n\n/**\n * Extract the page filter parameters from an object\n * Useful for extracting page filter properties from the current URL\n * when building another URL.\n */\nexport function extractSelectionParameters(query: Location['query']) {\n  return pickBy(pick(query, Object.values(URL_PARAM)), identity);\n}\n\n/**\n * Extract the page filter datetime parameters from an object.\n */\nexport function extractDatetimeSelectionParameters(query: Location['query']) {\n  return pickBy(pick(query, Object.values(DATE_TIME_KEYS)), identity);\n}\n\n/**\n * Compare the non-utc values of two selections.\n * Useful when re-fetching data based on page filters changing.\n *\n * utc is not compared as there is a problem somewhere in the selection\n * data flow that results in it being undefined | null | boolean instead of null | boolean.\n * The additional undefined state makes this function just as unreliable as isEqual(selection, other)\n */\nexport function isSelectionEqual(selection: PageFilters, other: PageFilters): boolean {\n  if (\n    !isEqual(selection.projects, other.projects) ||\n    !isEqual(selection.environments, other.environments)\n  ) {\n    return false;\n  }\n\n  // Use string comparison as we aren't interested in the identity of the datetimes.\n  if (\n    selection.datetime.period !== other.datetime.period ||\n    selection.datetime.start?.toString() !== other.datetime.start?.toString() ||\n    selection.datetime.end?.toString() !== other.datetime.end?.toString()\n  ) {\n    return false;\n  }\n\n  return true;\n}\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'sentry/styles/space';\n\ntype DefaultProps = {\n  className: string;\n  expandDirection: 'left' | 'right';\n  expandable: boolean;\n  leftTrim: boolean;\n  maxLength: number;\n  minLength: number;\n};\n\ntype Props = DefaultProps & {\n  value: string;\n  trimRegex?: RegExp;\n};\n\ntype State = {\n  isExpanded: boolean;\n};\n\nclass Truncate extends Component<Props, State> {\n  static defaultProps: DefaultProps = {\n    className: '',\n    minLength: 15,\n    maxLength: 50,\n    leftTrim: false,\n    expandable: true,\n    expandDirection: 'right',\n  };\n\n  state: State = {\n    isExpanded: false,\n  };\n\n  onFocus = () => {\n    const {value, maxLength} = this.props;\n    if (value.length <= maxLength) {\n      return;\n    }\n    this.setState({isExpanded: true});\n  };\n\n  onBlur = () => {\n    if (this.state.isExpanded) {\n      this.setState({isExpanded: false});\n    }\n  };\n\n  render() {\n    const {\n      className,\n      leftTrim,\n      trimRegex,\n      minLength,\n      maxLength,\n      value,\n      expandable,\n      expandDirection,\n    } = this.props;\n    const isTruncated = value.length > maxLength;\n    let shortValue: React.ReactNode = '';\n\n    if (isTruncated) {\n      const slicedValue = leftTrim\n        ? value.slice(value.length - (maxLength - 4), value.length)\n        : value.slice(0, maxLength - 4);\n\n      // Try to trim to values from the regex\n      if (trimRegex && leftTrim) {\n        const valueIndex = slicedValue.search(trimRegex);\n        shortValue = (\n          <span>\n            …{' '}\n            {valueIndex > 0 && valueIndex <= maxLength - minLength\n              ? slicedValue.slice(slicedValue.search(trimRegex), slicedValue.length)\n              : slicedValue}\n          </span>\n        );\n      } else if (trimRegex && !leftTrim) {\n        const matches = slicedValue.match(trimRegex);\n        let lastIndex = matches\n          ? slicedValue.lastIndexOf(matches[matches.length - 1]) + 1\n          : slicedValue.length;\n        if (lastIndex <= minLength) {\n          lastIndex = slicedValue.length;\n        }\n        shortValue = <span>{slicedValue.slice(0, lastIndex)} …</span>;\n      } else if (leftTrim) {\n        shortValue = <span>… {slicedValue}</span>;\n      } else {\n        shortValue = <span>{slicedValue} …</span>;\n      }\n    } else {\n      shortValue = value;\n    }\n\n    return (\n      <Wrapper\n        className={className}\n        onMouseOver={expandable ? this.onFocus : undefined}\n        onMouseOut={expandable ? this.onBlur : undefined}\n        onFocus={expandable ? this.onFocus : undefined}\n        onBlur={expandable ? this.onBlur : undefined}\n      >\n        <span>{shortValue}</span>\n        {isTruncated && (\n          <FullValue expanded={this.state.isExpanded} expandDirection={expandDirection}>\n            {value}\n          </FullValue>\n        )}\n      </Wrapper>\n    );\n  }\n}\n\nconst Wrapper = styled('span')`\n  position: relative;\n`;\n\nexport const FullValue = styled('span')<{\n  expandDirection: 'left' | 'right';\n  expanded: boolean;\n}>`\n  display: none;\n  position: absolute;\n  background: ${p => p.theme.background};\n  padding: ${space(0.5)};\n  border: 1px solid ${p => p.theme.innerBorder};\n  white-space: nowrap;\n  border-radius: ${space(0.5)};\n  top: -5px;\n  ${p => p.expandDirection === 'left' && 'right: -5px;'}\n  ${p => p.expandDirection === 'right' && 'left: -5px;'}\n\n  ${p =>\n    p.expanded &&\n    `\n    z-index: ${p.theme.zIndex.truncationFullValue};\n    display: block;\n    `}\n`;\n\nexport default Truncate;\n","import {JsonFormObject} from 'sentry/components/forms/type';\n\n// Export route to make these forms searchable by label/help\nexport const route = '/settings/account/emails/';\n\nconst formGroups: JsonFormObject[] = [\n  {\n    // Form \"section\"/\"panel\"\n    title: 'Add Secondary Emails',\n    fields: [\n      {\n        name: 'email',\n        type: 'string',\n\n        // additional data/props that is related to rendering of form field rather than data\n        label: 'Additional Email',\n        placeholder: 'e.g. secondary@example.com',\n        help: 'Designate an alternative email for this account',\n        showReturnButton: true,\n      },\n    ],\n  },\n];\n\nexport default formGroups;\n","import {\n  BaseGroup,\n  EventMetadata,\n  EventOrGroupType,\n  GroupTombstone,\n  TreeLabelPart,\n} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport {isMobilePlatform, isNativePlatform} from 'sentry/utils/platform';\n\nfunction isTombstone(maybe: BaseGroup | Event | GroupTombstone): maybe is GroupTombstone {\n  return !maybe.hasOwnProperty('type');\n}\n\n/**\n * Extract the display message from an event.\n */\nexport function getMessage(\n  event: Event | BaseGroup | GroupTombstone\n): string | undefined {\n  if (isTombstone(event)) {\n    return event.culprit || '';\n  }\n\n  const {metadata, type, culprit} = event;\n\n  switch (type) {\n    case EventOrGroupType.ERROR:\n      return metadata.value;\n    case EventOrGroupType.CSP:\n      return metadata.message;\n    case EventOrGroupType.EXPECTCT:\n    case EventOrGroupType.EXPECTSTAPLE:\n    case EventOrGroupType.HPKP:\n      return '';\n    default:\n      return culprit || '';\n  }\n}\n\n/**\n * Get the location from an event.\n */\nexport function getLocation(event: Event | BaseGroup | GroupTombstone) {\n  if (isTombstone(event)) {\n    return undefined;\n  }\n\n  if (event.type === EventOrGroupType.ERROR && isNativePlatform(event.platform)) {\n    return event.metadata.filename || undefined;\n  }\n\n  return undefined;\n}\n\nexport function getTreeLabelPartDetails(part: TreeLabelPart) {\n  // Note: This function also exists in Python in eventtypes/base.py, to make\n  // porting efforts simpler it's recommended to keep both variants\n  // structurally similar.\n  if (typeof part === 'string') {\n    return part;\n  }\n\n  const label = part?.function || part?.package || part?.filebase || part?.type;\n  const classbase = part?.classbase;\n\n  if (classbase) {\n    return label ? `${classbase}.${label}` : classbase;\n  }\n\n  return label || '<unknown>';\n}\n\nfunction computeTitleWithTreeLabel(metadata: EventMetadata) {\n  const {type, current_tree_label, finest_tree_label} = metadata;\n\n  const treeLabel = current_tree_label || finest_tree_label;\n\n  const formattedTreeLabel = treeLabel\n    ? treeLabel.map(labelPart => getTreeLabelPartDetails(labelPart)).join(' | ')\n    : undefined;\n\n  if (!type) {\n    return {\n      title: formattedTreeLabel || metadata.function || '<unknown>',\n      treeLabel,\n    };\n  }\n\n  if (!formattedTreeLabel) {\n    return {title: type, treeLabel: undefined};\n  }\n\n  return {\n    title: `${type} | ${formattedTreeLabel}`,\n    treeLabel: [{type}, ...(treeLabel ?? [])],\n  };\n}\n\nexport function getTitle(\n  event: Event | BaseGroup,\n  features: string[] = [],\n  grouping = false\n) {\n  const {metadata, type, culprit} = event;\n\n  const customTitle =\n    features.includes('custom-event-title') && metadata?.title\n      ? metadata.title\n      : undefined;\n\n  switch (type) {\n    case EventOrGroupType.ERROR: {\n      if (customTitle) {\n        return {\n          title: customTitle,\n          subtitle: culprit,\n          treeLabel: undefined,\n        };\n      }\n\n      const displayTitleWithTreeLabel =\n        features.includes('grouping-title-ui') &&\n        (grouping ||\n          isNativePlatform(event.platform) ||\n          isMobilePlatform(event.platform));\n\n      if (displayTitleWithTreeLabel) {\n        return {\n          subtitle: culprit,\n          ...computeTitleWithTreeLabel(metadata),\n        };\n      }\n\n      return {\n        subtitle: culprit,\n        title: metadata.type || metadata.function || '<unknown>',\n        treeLabel: undefined,\n      };\n    }\n    case EventOrGroupType.CSP:\n      return {\n        title: customTitle ?? metadata.directive ?? '',\n        subtitle: metadata.uri ?? '',\n        treeLabel: undefined,\n      };\n    case EventOrGroupType.EXPECTCT:\n    case EventOrGroupType.EXPECTSTAPLE:\n    case EventOrGroupType.HPKP:\n      // Due to a regression some reports did not have message persisted\n      // (https://github.com/getsentry/sentry/pull/19794) so we need to fall\n      // back to the computed title for these.\n      return {\n        title: customTitle ?? (metadata.message || event.title),\n        subtitle: metadata.origin ?? '',\n        treeLabel: undefined,\n      };\n    case EventOrGroupType.DEFAULT:\n      return {\n        title: customTitle ?? metadata.title ?? '',\n        subtitle: '',\n        treeLabel: undefined,\n      };\n    default:\n      return {\n        title: customTitle ?? event.title,\n        subtitle: '',\n        treeLabel: undefined,\n      };\n  }\n}\n\n/**\n * Returns a short eventId with only 8 characters\n */\nexport function getShortEventId(eventId: string) {\n  return eventId.substring(0, 8);\n}\n","import {mobile} from 'sentry/data/platformCategories';\n\nexport function isNativePlatform(platform: string | undefined) {\n  switch (platform) {\n    case 'cocoa':\n    case 'objc':\n    case 'native':\n    case 'swift':\n    case 'c':\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function isMobilePlatform(platform: string | undefined) {\n  if (!platform) {\n    return false;\n  }\n\n  return ([...mobile] as string[]).includes(platform);\n}\n","import {useContext} from 'react';\n\nimport {OrganizationContext} from 'sentry/views/organizationContext';\n\nfunction useOrganization() {\n  const organization = useContext(OrganizationContext);\n  if (!organization) {\n    throw new Error('useOrganization called but organization is not set.');\n  }\n  return organization;\n}\n\nexport default useOrganization;\n","import ConfigStore from 'sentry/stores/configStore';\nimport {useLegacyStore} from 'sentry/stores/useLegacyStore';\nimport {Config} from 'sentry/types';\nimport getDisplayName from 'sentry/utils/getDisplayName';\n\ntype InjectedConfigProps = {\n  config: Config;\n};\n\n/**\n * Higher order component that passes the config object to the wrapped\n * component\n */\nfunction withConfig<P extends InjectedConfigProps>(\n  WrappedComponent: React.ComponentType<P>\n) {\n  type Props = Omit<P, keyof InjectedConfigProps> & Partial<InjectedConfigProps>;\n\n  const Wrapper: React.FC<Props> = props => {\n    const config = useLegacyStore(ConfigStore);\n    const allProps = {config, ...props} as P;\n\n    return <WrappedComponent {...allProps} />;\n  };\n\n  Wrapper.displayName = `withConfig(${getDisplayName(WrappedComponent)})`;\n\n  return Wrapper;\n}\n\nexport default withConfig;\n","import {createContext} from 'react';\n\nimport {Organization} from 'sentry/types';\n\nexport const OrganizationContext = createContext<Organization | null>(null);\n"],"names":["DEFAULT_NO_ACCESS_MESSAGE","type","showIcon","t","Access","Component","render","organization","config","access","requireAll","isSuperuser","renderNoAccessMessage","children","this","props","orgAccess","hasAccess","acc","includes","hasSuperuser","user","renderProps","isRenderFunc","withOrganization","withConfig","Wrapper","StyledInput","inputStyles","p","theme","backgroundSecondary","rtl","OverflowContainer","StyledCopyButton","Button","TextCopyInput","createRef","e","textRef","current","onCopy","handleSelectText","stopPropagation","node","findDOMNode","HTMLElement","HTMLInputElement","setSelectionRange","value","length","selectText","className","disabled","style","inputValue","readOnly","ref","onClick","hideUnsupported","handleCopyClick","getDefaultSelection","projects","environments","datetime","start","end","period","DEFAULT_STATS_PERIOD","utc","extractSelectionParameters","query","pickBy","pick","Object","values","URL_PARAM","identity","isSelectionEqual","selection","other","isEqual","toString","Truncate","isExpanded","maxLength","setState","state","leftTrim","trimRegex","minLength","expandable","expandDirection","isTruncated","shortValue","slicedValue","slice","valueIndex","search","matches","match","lastIndex","lastIndexOf","onMouseOver","onFocus","undefined","onMouseOut","onBlur","FullValue","expanded","background","space","innerBorder","zIndex","truncationFullValue","route","title","fields","name","label","placeholder","help","showReturnButton","isTombstone","maybe","hasOwnProperty","getMessage","event","culprit","metadata","EventOrGroupType","message","getLocation","isNativePlatform","platform","filename","getTreeLabelPartDetails","part","function","package","filebase","classbase","computeTitleWithTreeLabel","current_tree_label","finest_tree_label","treeLabel","formattedTreeLabel","map","labelPart","join","getTitle","features","grouping","customTitle","subtitle","isMobilePlatform","directive","uri","origin","getShortEventId","eventId","substring","mobile","useContext","OrganizationContext","Error","WrappedComponent","allProps","useLegacyStore","ConfigStore","displayName","getDisplayName","createContext"],"sourceRoot":""}