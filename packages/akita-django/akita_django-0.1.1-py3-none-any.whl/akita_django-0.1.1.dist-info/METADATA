Metadata-Version: 2.1
Name: akita-django
Version: 0.1.1
Summary: Utilities for connecting Akita to Django
Home-page: https://github.com/akitasoftware/akita-django
Author: Cole Schlesinger
Author-email: cole@akitasoftware.com
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: akita-har
Requires-Dist: requests
Requires-Dist: django

# Akita Django Integration

This package extends `django.test.Client` in order to instrument Django
integration tests, capturing requests and responses to the service under test.
You can drop in `akita_django.test.Client` everywhere you use Django's `Client`,
and Akita will use your integration tests to build a spec for your service.

Why build specs?  A spec shows your service's APIs.  Using Akita to build specs
from your integration tests makes it clear what APIs your code implements --
and you can diff specs, showing what impact a code change will have on your
customers.  For more info, see [Catching Breaking Changes
Faster](https://docs.akita.software/docs) in the Akita docs.

## See it in Action

Take a look at the [Akibox Django
Tutorial](https://github.com/akitasoftware/akibox-django-rest-framework), which
implements a toy Dropbox-like file server and tests it using the Akita Django
Integration.

# Middleware

This package also provides a Django Middleware class that sends 
requests and responses to the Akita CLI, running in Daemon mode. 
See [Django on Heroku](https://docs.akita.software/docs/django-on-heroku) 
in the Akita docs for more information.
