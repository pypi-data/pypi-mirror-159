Metadata-Version: 2.1
Name: types-aiobotocore-clouddirectory
Version: 2.3.4.post1
Summary: Type annotations for aiobotocore.CloudDirectory 2.3.4 service generated with mypy-boto3-builder 7.8.0
Home-page: https://github.com/youtype/mypy_boto3_builder
Author: Vlad Emelianov
Author-email: vlad.emelianov.nz@gmail.com
License: MIT License
Project-URL: Documentation, https://youtype.github.io/types_aiobotocore_docs/types_aiobotocore_clouddirectory/
Project-URL: Source, https://github.com/youtype/mypy_boto3_builder
Project-URL: Tracker, https://github.com/youtype/mypy_boto3_builder/issues
Keywords: aiobotocore clouddirectory type-annotations boto3-stubs mypy typeshed autocomplete
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Environment :: Console
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Typing :: Typed
Requires-Python: >=3.6
Description-Content-Type: text/markdown
Requires-Dist: typing-extensions (>=4.1.0)

<a id="types-aiobotocore-clouddirectory"></a>

# types-aiobotocore-clouddirectory

[![PyPI - types-aiobotocore-clouddirectory](https://img.shields.io/pypi/v/types-aiobotocore-clouddirectory.svg?color=blue)](https://pypi.org/project/types-aiobotocore-clouddirectory)
[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/types-aiobotocore-clouddirectory.svg?color=blue)](https://pypi.org/project/types-aiobotocore-clouddirectory)
[![Docs](https://img.shields.io/readthedocs/mypy-boto3-builder.svg?color=blue)](https://mypy-boto3-builder.readthedocs.io/)
[![PyPI - Downloads](https://img.shields.io/pypi/dm/types-aiobotocore-clouddirectory?color=blue)](https://pypistats.org/packages/types-aiobotocore-clouddirectory)

![boto3.typed](https://github.com/youtype/mypy_boto3_builder/raw/main/logo.png)

Type annotations for
[aiobotocore.CloudDirectory 2.3.4](https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/clouddirectory.html#CloudDirectory)
service compatible with [VSCode](https://code.visualstudio.com/),
[PyCharm](https://www.jetbrains.com/pycharm/),
[Emacs](https://www.gnu.org/software/emacs/),
[Sublime Text](https://www.sublimetext.com/),
[mypy](https://github.com/python/mypy),
[pyright](https://github.com/microsoft/pyright) and other tools.

Generated by
[mypy-boto3-builder 7.8.0](https://github.com/youtype/mypy_boto3_builder).

More information can be found on
[types-aiobotocore](https://pypi.org/project/types-aiobotocore/) page and in
[types-aiobotocore-clouddirectory docs](https://youtype.github.io/types_aiobotocore_docs/types_aiobotocore_clouddirectory/).

See how it helps to find and fix potential bugs:

![boto3-stubs demo](https://github.com/youtype/mypy_boto3_builder/raw/main/demo.gif)

- [types-aiobotocore-clouddirectory](#types-aiobotocore-clouddirectory)
  - [How to install](#how-to-install)
    - [VSCode extension](#vscode-extension)
    - [From PyPI with pip](#from-pypi-with-pip)
  - [How to uninstall](#how-to-uninstall)
  - [Usage](#usage)
    - [VSCode](#vscode)
    - [PyCharm](#pycharm)
    - [Emacs](#emacs)
    - [Sublime Text](#sublime-text)
    - [Other IDEs](#other-ides)
    - [mypy](#mypy)
    - [pyright](#pyright)
  - [Explicit type annotations](#explicit-type-annotations)
    - [Client annotations](#client-annotations)
    - [Paginators annotations](#paginators-annotations)

<a id="how-to-install"></a>

## How to install

<a id="vscode-extension"></a>

### VSCode extension

Add
[AWS Boto3](https://marketplace.visualstudio.com/items?itemName=Boto3typed.boto3-ide)
extension to your VSCode and run `AWS boto3: Quick Start` command.

Click `Modify` and select `boto3 common` and `CloudDirectory`.

<a id="from-pypi-with-pip"></a>

### From PyPI with pip

Install `types-aiobotocore` for `CloudDirectory` service.

```bash
# install with aiobotocore type annotations
python -m pip install 'types-aiobotocore[clouddirectory]'


# Lite version does not provide session.client/resource overloads
# it is more RAM-friendly, but requires explicit type annotations
python -m pip install 'types-aiobotocore-lite[clouddirectory]'


# standalone installation
python -m pip install types-aiobotocore-clouddirectory
```

<a id="how-to-uninstall"></a>

## How to uninstall

```bash
python -m pip uninstall -y types-aiobotocore-clouddirectory
```

<a id="usage"></a>

## Usage

<a id="vscode"></a>

### VSCode

- Install
  [Python extension](https://marketplace.visualstudio.com/items?itemName=ms-python.python)
- Install
  [Pylance extension](https://marketplace.visualstudio.com/items?itemName=ms-python.vscode-pylance)
- Set `Pylance` as your Python Language Server
- Install `types-aiobotocore[clouddirectory]` in your environment:

```bash
python -m pip install 'types-aiobotocore[clouddirectory]'
```

Both type checking and code completion should now work. No explicit type
annotations required, write your `aiobotocore` code as usual.

<a id="pycharm"></a>

### PyCharm

Install `types-aiobotocore-lite[clouddirectory]` in your environment:

```bash
python -m pip install 'types-aiobotocore-lite[clouddirectory]'`
```

Both type checking and code completion should now work. Explicit type
annotations **are required**.

Use `types-aiobotocore` package instead for implicit type discovery.

<a id="emacs"></a>

### Emacs

- Install `types-aiobotocore` with services you use in your environment:

```bash
python -m pip install 'types-aiobotocore[clouddirectory]'
```

- Install [use-package](https://github.com/jwiegley/use-package),
  [lsp](https://github.com/emacs-lsp/lsp-mode/),
  [company](https://github.com/company-mode/company-mode) and
  [flycheck](https://github.com/flycheck/flycheck) packages
- Install [lsp-pyright](https://github.com/emacs-lsp/lsp-pyright) package

```elisp
(use-package lsp-pyright
  :ensure t
  :hook (python-mode . (lambda ()
                          (require 'lsp-pyright)
                          (lsp)))  ; or lsp-deferred
  :init (when (executable-find "python3")
          (setq lsp-pyright-python-executable-cmd "python3"))
  )
```

- Make sure emacs uses the environment where you have installed
  `types-aiobotocore`

Type checking should now work. No explicit type annotations required, write
your `aiobotocore` code as usual.

<a id="sublime-text"></a>

### Sublime Text

- Install `types-aiobotocore[clouddirectory]` with services you use in your
  environment:

```bash
python -m pip install 'types-aiobotocore[clouddirectory]'
```

- Install [LSP-pyright](https://github.com/sublimelsp/LSP-pyright) package

Type checking should now work. No explicit type annotations required, write
your `aiobotocore` code as usual.

<a id="other-ides"></a>

### Other IDEs

Not tested, but as long as your IDE supports `mypy` or `pyright`, everything
should work.

<a id="mypy"></a>

### mypy

- Install `mypy`: `python -m pip install mypy`
- Install `types-aiobotocore[clouddirectory]` in your environment:

```bash
python -m pip install 'types-aiobotocore[clouddirectory]'`
```

Type checking should now work. No explicit type annotations required, write
your `aiobotocore` code as usual.

<a id="pyright"></a>

### pyright

- Install `pyright`: `npm i -g pyright`
- Install `types-aiobotocore[clouddirectory]` in your environment:

```bash
python -m pip install 'types-aiobotocore[clouddirectory]'
```

Optionally, you can install `types-aiobotocore` to `typings` folder.

Type checking should now work. No explicit type annotations required, write
your `aiobotocore` code as usual.

<a id="explicit-type-annotations"></a>

## Explicit type annotations

<a id="client-annotations"></a>

### Client annotations

`CloudDirectoryClient` provides annotations for
`session.create_client("clouddirectory")`.

```python
from aiobotocore.session import get_session

from types_aiobotocore_clouddirectory import CloudDirectoryClient

session = get_session()
async with session.create_client("clouddirectory") as client:
    client: CloudDirectoryClient
    # now client usage is checked by mypy and IDE should provide code completion
```

<a id="paginators-annotations"></a>

### Paginators annotations

`types_aiobotocore_clouddirectory.paginator` module contains type annotations
for all paginators.

````python
from aiobotocore.session import get_session

from types_aiobotocore_clouddirectory import CloudDirectoryClient
from types_aiobotocore_clouddirectory.paginator import (
    ListAppliedSchemaArnsPaginator,
    ListAttachedIndicesPaginator,
    ListDevelopmentSchemaArnsPaginator,
    ListDirectoriesPaginator,
    ListFacetAttributesPaginator,
    ListFacetNamesPaginator,
    ListIncomingTypedLinksPaginator,
    ListIndexPaginator,
    ListManagedSchemaArnsPaginator,
    ListObjectAttributesPaginator,
    ListObjectParentPathsPaginator,
    ListObjectPoliciesPaginator,
    ListOutgoingTypedLinksPaginator,
    ListPolicyAttachmentsPaginator,
    ListPublishedSchemaArnsPaginator,
    ListTagsForResourcePaginator,
    ListTypedLinkFacetAttributesPaginator,
    ListTypedLinkFacetNamesPaginator,
    LookupPolicyPaginator,
)

session = get_session()
async with session.create_client("clouddirectory") as client:
    client: CloudDirectoryClient

    # Explicit type annotations are optional here
    # Type should be correctly discovered by mypy and IDEs
    # VSCode requires explicit type annotations
        list_applied_schema_arns_paginator: ListAppliedSchemaArnsPaginator = client.get_paginator("list_applied_schema_arns")
        list_attached_indices_paginator: ListAttachedIndicesPaginator = client.get_paginator("list_attached_indices")
        list_development_schema_arns_paginator: ListDevelopmentSchemaArnsPaginator = client.get_paginator("list_development_schema_arns")
        list_directories_paginator: ListDirectoriesPaginator = client.get_paginator("list_directories")
        list_facet_attributes_paginator: ListFacetAttributesPaginator = client.get_paginator("list_facet_attributes")
        list_facet_names_paginator: ListFacetNamesPaginator = client.get_paginator("list_facet_names")
        list_incoming_typed_links_paginator: ListIncomingTypedLinksPaginator = client.get_paginator("list_incoming_typed_links")
        list_index_paginator: ListIndexPaginator = client.get_paginator("list_index")
        list_managed_schema_arns_paginator: ListManagedSchemaArnsPaginator = client.get_paginator("list_managed_schema_arns")
        list_object_attributes_paginator: ListObjectAttributesPaginator = client.get_paginator("list_object_attributes")
        list_object_parent_paths_paginator: ListObjectParentPathsPaginator = client.get_paginator("list_object_parent_paths")
        list_object_policies_paginator: ListObjectPoliciesPaginator = client.get_paginator("list_object_policies")
        list_outgoing_typed_links_paginator: ListOutgoingTypedLinksPaginator = client.get_paginator("list_outgoing_typed_links")
        list_policy_attachments_paginator: ListPolicyAttachmentsPaginator = client.get_paginator("list_policy_attachments")
        list_published_schema_arns_paginator: ListPublishedSchemaArnsPaginator = client.get_paginator("list_published_schema_arns")
        list_tags_for_resource_paginator: ListTagsForResourcePaginator = client.get_paginator("list_tags_for_resource")
        list_typed_link_facet_attributes_paginator: ListTypedLinkFacetAttributesPaginator = client.get_paginator("list_typed_link_facet_attributes")
        list_typed_link_facet_names_paginator: ListTypedLinkFacetNamesPaginator = client.get_paginator("list_typed_link_facet_names")
        lookup_policy_paginator: LookupPolicyPaginator = client.get_paginator("lookup_policy")
    ```







### Literals

`types_aiobotocore_clouddirectory.literals` module contains literals extracted from shapes
that can be used in user code for type checking.

```python
from types_aiobotocore_clouddirectory.literals import (
    BatchReadExceptionTypeType,
    ConsistencyLevelType,
    DirectoryStateType,
    FacetAttributeTypeType,
    FacetStyleType,
    ListAppliedSchemaArnsPaginatorName,
    ListAttachedIndicesPaginatorName,
    ListDevelopmentSchemaArnsPaginatorName,
    ListDirectoriesPaginatorName,
    ListFacetAttributesPaginatorName,
    ListFacetNamesPaginatorName,
    ListIncomingTypedLinksPaginatorName,
    ListIndexPaginatorName,
    ListManagedSchemaArnsPaginatorName,
    ListObjectAttributesPaginatorName,
    ListObjectParentPathsPaginatorName,
    ListObjectPoliciesPaginatorName,
    ListOutgoingTypedLinksPaginatorName,
    ListPolicyAttachmentsPaginatorName,
    ListPublishedSchemaArnsPaginatorName,
    ListTagsForResourcePaginatorName,
    ListTypedLinkFacetAttributesPaginatorName,
    ListTypedLinkFacetNamesPaginatorName,
    LookupPolicyPaginatorName,
    ObjectTypeType,
    RangeModeType,
    RequiredAttributeBehaviorType,
    RuleTypeType,
    UpdateActionTypeType,
    CloudDirectoryServiceName,
    ServiceName,
    ResourceServiceName,
    PaginatorName,
    RegionName,
)

def check_value(value: BatchReadExceptionTypeType) -> bool:
    ...
````

### Typed dictionaries

`types_aiobotocore_clouddirectory.type_defs` module contains structures and
shapes assembled to typed dictionaries for additional type checking.

```python
from types_aiobotocore_clouddirectory.type_defs import (
    ObjectReferenceTypeDef,
    SchemaFacetTypeDef,
    ApplySchemaRequestRequestTypeDef,
    ResponseMetadataTypeDef,
    TypedLinkSchemaAndFacetNameTypeDef,
    AttributeKeyTypeDef,
    TypedAttributeValueTypeDef,
    BatchAttachObjectResponseTypeDef,
    BatchAttachToIndexResponseTypeDef,
    BatchCreateIndexResponseTypeDef,
    BatchCreateObjectResponseTypeDef,
    BatchDetachFromIndexResponseTypeDef,
    BatchDetachObjectResponseTypeDef,
    BatchListObjectChildrenResponseTypeDef,
    PathToObjectIdentifiersTypeDef,
    ObjectIdentifierAndLinkNameTupleTypeDef,
    BatchListObjectPoliciesResponseTypeDef,
    BatchListPolicyAttachmentsResponseTypeDef,
    BatchReadExceptionTypeDef,
    BatchUpdateObjectAttributesResponseTypeDef,
    CreateDirectoryRequestRequestTypeDef,
    CreateSchemaRequestRequestTypeDef,
    DeleteDirectoryRequestRequestTypeDef,
    DeleteFacetRequestRequestTypeDef,
    DeleteSchemaRequestRequestTypeDef,
    DeleteTypedLinkFacetRequestRequestTypeDef,
    DirectoryTypeDef,
    DisableDirectoryRequestRequestTypeDef,
    EnableDirectoryRequestRequestTypeDef,
    RuleTypeDef,
    FacetAttributeReferenceTypeDef,
    FacetTypeDef,
    GetAppliedSchemaVersionRequestRequestTypeDef,
    GetDirectoryRequestRequestTypeDef,
    GetFacetRequestRequestTypeDef,
    GetSchemaAsJsonRequestRequestTypeDef,
    GetTypedLinkFacetInformationRequestRequestTypeDef,
    PaginatorConfigTypeDef,
    ListAppliedSchemaArnsRequestRequestTypeDef,
    ListDevelopmentSchemaArnsRequestRequestTypeDef,
    ListDirectoriesRequestRequestTypeDef,
    ListFacetAttributesRequestRequestTypeDef,
    ListFacetNamesRequestRequestTypeDef,
    ListManagedSchemaArnsRequestRequestTypeDef,
    ListPublishedSchemaArnsRequestRequestTypeDef,
    ListTagsForResourceRequestRequestTypeDef,
    TagTypeDef,
    ListTypedLinkFacetAttributesRequestRequestTypeDef,
    ListTypedLinkFacetNamesRequestRequestTypeDef,
    PolicyAttachmentTypeDef,
    PublishSchemaRequestRequestTypeDef,
    PutSchemaFromJsonRequestRequestTypeDef,
    UntagResourceRequestRequestTypeDef,
    UpdateSchemaRequestRequestTypeDef,
    UpgradeAppliedSchemaRequestRequestTypeDef,
    UpgradePublishedSchemaRequestRequestTypeDef,
    AttachObjectRequestRequestTypeDef,
    AttachPolicyRequestRequestTypeDef,
    AttachToIndexRequestRequestTypeDef,
    BatchAttachObjectTypeDef,
    BatchAttachPolicyTypeDef,
    BatchAttachToIndexTypeDef,
    BatchDeleteObjectTypeDef,
    BatchDetachFromIndexTypeDef,
    BatchDetachObjectTypeDef,
    BatchDetachPolicyTypeDef,
    BatchGetObjectInformationTypeDef,
    BatchListAttachedIndicesTypeDef,
    BatchListObjectChildrenTypeDef,
    BatchListObjectParentPathsTypeDef,
    BatchListObjectParentsTypeDef,
    BatchListObjectPoliciesTypeDef,
    BatchListPolicyAttachmentsTypeDef,
    BatchLookupPolicyTypeDef,
    DeleteObjectRequestRequestTypeDef,
    DetachFromIndexRequestRequestTypeDef,
    DetachObjectRequestRequestTypeDef,
    DetachPolicyRequestRequestTypeDef,
    GetObjectInformationRequestRequestTypeDef,
    ListAttachedIndicesRequestRequestTypeDef,
    ListObjectChildrenRequestRequestTypeDef,
    ListObjectParentPathsRequestRequestTypeDef,
    ListObjectParentsRequestRequestTypeDef,
    ListObjectPoliciesRequestRequestTypeDef,
    ListPolicyAttachmentsRequestRequestTypeDef,
    LookupPolicyRequestRequestTypeDef,
    BatchGetObjectAttributesTypeDef,
    BatchGetObjectInformationResponseTypeDef,
    BatchListObjectAttributesTypeDef,
    BatchRemoveFacetFromObjectTypeDef,
    GetObjectAttributesRequestRequestTypeDef,
    ListObjectAttributesRequestRequestTypeDef,
    RemoveFacetFromObjectRequestRequestTypeDef,
    ApplySchemaResponseTypeDef,
    AttachObjectResponseTypeDef,
    AttachToIndexResponseTypeDef,
    CreateDirectoryResponseTypeDef,
    CreateIndexResponseTypeDef,
    CreateObjectResponseTypeDef,
    CreateSchemaResponseTypeDef,
    DeleteDirectoryResponseTypeDef,
    DeleteSchemaResponseTypeDef,
    DetachFromIndexResponseTypeDef,
    DetachObjectResponseTypeDef,
    DisableDirectoryResponseTypeDef,
    EmptyResponseMetadataTypeDef,
    EnableDirectoryResponseTypeDef,
    GetAppliedSchemaVersionResponseTypeDef,
    GetObjectInformationResponseTypeDef,
    GetSchemaAsJsonResponseTypeDef,
    GetTypedLinkFacetInformationResponseTypeDef,
    ListAppliedSchemaArnsResponseTypeDef,
    ListDevelopmentSchemaArnsResponseTypeDef,
    ListFacetNamesResponseTypeDef,
    ListManagedSchemaArnsResponseTypeDef,
    ListObjectChildrenResponseTypeDef,
    ListObjectPoliciesResponseTypeDef,
    ListPolicyAttachmentsResponseTypeDef,
    ListPublishedSchemaArnsResponseTypeDef,
    ListTypedLinkFacetNamesResponseTypeDef,
    PublishSchemaResponseTypeDef,
    PutSchemaFromJsonResponseTypeDef,
    UpdateObjectAttributesResponseTypeDef,
    UpdateSchemaResponseTypeDef,
    UpgradeAppliedSchemaResponseTypeDef,
    UpgradePublishedSchemaResponseTypeDef,
    BatchCreateIndexTypeDef,
    CreateIndexRequestRequestTypeDef,
    AttributeKeyAndValueTypeDef,
    AttributeNameAndValueTypeDef,
    LinkAttributeActionTypeDef,
    ObjectAttributeActionTypeDef,
    TypedAttributeValueRangeTypeDef,
    BatchListObjectParentPathsResponseTypeDef,
    ListObjectParentPathsResponseTypeDef,
    BatchListObjectParentsResponseTypeDef,
    ListObjectParentsResponseTypeDef,
    GetDirectoryResponseTypeDef,
    ListDirectoriesResponseTypeDef,
    FacetAttributeDefinitionTypeDef,
    TypedLinkAttributeDefinitionTypeDef,
    GetFacetResponseTypeDef,
    ListAppliedSchemaArnsRequestListAppliedSchemaArnsPaginateTypeDef,
    ListAttachedIndicesRequestListAttachedIndicesPaginateTypeDef,
    ListDevelopmentSchemaArnsRequestListDevelopmentSchemaArnsPaginateTypeDef,
    ListDirectoriesRequestListDirectoriesPaginateTypeDef,
    ListFacetAttributesRequestListFacetAttributesPaginateTypeDef,
    ListFacetNamesRequestListFacetNamesPaginateTypeDef,
    ListManagedSchemaArnsRequestListManagedSchemaArnsPaginateTypeDef,
    ListObjectAttributesRequestListObjectAttributesPaginateTypeDef,
    ListObjectParentPathsRequestListObjectParentPathsPaginateTypeDef,
    ListObjectPoliciesRequestListObjectPoliciesPaginateTypeDef,
    ListPolicyAttachmentsRequestListPolicyAttachmentsPaginateTypeDef,
    ListPublishedSchemaArnsRequestListPublishedSchemaArnsPaginateTypeDef,
    ListTagsForResourceRequestListTagsForResourcePaginateTypeDef,
    ListTypedLinkFacetAttributesRequestListTypedLinkFacetAttributesPaginateTypeDef,
    ListTypedLinkFacetNamesRequestListTypedLinkFacetNamesPaginateTypeDef,
    LookupPolicyRequestLookupPolicyPaginateTypeDef,
    ListTagsForResourceResponseTypeDef,
    TagResourceRequestRequestTypeDef,
    PolicyToPathTypeDef,
    AddFacetToObjectRequestRequestTypeDef,
    BatchAddFacetToObjectTypeDef,
    BatchCreateObjectTypeDef,
    BatchGetLinkAttributesResponseTypeDef,
    BatchGetObjectAttributesResponseTypeDef,
    BatchListObjectAttributesResponseTypeDef,
    CreateObjectRequestRequestTypeDef,
    GetLinkAttributesResponseTypeDef,
    GetObjectAttributesResponseTypeDef,
    IndexAttachmentTypeDef,
    ListObjectAttributesResponseTypeDef,
    AttachTypedLinkRequestRequestTypeDef,
    BatchAttachTypedLinkTypeDef,
    TypedLinkSpecifierTypeDef,
    LinkAttributeUpdateTypeDef,
    ObjectAttributeUpdateTypeDef,
    ObjectAttributeRangeTypeDef,
    TypedLinkAttributeRangeTypeDef,
    FacetAttributeTypeDef,
    ListTypedLinkFacetAttributesResponseTypeDef,
    TypedLinkFacetAttributeUpdateTypeDef,
    TypedLinkFacetTypeDef,
    BatchLookupPolicyResponseTypeDef,
    LookupPolicyResponseTypeDef,
    BatchListAttachedIndicesResponseTypeDef,
    BatchListIndexResponseTypeDef,
    ListAttachedIndicesResponseTypeDef,
    ListIndexResponseTypeDef,
    AttachTypedLinkResponseTypeDef,
    BatchAttachTypedLinkResponseTypeDef,
    BatchDetachTypedLinkTypeDef,
    BatchGetLinkAttributesTypeDef,
    BatchListIncomingTypedLinksResponseTypeDef,
    BatchListOutgoingTypedLinksResponseTypeDef,
    DetachTypedLinkRequestRequestTypeDef,
    GetLinkAttributesRequestRequestTypeDef,
    ListIncomingTypedLinksResponseTypeDef,
    ListOutgoingTypedLinksResponseTypeDef,
    BatchUpdateLinkAttributesTypeDef,
    UpdateLinkAttributesRequestRequestTypeDef,
    BatchUpdateObjectAttributesTypeDef,
    UpdateObjectAttributesRequestRequestTypeDef,
    BatchListIndexTypeDef,
    ListIndexRequestListIndexPaginateTypeDef,
    ListIndexRequestRequestTypeDef,
    BatchListIncomingTypedLinksTypeDef,
    BatchListOutgoingTypedLinksTypeDef,
    ListIncomingTypedLinksRequestListIncomingTypedLinksPaginateTypeDef,
    ListIncomingTypedLinksRequestRequestTypeDef,
    ListOutgoingTypedLinksRequestListOutgoingTypedLinksPaginateTypeDef,
    ListOutgoingTypedLinksRequestRequestTypeDef,
    CreateFacetRequestRequestTypeDef,
    FacetAttributeUpdateTypeDef,
    ListFacetAttributesResponseTypeDef,
    UpdateTypedLinkFacetRequestRequestTypeDef,
    CreateTypedLinkFacetRequestRequestTypeDef,
    BatchWriteOperationResponseTypeDef,
    BatchReadSuccessfulResponseTypeDef,
    BatchWriteOperationTypeDef,
    BatchReadOperationTypeDef,
    UpdateFacetRequestRequestTypeDef,
    BatchWriteResponseTypeDef,
    BatchReadOperationResponseTypeDef,
    BatchWriteRequestRequestTypeDef,
    BatchReadRequestRequestTypeDef,
    BatchReadResponseTypeDef,
)

def get_structure() -> ObjectReferenceTypeDef:
    return {
      ...
    }
```

## How it works

Fully automated
[mypy-boto3-builder](https://github.com/youtype/mypy_boto3_builder) carefully
generates type annotations for each service, patiently waiting for
`aiobotocore` updates. It delivers a drop-in type annotations for you and makes
sure that:

- All available `aiobotocore` services are covered.
- Each public class and method of every `aiobotocore` service gets valid type
  annotations extracted from the documentation (blame `botocore` docs if types
  are incorrect).
- Type annotations include up-to-date documentation.
- Link to documentation is provided for every method.
- Code is processed by [black](https://github.com/psf/black) and
  [isort](https://github.com/PyCQA/isort) for readability.

## What's new

### Implemented features

- Fully type annotated `boto3`, `botocore` and `aiobotocore` libraries
- `mypy`, `pyright`, `VSCode`, `PyCharm`, `Sublime Text` and `Emacs`
  compatibility
- `Client`, `ServiceResource`, `Resource`, `Waiter` `Paginator` type
  annotations for each service
- Generated `TypeDefs` for each service
- Generated `Literals` for each service
- Auto discovery of types for `boto3.client` and `boto3.session` calls
- Auto discovery of types for `session.client` and `session.session` calls
- Auto discovery of types for `client.get_waiter` and `client.get_paginator`
  calls
- Auto discovery of types for `ServiceResource` and `Resource` collections
- Auto discovery of types for `aiobotocore.Session.create_client` calls

### Latest changes

Builder changelog can be found in
[Releases](https://github.com/youtype/mypy_boto3_builder/releases).

## Versioning

`types-aiobotocore-clouddirectory` version is the same as related `aiobotocore`
version and follows [PEP 440](https://www.python.org/dev/peps/pep-0440/)
format.

## Thank you

- [Allie Fitter](https://github.com/alliefitter) for
  [boto3-type-annotations](https://pypi.org/project/boto3-type-annotations/),
  this package is based on top of his work
- [black](https://github.com/psf/black) developers for an awesome formatting
  tool
- [Timothy Edmund Crosley](https://github.com/timothycrosley) for
  [isort](https://github.com/PyCQA/isort) and how flexible it is
- [mypy](https://github.com/python/mypy) developers for doing all dirty work
  for us
- [pyright](https://github.com/microsoft/pyright) team for the new era of typed
  Python

## Documentation

All services type annotations can be found in
[aiobotocore docs](https://youtype.github.io/types_aiobotocore_docs/types_aiobotocore_clouddirectory/)

## Support and contributing

This package is auto-generated. Please reports any bugs or request new features
in [mypy-boto3-builder](https://github.com/youtype/mypy_boto3_builder/issues/)
repository.


