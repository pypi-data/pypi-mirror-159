# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetSecureConnectBundleUrlResult',
    'AwaitableGetSecureConnectBundleUrlResult',
    'get_secure_connect_bundle_url',
    'get_secure_connect_bundle_url_output',
]

@pulumi.output_type
class GetSecureConnectBundleUrlResult:
    """
    A collection of values returned by getSecureConnectBundleUrl.
    """
    def __init__(__self__, database_id=None, id=None, url=None):
        if database_id and not isinstance(database_id, str):
            raise TypeError("Expected argument 'database_id' to be a str")
        pulumi.set(__self__, "database_id", database_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if url and not isinstance(url, str):
            raise TypeError("Expected argument 'url' to be a str")
        pulumi.set(__self__, "url", url)

    @property
    @pulumi.getter(name="databaseId")
    def database_id(self) -> str:
        return pulumi.get(self, "database_id")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def url(self) -> str:
        return pulumi.get(self, "url")


class AwaitableGetSecureConnectBundleUrlResult(GetSecureConnectBundleUrlResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetSecureConnectBundleUrlResult(
            database_id=self.database_id,
            id=self.id,
            url=self.url)


def get_secure_connect_bundle_url(database_id: Optional[str] = None,
                                  opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetSecureConnectBundleUrlResult:
    """
    `get_secure_connect_bundle_url` provides a datasource that generates a temporary secure connect bundle URL. This URL lasts five minutes. Secure connect bundles are used to connect to Astra using cql cassandra drivers. See the [docs](https://docs.datastax.com/en/astra/docs/connecting-to-database.html) for more information on how to connect.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_astra as astra

    dev = astra.get_secure_connect_bundle_url(database_id="f9f4b1e0-4c05-451e-9bba-d631295a7f73")
    ```
    """
    __args__ = dict()
    __args__['databaseId'] = database_id
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
        if opts.plugin_download_url is None:
            opts.plugin_download_url = _utilities.get_plugin_download_url()
    __ret__ = pulumi.runtime.invoke('astra:index/getSecureConnectBundleUrl:getSecureConnectBundleUrl', __args__, opts=opts, typ=GetSecureConnectBundleUrlResult).value

    return AwaitableGetSecureConnectBundleUrlResult(
        database_id=__ret__.database_id,
        id=__ret__.id,
        url=__ret__.url)


@_utilities.lift_output_func(get_secure_connect_bundle_url)
def get_secure_connect_bundle_url_output(database_id: Optional[pulumi.Input[str]] = None,
                                         opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetSecureConnectBundleUrlResult]:
    """
    `get_secure_connect_bundle_url` provides a datasource that generates a temporary secure connect bundle URL. This URL lasts five minutes. Secure connect bundles are used to connect to Astra using cql cassandra drivers. See the [docs](https://docs.datastax.com/en/astra/docs/connecting-to-database.html) for more information on how to connect.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_astra as astra

    dev = astra.get_secure_connect_bundle_url(database_id="f9f4b1e0-4c05-451e-9bba-d631295a7f73")
    ```
    """
    ...
