[metadata]
name = libusb
version = 1.0.26b2
description = Python binding for the libusb C library.
url = https://pypi.org/project/libusb/
download_url = https://pypi.org/project/libusb/
author = Adam Karpierz
author_email = adam@karpierz.net
maintainer = Adam Karpierz
maintainer_email = adam@karpierz.net
license = zlib/libpng License ; https://opensource.org/licenses/Zlib
long_description = file: README.rst, CHANGES.rst
long_description_content_type = text/x-rst; charset=UTF-8
project_urls = 
	Documentation=https://libusb.readthedocs.io/
	Source=https://github.com/karpierz/libusb
	Issues=https://github.com/karpierz/libusb/issues
license_files = LICENSE
keywords = usb, libusb
platforms = any
classifiers = 
	Development Status :: 4 - Beta
	Intended Audience :: Developers
	License :: OSI Approved :: zlib/libpng License
	Operating System :: OS Independent
	Natural Language :: Polish
	Programming Language :: Python
	Programming Language :: Python :: 3
	Programming Language :: Python :: 3.7
	Programming Language :: Python :: 3.8
	Programming Language :: Python :: 3.9
	Programming Language :: Python :: 3.10
	Programming Language :: Python :: 3.11
	Programming Language :: Python :: 3 :: Only
	Programming Language :: Python :: Implementation :: CPython
	Programming Language :: Python :: Implementation :: PyPy
	Programming Language :: Python :: Implementation :: Stackless
	Topic :: Software Development :: Libraries :: Python Modules

[options]
python_requires = >=3.7.0,<4.0.0
install_requires = 
	setuptools>=42.0.2
	packaging>=21.3.0
	importlib-resources>=5.7.1
	importlib-metadata>=4.11.4
	pkg_about>=1.0.4
packages = find:
package_dir = 
	= src
zip_safe = False

[options.packages.find]
where = src

[options.extras_require]
doc = 
	docutils>=0.14,<0.19
	Sphinx>=4.5.0
	sphinx-tabs>=3.4.1
	sphinx_copybutton>=0.5.0
	sphinxcontrib-spelling>=7.6.0
	restructuredtext-lint>=1.4.0
	nbsphinx>=0.8.9
test = 
	deepdiff>=5.8.1

[options.package_data]
libusb = libusb.cfg
libusb._platform = */*/*.dll, */*/*.so, */*/*.dylib, */*/.keep

[options.entry_points]
console_scripts = 

[sdist]
formats = zip

[bdist_wheel]
universal = False

[build_sphinx]
source-dir = docs
build-dir = build/docs
builder = html
all-files = True
warning-is-error = True

[tox:tox]
envlist = py{37,38,39,310,311}, pypy{37,38,39}, coverage, docs
minversion = 3.24.5
isolated_build = True
skip_missing_interpreters = true
requires = 
	tox-venv>=0.4.0
	tox-backticks>=0.3.0
	tox-tags>=0.2.0
	tox-run-before>=0.1
	{[base]setup_requires}

[base]
setup_requires = 
	pip>=21.2.4
	setuptools>=57.4.0
	wheel>=0.37.1
packagesubdir = libusb

[testenv]
passenv = WINDIR
commands = 
	{envpython} --version
	{envpython} -B -m tests {posargs}
extras = test
deps = 
	{[base]setup_requires}

[testenv:prepare]
basepython = python3.7
skip_install = true
allowlist_externals = 
	cmd
	.build
commands = 
	cmd /C if exist .build.cmd .build.cmd

[testenv:coverage]
basepython = python3.7
commands = 
	{envpython} -m coverage erase
	-{envpython} -B -m coverage run -m tests {posargs}
	{envpython} -m coverage report
	{envpython} -m coverage html
deps = 
	{[testenv]deps}
	coverage>=6.4.2
	diff-cover>=6.5.1

[testenv:docs]
basepython = python3.7
commands = 
	{envpython} setup.py -v build_sphinx -b html -E
	{envpython} setup.py -v build_sphinx -b linkcheck
	{envpython} setup.py -v build_sphinx -b doctest
extras = doc
deps = 

[testenv:build]
basepython = python3.7
setenv = 
	PKG_NAME=`{envpython} setup.py --fullname`
	PKG_DIST=`{envpython} -c 'print("""{env:PKG_NAME}""".strip(), end="")'`
	PKG_PVER=`{envpython} -c 'import platform ; print("".join(platform.python_version_tuple()[:2]))'`
commands = 
	{[testenv]commands}
	{[testenv:docs]commands}
	{envpython} setup.py sdist
	{envpython} setup.py --quiet bdist_wheel
	{envpython} -m twine check dist/*
extras = 
	{[testenv]extras}
	{[testenv:docs]extras}
deps = 
	{[testenv]deps}
	{[testenv:docs]deps}
	twine>=4.0.1

[testenv:publish]
basepython = python3.7
setenv = 
	{[testenv:build]setenv}
commands = 
	{[testenv:build]commands}
	{envpython} -m twine upload dist/*
extras = 
	{[testenv:build]extras}
deps = 
	{[testenv:build]deps}
	twine>=4.0.1

[testenv:lint]
basepython = python3.7
commands = 
	{envpython} -m flake8 {envsitepackagesdir}/{[base]packagesubdir}/
extras = 
deps = 
	{[testenv]deps}
	flake8>=4.0.1
	flake8-docstrings>=1.6.0
	pep8-naming>=0.12.1
	flake8-builtins>=1.5.3

[coverage:run]
source = 
	libusb
	tests
data_file = .tox/coverage/.coverage

[coverage:report]
exclude_lines = 
	pragma: no cover
	raise (AssertionError|NotImplementedError)
	if\s+(0|False)\s*:
	if\s+__name__.*\s*==\s*['"]__main__['"]\s*:
	^\s*@unittest\.skip\(
	^\s*@unittest\.skipIf\(sys\.platform\.startswith\("win"\)
omit = 
	tests/run.py
skip_covered = False

[coverage:html]
directory = .tox/coverage/.coverage.html

[flake8]
filename = *.py,*.pyx
max-line-length = 99
ignore = E126,E203,E221,E251,E302,E701,E702,E731,
	E122,E127,E128,E222,E272,E241,E266, E226,E704,
	D100, D101, D102, D103, D104, D400, D401, D202,
	N806, N802, N803, N801,
	I100
output-file = .tox/lint/flake8out.txt
count = True

[egg_info]
tag_build = 
tag_date = 0

