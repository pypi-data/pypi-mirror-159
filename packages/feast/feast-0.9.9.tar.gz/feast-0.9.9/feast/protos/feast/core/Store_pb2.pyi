"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Store(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _StoreType(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[StoreType.V], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        INVALID = Store.StoreType.V(0)
        REDIS = Store.StoreType.V(1)
        REDIS_CLUSTER = Store.StoreType.V(4)
    class StoreType(metaclass=_StoreType):
        V = typing.NewType('V', builtins.int)
    INVALID = Store.StoreType.V(0)
    REDIS = Store.StoreType.V(1)
    REDIS_CLUSTER = Store.StoreType.V(4)

    class RedisConfig(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        HOST_FIELD_NUMBER: builtins.int
        PORT_FIELD_NUMBER: builtins.int
        INITIAL_BACKOFF_MS_FIELD_NUMBER: builtins.int
        MAX_RETRIES_FIELD_NUMBER: builtins.int
        FLUSH_FREQUENCY_SECONDS_FIELD_NUMBER: builtins.int
        SSL_FIELD_NUMBER: builtins.int
        host: typing.Text = ...
        port: builtins.int = ...
        initial_backoff_ms: builtins.int = ...
        max_retries: builtins.int = ...
        flush_frequency_seconds: builtins.int = ...
        ssl: builtins.bool = ...

        def __init__(self,
            *,
            host : typing.Text = ...,
            port : builtins.int = ...,
            initial_backoff_ms : builtins.int = ...,
            max_retries : builtins.int = ...,
            flush_frequency_seconds : builtins.int = ...,
            ssl : builtins.bool = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal[u"flush_frequency_seconds",b"flush_frequency_seconds",u"host",b"host",u"initial_backoff_ms",b"initial_backoff_ms",u"max_retries",b"max_retries",u"port",b"port",u"ssl",b"ssl"]) -> None: ...

    class RedisClusterConfig(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _ReadFrom(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[ReadFrom.V], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            MASTER = Store.RedisClusterConfig.ReadFrom.V(0)
            MASTER_PREFERRED = Store.RedisClusterConfig.ReadFrom.V(1)
            REPLICA = Store.RedisClusterConfig.ReadFrom.V(2)
            REPLICA_PREFERRED = Store.RedisClusterConfig.ReadFrom.V(3)
        class ReadFrom(metaclass=_ReadFrom):
            V = typing.NewType('V', builtins.int)
        MASTER = Store.RedisClusterConfig.ReadFrom.V(0)
        MASTER_PREFERRED = Store.RedisClusterConfig.ReadFrom.V(1)
        REPLICA = Store.RedisClusterConfig.ReadFrom.V(2)
        REPLICA_PREFERRED = Store.RedisClusterConfig.ReadFrom.V(3)

        CONNECTION_STRING_FIELD_NUMBER: builtins.int
        INITIAL_BACKOFF_MS_FIELD_NUMBER: builtins.int
        MAX_RETRIES_FIELD_NUMBER: builtins.int
        FLUSH_FREQUENCY_SECONDS_FIELD_NUMBER: builtins.int
        KEY_PREFIX_FIELD_NUMBER: builtins.int
        ENABLE_FALLBACK_FIELD_NUMBER: builtins.int
        FALLBACK_PREFIX_FIELD_NUMBER: builtins.int
        READ_FROM_FIELD_NUMBER: builtins.int
        connection_string: typing.Text = ...
        initial_backoff_ms: builtins.int = ...
        max_retries: builtins.int = ...
        flush_frequency_seconds: builtins.int = ...
        key_prefix: typing.Text = ...
        enable_fallback: builtins.bool = ...
        fallback_prefix: typing.Text = ...
        read_from: global___Store.RedisClusterConfig.ReadFrom.V = ...

        def __init__(self,
            *,
            connection_string : typing.Text = ...,
            initial_backoff_ms : builtins.int = ...,
            max_retries : builtins.int = ...,
            flush_frequency_seconds : builtins.int = ...,
            key_prefix : typing.Text = ...,
            enable_fallback : builtins.bool = ...,
            fallback_prefix : typing.Text = ...,
            read_from : global___Store.RedisClusterConfig.ReadFrom.V = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal[u"connection_string",b"connection_string",u"enable_fallback",b"enable_fallback",u"fallback_prefix",b"fallback_prefix",u"flush_frequency_seconds",b"flush_frequency_seconds",u"initial_backoff_ms",b"initial_backoff_ms",u"key_prefix",b"key_prefix",u"max_retries",b"max_retries",u"read_from",b"read_from"]) -> None: ...

    class Subscription(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        PROJECT_FIELD_NUMBER: builtins.int
        NAME_FIELD_NUMBER: builtins.int
        EXCLUDE_FIELD_NUMBER: builtins.int
        project: typing.Text = ...
        name: typing.Text = ...
        exclude: builtins.bool = ...

        def __init__(self,
            *,
            project : typing.Text = ...,
            name : typing.Text = ...,
            exclude : builtins.bool = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal[u"exclude",b"exclude",u"name",b"name",u"project",b"project"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    SUBSCRIPTIONS_FIELD_NUMBER: builtins.int
    REDIS_CONFIG_FIELD_NUMBER: builtins.int
    REDIS_CLUSTER_CONFIG_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    type: global___Store.StoreType.V = ...

    @property
    def subscriptions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Store.Subscription]: ...

    @property
    def redis_config(self) -> global___Store.RedisConfig: ...

    @property
    def redis_cluster_config(self) -> global___Store.RedisClusterConfig: ...

    def __init__(self,
        *,
        name : typing.Text = ...,
        type : global___Store.StoreType.V = ...,
        subscriptions : typing.Optional[typing.Iterable[global___Store.Subscription]] = ...,
        redis_config : typing.Optional[global___Store.RedisConfig] = ...,
        redis_cluster_config : typing.Optional[global___Store.RedisClusterConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"config",b"config",u"redis_cluster_config",b"redis_cluster_config",u"redis_config",b"redis_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"config",b"config",u"name",b"name",u"redis_cluster_config",b"redis_cluster_config",u"redis_config",b"redis_config",u"subscriptions",b"subscriptions",u"type",b"type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal[u"config",b"config"]) -> typing_extensions.Literal["redis_config","redis_cluster_config"]: ...
global___Store = Store
