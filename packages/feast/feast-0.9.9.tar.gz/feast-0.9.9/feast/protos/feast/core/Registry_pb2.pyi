"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import feast.core.Entity_pb2
import feast.core.FeatureTable_pb2
import feast.core.FeatureView_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Registry(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENTITIES_FIELD_NUMBER: builtins.int
    FEATURE_TABLES_FIELD_NUMBER: builtins.int
    FEATURE_VIEWS_FIELD_NUMBER: builtins.int
    REGISTRY_SCHEMA_VERSION_FIELD_NUMBER: builtins.int
    VERSION_ID_FIELD_NUMBER: builtins.int
    LAST_UPDATED_FIELD_NUMBER: builtins.int
    registry_schema_version: typing.Text = ...
    version_id: typing.Text = ...

    @property
    def entities(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[feast.core.Entity_pb2.Entity]: ...

    @property
    def feature_tables(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[feast.core.FeatureTable_pb2.FeatureTable]: ...

    @property
    def feature_views(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[feast.core.FeatureView_pb2.FeatureView]: ...

    @property
    def last_updated(self) -> google.protobuf.timestamp_pb2.Timestamp: ...

    def __init__(self,
        *,
        entities : typing.Optional[typing.Iterable[feast.core.Entity_pb2.Entity]] = ...,
        feature_tables : typing.Optional[typing.Iterable[feast.core.FeatureTable_pb2.FeatureTable]] = ...,
        feature_views : typing.Optional[typing.Iterable[feast.core.FeatureView_pb2.FeatureView]] = ...,
        registry_schema_version : typing.Text = ...,
        version_id : typing.Text = ...,
        last_updated : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"last_updated",b"last_updated"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"entities",b"entities",u"feature_tables",b"feature_tables",u"feature_views",b"feature_views",u"last_updated",b"last_updated",u"registry_schema_version",b"registry_schema_version",u"version_id",b"version_id"]) -> None: ...
global___Registry = Registry
