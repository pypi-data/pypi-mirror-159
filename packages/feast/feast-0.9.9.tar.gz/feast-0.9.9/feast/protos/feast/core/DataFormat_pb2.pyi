"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class FileFormat(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ParquetFormat(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...

        def __init__(self,
            ) -> None: ...

    PARQUET_FORMAT_FIELD_NUMBER: builtins.int

    @property
    def parquet_format(self) -> global___FileFormat.ParquetFormat: ...

    def __init__(self,
        *,
        parquet_format : typing.Optional[global___FileFormat.ParquetFormat] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"format",b"format",u"parquet_format",b"parquet_format"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"format",b"format",u"parquet_format",b"parquet_format"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal[u"format",b"format"]) -> typing_extensions.Literal["parquet_format"]: ...
global___FileFormat = FileFormat

class StreamFormat(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ProtoFormat(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        CLASS_PATH_FIELD_NUMBER: builtins.int
        class_path: typing.Text = ...

        def __init__(self,
            *,
            class_path : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal[u"class_path",b"class_path"]) -> None: ...

    class AvroFormat(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        SCHEMA_JSON_FIELD_NUMBER: builtins.int
        schema_json: typing.Text = ...

        def __init__(self,
            *,
            schema_json : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal[u"schema_json",b"schema_json"]) -> None: ...

    AVRO_FORMAT_FIELD_NUMBER: builtins.int
    PROTO_FORMAT_FIELD_NUMBER: builtins.int

    @property
    def avro_format(self) -> global___StreamFormat.AvroFormat: ...

    @property
    def proto_format(self) -> global___StreamFormat.ProtoFormat: ...

    def __init__(self,
        *,
        avro_format : typing.Optional[global___StreamFormat.AvroFormat] = ...,
        proto_format : typing.Optional[global___StreamFormat.ProtoFormat] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"avro_format",b"avro_format",u"format",b"format",u"proto_format",b"proto_format"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"avro_format",b"avro_format",u"format",b"format",u"proto_format",b"proto_format"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal[u"format",b"format"]) -> typing_extensions.Literal["avro_format","proto_format"]: ...
global___StreamFormat = StreamFormat
