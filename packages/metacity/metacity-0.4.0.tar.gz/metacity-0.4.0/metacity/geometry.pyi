from typing import Dict, List, Tuple

class Attribute:
    def __init__(self) -> None: ...
    def push_line2D(self, arg0: List[float]) -> None: ...
    def push_line3D(self, arg0: List[float]) -> None: ...
    def push_point2D(self, arg0: List[float]) -> None: ...
    def push_point3D(self, arg0: List[float]) -> None: ...
    def push_polygon2D(self, arg0: List[List[float]]) -> None: ...
    def push_polygon3D(self, arg0: List[List[float]]) -> None: ...

class Grid:
    def __init__(self, arg0: float, arg1: float) -> None: ...
    def add_layer(self, arg0: Layer) -> None: ...
    def add_model(self, arg0: Model) -> None: ...
    def to_gltf(self, arg0: str, arg1: bool) -> None: ...
    @property
    def grid(self) -> Dict[Tuple[int,int],List[Model]]: ...

class Layer:
    def __init__(self) -> None: ...
    def add_model(self, arg0: Model) -> None: ...
    def add_models(self, arg0: List[Model]) -> None: ...
    def from_gltf(self, arg0: str) -> None: ...
    def get_models(self) -> List[Model]: ...
    def to_gltf(self, arg0: str) -> None: ...
    @property
    def size(self) -> int: ...

class Model:
    def __init__(self) -> None: ...
    def add_attribute(self, arg0: str, arg1: Attribute) -> None: ...
    def attribute_exists(self, arg0: str) -> bool: ...
    def get_attribute(self, arg0: str) -> Attribute: ...
    def set_metadata(self, arg0: json) -> None: ...
    @property
    def metadata(self) -> json: ...
