# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ml_trade.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(
    b'\n\x0eml_trade.proto\x12\x1b\x61\x65\x61.fetchai.ml_trade.v1_0_0"\xbc\x06\n\x0eMlTradeMessage\x12Q\n\x06\x61\x63\x63\x65pt\x18\x05 \x01(\x0b\x32?.aea.fetchai.ml_trade.v1_0_0.MlTradeMessage.Accept_PerformativeH\x00\x12K\n\x03\x63\x66p\x18\x06 \x01(\x0b\x32<.aea.fetchai.ml_trade.v1_0_0.MlTradeMessage.Cfp_PerformativeH\x00\x12M\n\x04\x64\x61ta\x18\x07 \x01(\x0b\x32=.aea.fetchai.ml_trade.v1_0_0.MlTradeMessage.Data_PerformativeH\x00\x12O\n\x05terms\x18\x08 \x01(\x0b\x32>.aea.fetchai.ml_trade.v1_0_0.MlTradeMessage.Terms_PerformativeH\x00\x1a(\n\x0b\x44\x65scription\x12\x19\n\x11\x64\x65scription_bytes\x18\x01 \x01(\x0c\x1a\x1c\n\x05Query\x12\x13\n\x0bquery_bytes\x18\x01 \x01(\x0c\x1aT\n\x10\x43\x66p_Performative\x12@\n\x05query\x18\x01 \x01(\x0b\x32\x31.aea.fetchai.ml_trade.v1_0_0.MlTradeMessage.Query\x1a\\\n\x12Terms_Performative\x12\x46\n\x05terms\x18\x01 \x01(\x0b\x32\x37.aea.fetchai.ml_trade.v1_0_0.MlTradeMessage.Description\x1ap\n\x13\x41\x63\x63\x65pt_Performative\x12\x46\n\x05terms\x18\x01 \x01(\x0b\x32\x37.aea.fetchai.ml_trade.v1_0_0.MlTradeMessage.Description\x12\x11\n\ttx_digest\x18\x02 \x01(\t\x1al\n\x11\x44\x61ta_Performative\x12\x46\n\x05terms\x18\x01 \x01(\x0b\x32\x37.aea.fetchai.ml_trade.v1_0_0.MlTradeMessage.Description\x12\x0f\n\x07payload\x18\x02 \x01(\x0c\x42\x0e\n\x0cperformativeb\x06proto3'
)


_MLTRADEMESSAGE = DESCRIPTOR.message_types_by_name["MlTradeMessage"]
_MLTRADEMESSAGE_DESCRIPTION = _MLTRADEMESSAGE.nested_types_by_name["Description"]
_MLTRADEMESSAGE_QUERY = _MLTRADEMESSAGE.nested_types_by_name["Query"]
_MLTRADEMESSAGE_CFP_PERFORMATIVE = _MLTRADEMESSAGE.nested_types_by_name[
    "Cfp_Performative"
]
_MLTRADEMESSAGE_TERMS_PERFORMATIVE = _MLTRADEMESSAGE.nested_types_by_name[
    "Terms_Performative"
]
_MLTRADEMESSAGE_ACCEPT_PERFORMATIVE = _MLTRADEMESSAGE.nested_types_by_name[
    "Accept_Performative"
]
_MLTRADEMESSAGE_DATA_PERFORMATIVE = _MLTRADEMESSAGE.nested_types_by_name[
    "Data_Performative"
]
MlTradeMessage = _reflection.GeneratedProtocolMessageType(
    "MlTradeMessage",
    (_message.Message,),
    {
        "Description": _reflection.GeneratedProtocolMessageType(
            "Description",
            (_message.Message,),
            {
                "DESCRIPTOR": _MLTRADEMESSAGE_DESCRIPTION,
                "__module__": "ml_trade_pb2"
                # @@protoc_insertion_point(class_scope:aea.fetchai.ml_trade.v1_0_0.MlTradeMessage.Description)
            },
        ),
        "Query": _reflection.GeneratedProtocolMessageType(
            "Query",
            (_message.Message,),
            {
                "DESCRIPTOR": _MLTRADEMESSAGE_QUERY,
                "__module__": "ml_trade_pb2"
                # @@protoc_insertion_point(class_scope:aea.fetchai.ml_trade.v1_0_0.MlTradeMessage.Query)
            },
        ),
        "Cfp_Performative": _reflection.GeneratedProtocolMessageType(
            "Cfp_Performative",
            (_message.Message,),
            {
                "DESCRIPTOR": _MLTRADEMESSAGE_CFP_PERFORMATIVE,
                "__module__": "ml_trade_pb2"
                # @@protoc_insertion_point(class_scope:aea.fetchai.ml_trade.v1_0_0.MlTradeMessage.Cfp_Performative)
            },
        ),
        "Terms_Performative": _reflection.GeneratedProtocolMessageType(
            "Terms_Performative",
            (_message.Message,),
            {
                "DESCRIPTOR": _MLTRADEMESSAGE_TERMS_PERFORMATIVE,
                "__module__": "ml_trade_pb2"
                # @@protoc_insertion_point(class_scope:aea.fetchai.ml_trade.v1_0_0.MlTradeMessage.Terms_Performative)
            },
        ),
        "Accept_Performative": _reflection.GeneratedProtocolMessageType(
            "Accept_Performative",
            (_message.Message,),
            {
                "DESCRIPTOR": _MLTRADEMESSAGE_ACCEPT_PERFORMATIVE,
                "__module__": "ml_trade_pb2"
                # @@protoc_insertion_point(class_scope:aea.fetchai.ml_trade.v1_0_0.MlTradeMessage.Accept_Performative)
            },
        ),
        "Data_Performative": _reflection.GeneratedProtocolMessageType(
            "Data_Performative",
            (_message.Message,),
            {
                "DESCRIPTOR": _MLTRADEMESSAGE_DATA_PERFORMATIVE,
                "__module__": "ml_trade_pb2"
                # @@protoc_insertion_point(class_scope:aea.fetchai.ml_trade.v1_0_0.MlTradeMessage.Data_Performative)
            },
        ),
        "DESCRIPTOR": _MLTRADEMESSAGE,
        "__module__": "ml_trade_pb2"
        # @@protoc_insertion_point(class_scope:aea.fetchai.ml_trade.v1_0_0.MlTradeMessage)
    },
)
_sym_db.RegisterMessage(MlTradeMessage)
_sym_db.RegisterMessage(MlTradeMessage.Description)
_sym_db.RegisterMessage(MlTradeMessage.Query)
_sym_db.RegisterMessage(MlTradeMessage.Cfp_Performative)
_sym_db.RegisterMessage(MlTradeMessage.Terms_Performative)
_sym_db.RegisterMessage(MlTradeMessage.Accept_Performative)
_sym_db.RegisterMessage(MlTradeMessage.Data_Performative)

if _descriptor._USE_C_DESCRIPTORS == False:

    DESCRIPTOR._options = None
    _MLTRADEMESSAGE._serialized_start = 48
    _MLTRADEMESSAGE._serialized_end = 876
    _MLTRADEMESSAGE_DESCRIPTION._serialized_start = 386
    _MLTRADEMESSAGE_DESCRIPTION._serialized_end = 426
    _MLTRADEMESSAGE_QUERY._serialized_start = 428
    _MLTRADEMESSAGE_QUERY._serialized_end = 456
    _MLTRADEMESSAGE_CFP_PERFORMATIVE._serialized_start = 458
    _MLTRADEMESSAGE_CFP_PERFORMATIVE._serialized_end = 542
    _MLTRADEMESSAGE_TERMS_PERFORMATIVE._serialized_start = 544
    _MLTRADEMESSAGE_TERMS_PERFORMATIVE._serialized_end = 636
    _MLTRADEMESSAGE_ACCEPT_PERFORMATIVE._serialized_start = 638
    _MLTRADEMESSAGE_ACCEPT_PERFORMATIVE._serialized_end = 750
    _MLTRADEMESSAGE_DATA_PERFORMATIVE._serialized_start = 752
    _MLTRADEMESSAGE_DATA_PERFORMATIVE._serialized_end = 860
# @@protoc_insertion_point(module_scope)
