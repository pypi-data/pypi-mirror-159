list[any].append:
  code: |-
    {%-if parent.name != 'expr'-%}
      {{'func()error{'}}{{obj}} = append({{obj}}, {{args[0]}}){{';return nil}()'}}
    {%-else-%}
      {{obj}} = append({{obj}}, {{args[0]}})
    {%-endif-%}
  ret_type: "None"

list[any].*.type:
  code: "{{left}}"
  type: "{{left.type}}"

list[any].+.list[any]:
  code: "append({{left}}, {{right}}...)"
  type: "{{left.type}}"

list[any].index:
  code: |-
    {{- env.use('mod_errors') -}}
    func() int {{'{'}}
    {{'    '*nl}}    for i, el := range {{obj}} {{'{'}}
    {{'    '*nl}}        if el == {{args[0]}} {{'{'}}
    {{'    '*nl}}            return i
    {{'    '*nl}}        {{'}'}}
    {{'    '*nl}}    {{'}'}}
    {{'    '*nl}}    {{'panic(errors.New("ValueError: "+fmt.Sprintf("%v",'}}{{args[0]}}){{'+" is not in list"))'}}
    {{'    '*nl}}{{'}()'}}
  ret_type: int
