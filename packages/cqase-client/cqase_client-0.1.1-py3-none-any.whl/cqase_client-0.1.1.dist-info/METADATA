Metadata-Version: 2.1
Name: cqase-client
Version: 0.1.1
Summary: Custom qase client
Home-page: https://github.com/berpress/custom-qase-client
Author: alexanderlozovoy
Author-email: berpress@gmail.com
Requires-Python: >=3.8,<4.0
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Requires-Dist: install (>=1.3.5,<2.0.0)
Requires-Dist: pip (>=22.1.2,<23.0.0)
Requires-Dist: requests (>=2.28.1,<3.0.0)
Project-URL: Repository, https://github.com/berpress/custom-qase-client
Description-Content-Type: text/markdown

# custom-qase-client


This is an unofficial client [QASE](https://qase.io)

Official client: https://github.com/qase-tms/qase-python

API QASE: https://developers.qase.io/reference/

Guide: https://developers.qase.io/docs

### Installation

------------

You can install via pip
```
$ pip install cqase-client
```
or with poetry
```
$ poetry add -D cqase-client
```

### How to work

------------

First, get api token from page https://app.qase.io/user/api/token (See guide)

For body and params use dict type, like in [requests](https://requests.readthedocs.io/en/latest/user/quickstart/#more-complicated-post-requests) library

```python
from cqase.client import QaseClient

client = QaseClient(api_token='YOUR_API_TOKEN')

code = 'CODE'  # projecet code
# create project
body = {'title': f'Title test project', 'code': code, 'access': 'all'}
client.projects.create(body=body)

# create suite
body = {"title": "test suit"}
client.suites.create(code=code, body=body)

# create case
body = {"title": "test case"}
client.cases.create(code=code, body=body)

# create test run
body = {"title": "test run"}
client.runs.create(code=code, body=body)

# upload attachment
client.attachments.upload(code, "./cat.jpeg")

# finish test run
client.runs.complete(code=code, uuid=1)

```

In work ...

