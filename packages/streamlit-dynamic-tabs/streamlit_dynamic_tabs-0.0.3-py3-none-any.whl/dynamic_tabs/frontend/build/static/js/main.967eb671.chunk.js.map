{"version":3,"sources":["DynamicTabs.tsx","index.tsx"],"names":["withStreamlitConnection","props","args","tabTitle","limitTabs","numOfTabs","addIcon","styles","useState","tab","setTab","activeTabId","btnState","setBtnState","index","clicked","inputClicked","setInputClicked","status","limitNumberOfTabs","isHovering","setIsHovering","hideClose","className","style","map","onMouseEnter","handleMouseOver","onMouseLeave","handleMouseOut","key","id","onClick","output","Streamlit","setComponentValue","currentTab","deletedTab","title","setComponentReady","updateActiveId","name","type","required","placeholder","size","maxLength","value","inputClickHandler","onChange","e","target","list","handleTabChange","animation","saveTitle","length","tabList","splice","bState","tabDeleted","deleteTab","test","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.967eb671.chunk.js","sourcesContent":["import {\r\n  Streamlit,\r\n  ComponentProps,\r\n  StreamlitComponentBase,\r\n  withStreamlitConnection,\r\n} from \"streamlit-component-lib\"\r\nimport React, { ReactNode, useState } from \"react\"\r\nimport \"./style.css\"\r\nimport \"./icon.css\"\r\nimport { style } from 'glamor';\r\n\r\nfunction DynamicTabs (props: ComponentProps) {\r\n\r\n  const { args } = props\r\n  const tabTitle:any[] = args[\"tabTitle\"] \r\n  const limitTabs:boolean = args['limitTabs']\r\n  const numOfTabs:number = args['numOfTabs']\r\n  const addIcon:string = args['addIcon']\r\n  const styles:any = args['styles'] || {}\r\n \r\n  const [tab, setTab] = useState(tabTitle)\r\n  const [btnState, setBtnState] = useState({activeTabId: null})\r\n  const [inputClicked, setInputClicked] = useState({index:0, clicked:false})\r\n  const [limitNumberOfTabs, setLimitNumberOfTabs] = useState({status: limitTabs, numOfTabs:numOfTabs})\r\n  const [isHovering, setIsHovering] = useState({index:0, status:false});\r\n  \r\n  const newTab = () => {\r\n    setTab([...tab, {title: \"\"}])\r\n\r\n    const output = tab.length === 0 ? null : btnState.activeTabId\r\n    setBtnState({activeTabId:output})\r\n    const test = output === null ? 0 : tab\r\n\r\n    //Streamlit.setComponentValue(test)\r\n    console.log(test)\r\n      \r\n  }\r\n\r\n  const deleteTab = (index:number) => {\r\n    const tabList = [...tab]\r\n      tabList.splice(index, 1)\r\n      setTab(tabList)\r\n      \r\n      let bState = null\r\n      if (index < btnState.activeTabId) {\r\n        bState = btnState.activeTabId - 1; \r\n      } else if (index > btnState.activeTabId) {\r\n        bState = btnState.activeTabId;\r\n      } else if (index !== 0) {\r\n        bState = btnState.activeTabId-1;\r\n      } else if (index === 0) {\r\n        bState = index;\r\n      }\r\n      \r\n      setBtnState({activeTabId: bState})\r\n\r\n      const output = tabList[bState]\r\n      const tabDeleted = tab[btnState.activeTabId]\r\n      Streamlit.setComponentValue({currentTab: output, deletedTab:tabDeleted})\r\n      Streamlit.setComponentReady()\r\n  }\r\n\r\n  const handleTabChange = (e:React.ChangeEvent<HTMLInputElement>, index:number) => {\r\n    const {name, value} = e.target\r\n    const list = [...tab]\r\n    list[index][name] = value\r\n    setTab(list)\r\n  }\r\n\r\n  function saveTitle(index:number){\r\n\r\n    let output = tab[index]\r\n    Streamlit.setComponentValue({currentTab:output, deletedTab:{title:'None'}})\r\n    //Streamlit.setComponentValue(output)\r\n    Streamlit.setComponentReady()\r\n    setInputClicked({index:index, clicked:false})\r\n  }\r\n\r\n  const updateActiveId = (id:number): void => {\r\n    \r\n    setBtnState({activeTabId:id})\r\n    const output = tab[id]\r\n    Streamlit.setComponentValue({currentTab:output, deletedTab:{title:'None'}})\r\n    //Streamlit.setComponentValue(output)\r\n    Streamlit.setComponentReady()\r\n\r\n  };\r\n\r\n  const activeTabName = (id:number) => {\r\n    if (id === btnState.activeTabId) {\r\n      return \"individual-tab-container tab-selected\";\r\n    } else {\r\n      return \"individual-tab-container\";\r\n    }\r\n  };  \r\n\r\n  const hideClose = (index:number) => {\r\n    if (isHovering.index === index && isHovering.status === true) {\r\n      return \"fade-in 0.3s ease\"\r\n    } else {\r\n      return \"fade-out 0.3s ease\"\r\n    }\r\n    \r\n  }\r\n\r\n  const handleMouseOver = (index:number) => {\r\n    setIsHovering({index:index, status:true});\r\n  };\r\n\r\n  const handleMouseOut = (index:number) => {\r\n    setIsHovering({index:index, status:false});\r\n  };\r\n\r\n  function inputClickHandler(index:number){\r\n    setInputClicked({index:index, clicked:true})\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"dynamic-tabs\" {...style(styles[\"dynamic-tabs\"])}>\r\n      <ul className=\"all-tabs\" {...style(styles[\"all-tabs\"])}>\r\n      {tab.map((tabTitle, index) => (\r\n        <span className=\"tab-container\" onMouseEnter={() => handleMouseOver(index)} onMouseLeave={() => handleMouseOut(index)}>\r\n        <span key={index} {...style(styles[\"individual-tab-container\"])} {...style(styles[\"tab-selected\"])} className={activeTabName(index)} onClick={() => updateActiveId(index)}>\r\n        <li> \r\n          <span {...style(styles[\"title-close-save-button-container\"])} className=\"title-close-save-button-container\">\r\n            <input \r\n                    {...style(styles[\"title-of-tab\"])}\r\n                    className=\"title-of-tab\" \r\n                    name=\"title\"\r\n                    type=\"text\"\r\n                    required\r\n                    placeholder=\"Rename tab here\" \r\n                    size={20}\r\n                    maxLength={20}\r\n                    value = {tabTitle.title}\r\n                    onClick={() => inputClickHandler(index)}\r\n                    onChange={(e) => handleTabChange(e, index)}/>      \r\n            </span>       \r\n          </li> \r\n          </span>\r\n          { inputClicked.index === index && inputClicked.clicked === true && \r\n\r\n            <div {...style(styles[\"save-button-container\"])} className=\"save-button-container\" style={{animation:\"save-in 0.3s ease-in-out\"}}>\r\n              <button id=\"save\" onClick={() => saveTitle(index)}>save</button></div> } \r\n              {isHovering.index === index && isHovering.status === true && tab.length > 1 &&\r\n              \r\n                <div {...style(styles[\"close-btn-container\"])} style={{animation:hideClose(index)}} className=\"close-btn-container\" > \r\n                <button type=\"button\" className=\"close-btn\" onClick={() => deleteTab(index)}>\r\n                  <div className=\"close-btn-txt\">&times;</div>\r\n                  </button> </div> }\r\n            \r\n          </span>\r\n    ))}\r\n  </ul>\r\n  { (limitNumberOfTabs.status === false || tab.length !== limitNumberOfTabs.numOfTabs) && \r\n    <span {...style(styles[\"new-tab-btn-container\"])} className=\"new-tab-btn-container\">\r\n      <button type='button' className=\"new-tab-btn\" onClick={newTab}>\r\n      <i className=\"material-icons\" id=\"add-btn\">{addIcon}</i></button>\r\n    </span>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withStreamlitConnection(DynamicTabs);\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport DynamicTabs from \"./DynamicTabs\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <DynamicTabs />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}