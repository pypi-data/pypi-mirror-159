[tool.poetry]
name = "bhoelHelper"
version = "1.3.0"
description = "Misc helper functionalities."
packages = [{ include = "berhoel" }]
exclude = ["**/.#*.py", "**/#*.py#"]
authors = ["Berthold HÃ¶llmann <berhoel@gmail.com>"]
license = "MIT"
repository = "https://gitlab.com/berhoel/python/bhoelHelper.git"
homepage = "https://python.xn--hllmanns-n4a.de/bhoelHelper/"
documentation = "https://www.xn--hllmanns-n4a.de/python/bhoelHelper/"
readme = "README.rst"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Topic :: Utilities",
]

[tool.poetry.dependencies]
python = ">=3.6.2,<4.0"

[tool.poetry.dev-dependencies]
pytest = "*"
pytest-cov = "*"
pytest-mock = "*"
xdoctest = "*"
tox = "*"
pdbpp = "*"
Sphinx = "*"
sphinx-rtd-theme = "*"
sphinx_bootstrap_theme = "*"
black = "*"
flake8 = "*"
pylint = "*"
rope = "*"
numpydoc = "*"
setuptools = "*"

[tool.poetry.scripts]
set_lib_version = 'berhoel.helper.set_version:build'

[tool.berhoel.helper.set_version]
version_files = ["berhoel/helper/_version.py"]

[tool.isort]
multi_line_output = 5
include_trailing_comma = true
indent = '    '
length_sort = true
line_length = 88
balanced_wrapping = true
import_heading_stdlib = 'Standard libraries.'
import_heading_thirdparty = 'Third party libraries.'
known_first_party = ['berhoel']

# coverage reporting with distributed testing support:
#   --cov=[SOURCE]        Path or package name to measure during execution (multi-allowed). Use --cov= to not do any source filtering and record everything.
#   --cov-reset           Reset cov sources accumulated in options so far.
#   --cov-report=TYPE     Type of report to generate: term, term-missing, annotate, html, xml (multi-allowed). term, term-missing may be followed by ":skip-covered". annotate, html and xml may be followed by ":DEST" where DEST specifies the output location. Use --cov-report= to not generate
#                         any output.
#   --cov-config=PATH     Config file for coverage. Default: .coveragerc
#   --no-cov-on-fail      Do not report coverage if test run fails. Default: False
#   --no-cov              Disable coverage report completely (useful for debuggers). Default: False
#   --cov-fail-under=MIN  Fail if the total coverage is less than MIN.
#   --cov-append          Do not delete coverage but append to current. Default: False
#   --cov-branch          Enable branch coverage.
#   --cov-context=CONTEXT
#                         Dynamic contexts to use. "test" for now.

[tool.pytest.ini_options]
addopts = "--doctest-modules --ff --pdb -s --cov=berhoel --cov-report=term --cov-report=html --cov-branch"

[flake8]
max-line-length = 88

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
