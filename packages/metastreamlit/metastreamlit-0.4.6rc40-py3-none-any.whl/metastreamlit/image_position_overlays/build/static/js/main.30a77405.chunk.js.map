{"version":3,"sources":["utils.tsx","ImagePositionOverlays.tsx","index.tsx"],"names":["useDebounceEffect","fn","waitTime","deps","useEffect","t","setTimeout","apply","undefined","clearTimeout","withStreamlitConnection","args","initialCrop","initialPositions","unit","rootRef","useRef","imgRef","useState","crop","setCrop","completedCrop","setCompletedCrop","Streamlit","setFrameHeight","repositionOverlay","useCallback","node","collection","document","querySelectorAll","recreate","length","i","remove","createElement","src","overlays","width","height","ele","current","querySelector","prepend","JSON","stringify","onImageLoad","hasCrop","setComponentValue","x","y","className","ref","kwargs","onChange","_","onComplete","c","alt","background","onLoad","ReactDOM","render","StrictMode","getElementById"],"mappings":"0PAEO,SAASA,EACdC,EACAC,EACAC,GAEAC,qBAAU,WACR,IAAMC,EAAIC,YAAW,WAEnBL,EAAGM,WAAMC,EAAWL,KACnBD,GAEH,OAAO,WACLO,aAAaJ,MAGdF,G,UCsFUO,eAhGe,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,KACzBC,EAAcD,EAAKE,iBAAiB,GACtCD,IACFA,EAAYE,KAAO,MAErB,IAAMC,EAAUC,iBAAuB,MACjCC,EAASD,iBAAyB,MACxC,EAAwBE,mBAAeN,GAAvC,mBAAOO,EAAP,KAAaC,EAAb,KACA,EAA0CF,mBAAgCN,GAA1E,mBAAOS,EAAP,KAAsBC,EAAtB,KAEAlB,qBAAU,kBAAMmB,IAAUC,oBAC1B,IAAMC,EAAoBC,uBACxB,SAACP,GACC,IAIIQ,EAJEC,EAAaC,SAASC,iBAC1B,kCAEIC,EAAiC,IAAtBH,EAAWI,OAE5B,GAAID,EAAU,CACZ,IAAK,IAAIE,EAAI,EAAGA,EAAIL,EAAWI,OAAQC,IACrCL,EAAWK,GAAGC,SAEhBP,EAAOE,SAASM,cAAc,YAE9BR,EAAOC,EAAW,GAOpB,GALAD,EAAKS,IAAMzB,EAAK0B,SAAS,GAEzBV,EAAKW,MAAL,OAAanB,QAAb,IAAaA,OAAb,EAAaA,EAAMmB,MAEnBX,EAAKY,OAAL,iBAAiBpB,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAMoB,QACnBR,EAAU,CAAC,IAAD,EACNS,EAAG,UAAGzB,EAAQ0B,eAAX,aAAG,EAAiBC,cAAc,8BAExC,OAAHF,QAAG,IAAHA,KAAKG,QAAQhB,MAIjB,CAACiB,KAAKC,UAAUlC,EAAK0B,YAEjBS,EAAcpB,uBAClB,gBACwBlB,IAAlBa,QAAwCb,IAATW,GACjCM,EAAkBN,GAEpBI,IAAUC,mBAEZ,CAACL,EAAME,EAAeI,IA0BxB,OAvBAzB,GACE,WACE,IAAM+C,OAA4BvC,IAAlBa,GAAwD,IAAzBA,EAAckB,QAAwC,IAAxBlB,EAAciB,MAC3Fb,EAAkBJ,GAClBE,IAAUyB,kBAAkB,CAAC,UAAa,CAACD,QAA6BvC,IAAlBa,EAA8B,CAClF4B,EAAG5B,EAAc4B,EACjBC,EAAG7B,EAAc6B,EACjBZ,MAAOjB,EAAciB,MACrBC,OAAQlB,EAAckB,QACpB,UAEN,EACA,CAAClB,EAAeI,IAGlBzB,GACE,WACEyB,EAAkBN,KAEpB,EACA,CAACA,EAAMM,IAIP,yBAAK0B,UAAU,OACb,yBAAKA,UAAU,iBAAiBC,IAAKrC,GACnC,yBAAKoC,UAAU,kBACf,kBAAC,IAAD,eACEA,UAAU,0BACNxC,EAAK0C,OAFX,CAGElC,KAAMA,EACNmC,SAAU,SAACnC,EAAMoC,GAAP,OAAanC,EAAQD,IAC/BqC,WAAY,SAACC,GAAD,OAAOnC,EAAiBmC,MAEpC,yBACEL,IAAKnC,EACLyC,IAAI,aACJtB,IAAKzB,EAAKgD,WACVC,OAAQd,UC3FpBe,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFlC,SAASmC,eAAe,W","file":"static/js/main.30a77405.chunk.js","sourcesContent":["import { useEffect, DependencyList } from \"react\";\n\nexport function useDebounceEffect(\n  fn: () => void,\n  waitTime: number,\n  deps?: DependencyList\n) {\n  useEffect(() => {\n    const t = setTimeout(() => {\n      // @ts-ignore\n      fn.apply(undefined, deps);\n    }, waitTime);\n\n    return () => {\n      clearTimeout(t);\n    };\n  // eslint-disable-next-line\n  }, deps);\n}\n","import React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport ReactCrop, { Crop, PixelCrop } from \"react-image-crop\";\nimport { Streamlit, withStreamlitConnection } from \"streamlit-component-lib\";\nimport { useDebounceEffect } from \"./utils\";\n\nimport \"react-image-crop/dist/ReactCrop.css\";\n\nconst ImagePositionOverlays = ({ args }: any) => {\n  const initialCrop = args.initialPositions[0];\n  if (initialCrop) {\n    initialCrop.unit = \"px\";\n  }\n  const rootRef = useRef<HTMLDivElement>(null);\n  const imgRef = useRef<HTMLImageElement>(null);\n  const [crop, setCrop] = useState<Crop>(initialCrop);\n  const [completedCrop, setCompletedCrop] = useState<PixelCrop | undefined>(initialCrop);\n\n  useEffect(() => Streamlit.setFrameHeight());\n  const repositionOverlay = useCallback(\n    (crop: PixelCrop | undefined) => {\n      const collection = document.querySelectorAll(\n        \".ReactCrop__crop-selection img\"\n      );\n      const recreate = collection.length !== 1;\n      var node: HTMLImageElement;\n      if (recreate) {\n        for (let i = 0; i < collection.length; i++) {\n          collection[i].remove();\n        }\n        node = document.createElement(\"img\");\n      } else {\n        node = collection[0] as HTMLImageElement;\n      }\n      node.src = args.overlays[0];\n      // @ts-ignore\n      node.width = crop?.width;\n      // @ts-ignore\n      node.height = `${crop?.height}`;\n      if (recreate) {\n        const ele = rootRef.current?.querySelector(\".ReactCrop__crop-selection\");\n        // @ts-ignore\n        ele?.prepend(node);\n      }\n    },\n    // eslint-disable-next-line\n    [JSON.stringify(args.overlays)]\n  );\n  const onImageLoad = useCallback(\n    () => {\n      if (completedCrop === undefined && crop !== undefined) {\n        repositionOverlay(crop as PixelCrop);\n      }\n      Streamlit.setFrameHeight();\n    },\n    [crop, completedCrop, repositionOverlay],\n  );\n\n  useDebounceEffect(\n    () => {\n      const hasCrop = completedCrop !== undefined && completedCrop.height !== 0 && completedCrop.width !== 0;\n      repositionOverlay(completedCrop);\n      Streamlit.setComponentValue({'positions': [hasCrop && completedCrop !== undefined ? {\n        x: completedCrop.x,\n        y: completedCrop.y,\n        width: completedCrop.width,\n        height: completedCrop.height,\n      } : null]});\n    },\n    1,\n    [completedCrop, repositionOverlay]\n  );\n\n  useDebounceEffect(\n    () => {\n      repositionOverlay(crop as PixelCrop);\n    },\n    0,\n    [crop, repositionOverlay]\n  );\n\n  return (\n    <div className=\"App\">\n      <div className=\"crop-container\" ref={rootRef}>\n        <div className=\"crop-controls\"></div>\n        <ReactCrop\n          className=\"gradient-border-canvas\"\n          {...args.kwargs}\n          crop={crop}\n          onChange={(crop, _) => setCrop(crop)}\n          onComplete={(c) => setCompletedCrop(c)}\n        >\n          <img\n            ref={imgRef}\n            alt=\"Background\"\n            src={args.background}\n            onLoad={onImageLoad}\n          />\n        </ReactCrop>\n      </div>\n    </div>\n  );\n};\n\nexport default withStreamlitConnection(ImagePositionOverlays);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ImagePositionOverlays from \"./ImagePositionOverlays\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ImagePositionOverlays />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}