Metadata-Version: 2.1
Name: types-aiobotocore-cloudfront
Version: 2.3.4.post1
Summary: Type annotations for aiobotocore.CloudFront 2.3.4 service generated with mypy-boto3-builder 7.8.0
Home-page: https://github.com/youtype/mypy_boto3_builder
Author: Vlad Emelianov
Author-email: vlad.emelianov.nz@gmail.com
License: MIT License
Project-URL: Documentation, https://youtype.github.io/types_aiobotocore_docs/types_aiobotocore_cloudfront/
Project-URL: Source, https://github.com/youtype/mypy_boto3_builder
Project-URL: Tracker, https://github.com/youtype/mypy_boto3_builder/issues
Keywords: aiobotocore cloudfront type-annotations boto3-stubs mypy typeshed autocomplete
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Environment :: Console
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Typing :: Typed
Requires-Python: >=3.6
Description-Content-Type: text/markdown

<a id="types-aiobotocore-cloudfront"></a>

# types-aiobotocore-cloudfront

[![PyPI - types-aiobotocore-cloudfront](https://img.shields.io/pypi/v/types-aiobotocore-cloudfront.svg?color=blue)](https://pypi.org/project/types-aiobotocore-cloudfront)
[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/types-aiobotocore-cloudfront.svg?color=blue)](https://pypi.org/project/types-aiobotocore-cloudfront)
[![Docs](https://img.shields.io/readthedocs/mypy-boto3-builder.svg?color=blue)](https://mypy-boto3-builder.readthedocs.io/)
[![PyPI - Downloads](https://img.shields.io/pypi/dm/types-aiobotocore-cloudfront?color=blue)](https://pypistats.org/packages/types-aiobotocore-cloudfront)

![boto3.typed](https://github.com/youtype/mypy_boto3_builder/raw/main/logo.png)

Type annotations for
[aiobotocore.CloudFront 2.3.4](https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/cloudfront.html#CloudFront)
service compatible with [VSCode](https://code.visualstudio.com/),
[PyCharm](https://www.jetbrains.com/pycharm/),
[Emacs](https://www.gnu.org/software/emacs/),
[Sublime Text](https://www.sublimetext.com/),
[mypy](https://github.com/python/mypy),
[pyright](https://github.com/microsoft/pyright) and other tools.

Generated by
[mypy-boto3-builder 7.8.0](https://github.com/youtype/mypy_boto3_builder).

More information can be found on
[types-aiobotocore](https://pypi.org/project/types-aiobotocore/) page and in
[types-aiobotocore-cloudfront docs](https://youtype.github.io/types_aiobotocore_docs/types_aiobotocore_cloudfront/).

See how it helps to find and fix potential bugs:

![boto3-stubs demo](https://github.com/youtype/mypy_boto3_builder/raw/main/demo.gif)

- [types-aiobotocore-cloudfront](#types-aiobotocore-cloudfront)
  - [How to install](#how-to-install)
    - [VSCode extension](#vscode-extension)
    - [From PyPI with pip](#from-pypi-with-pip)
  - [How to uninstall](#how-to-uninstall)
  - [Usage](#usage)
    - [VSCode](#vscode)
    - [PyCharm](#pycharm)
    - [Emacs](#emacs)
    - [Sublime Text](#sublime-text)
    - [Other IDEs](#other-ides)
    - [mypy](#mypy)
    - [pyright](#pyright)
  - [Explicit type annotations](#explicit-type-annotations)
    - [Client annotations](#client-annotations)
    - [Paginators annotations](#paginators-annotations)
    - [Literals](#literals)
    - [Typed dictionaries](#typed-dictionaries)
  - [How it works](#how-it-works)
  - [What's new](#what's-new)
    - [Implemented features](#implemented-features)
    - [Latest changes](#latest-changes)
  - [Versioning](#versioning)
  - [Thank you](#thank-you)
  - [Documentation](#documentation)
  - [Support and contributing](#support-and-contributing)

<a id="how-to-install"></a>

## How to install

<a id="vscode-extension"></a>

### VSCode extension

Add
[AWS Boto3](https://marketplace.visualstudio.com/items?itemName=Boto3typed.boto3-ide)
extension to your VSCode and run `AWS boto3: Quick Start` command.

Click `Modify` and select `boto3 common` and `CloudFront`.

<a id="from-pypi-with-pip"></a>

### From PyPI with pip

Install `types-aiobotocore` for `CloudFront` service.

```bash
# install with aiobotocore type annotations
python -m pip install 'types-aiobotocore[cloudfront]'


# Lite version does not provide session.client/resource overloads
# it is more RAM-friendly, but requires explicit type annotations
python -m pip install 'types-aiobotocore-lite[cloudfront]'


# standalone installation
python -m pip install types-aiobotocore-cloudfront
```

<a id="how-to-uninstall"></a>

## How to uninstall

```bash
python -m pip uninstall -y types-aiobotocore-cloudfront
```

<a id="usage"></a>

## Usage

<a id="vscode"></a>

### VSCode

- Install
  [Python extension](https://marketplace.visualstudio.com/items?itemName=ms-python.python)
- Install
  [Pylance extension](https://marketplace.visualstudio.com/items?itemName=ms-python.vscode-pylance)
- Set `Pylance` as your Python Language Server
- Install `types-aiobotocore[cloudfront]` in your environment:

```bash
python -m pip install 'types-aiobotocore[cloudfront]'
```

Both type checking and code completion should now work. No explicit type
annotations required, write your `aiobotocore` code as usual.

<a id="pycharm"></a>

### PyCharm

Install `types-aiobotocore-lite[cloudfront]` in your environment:

```bash
python -m pip install 'types-aiobotocore-lite[cloudfront]'`
```

Both type checking and code completion should now work. Explicit type
annotations **are required**.

Use `types-aiobotocore` package instead for implicit type discovery.

<a id="emacs"></a>

### Emacs

- Install `types-aiobotocore` with services you use in your environment:

```bash
python -m pip install 'types-aiobotocore[cloudfront]'
```

- Install [use-package](https://github.com/jwiegley/use-package),
  [lsp](https://github.com/emacs-lsp/lsp-mode/),
  [company](https://github.com/company-mode/company-mode) and
  [flycheck](https://github.com/flycheck/flycheck) packages
- Install [lsp-pyright](https://github.com/emacs-lsp/lsp-pyright) package

```elisp
(use-package lsp-pyright
  :ensure t
  :hook (python-mode . (lambda ()
                          (require 'lsp-pyright)
                          (lsp)))  ; or lsp-deferred
  :init (when (executable-find "python3")
          (setq lsp-pyright-python-executable-cmd "python3"))
  )
```

- Make sure emacs uses the environment where you have installed
  `types-aiobotocore`

Type checking should now work. No explicit type annotations required, write
your `aiobotocore` code as usual.

<a id="sublime-text"></a>

### Sublime Text

- Install `types-aiobotocore[cloudfront]` with services you use in your
  environment:

```bash
python -m pip install 'types-aiobotocore[cloudfront]'
```

- Install [LSP-pyright](https://github.com/sublimelsp/LSP-pyright) package

Type checking should now work. No explicit type annotations required, write
your `aiobotocore` code as usual.

<a id="other-ides"></a>

### Other IDEs

Not tested, but as long as your IDE supports `mypy` or `pyright`, everything
should work.

<a id="mypy"></a>

### mypy

- Install `mypy`: `python -m pip install mypy`
- Install `types-aiobotocore[cloudfront]` in your environment:

```bash
python -m pip install 'types-aiobotocore[cloudfront]'`
```

Type checking should now work. No explicit type annotations required, write
your `aiobotocore` code as usual.

<a id="pyright"></a>

### pyright

- Install `pyright`: `npm i -g pyright`
- Install `types-aiobotocore[cloudfront]` in your environment:

```bash
python -m pip install 'types-aiobotocore[cloudfront]'
```

Optionally, you can install `types-aiobotocore` to `typings` folder.

Type checking should now work. No explicit type annotations required, write
your `aiobotocore` code as usual.

<a id="explicit-type-annotations"></a>

## Explicit type annotations

<a id="client-annotations"></a>

### Client annotations

`CloudFrontClient` provides annotations for
`session.create_client("cloudfront")`.

```python
from aiobotocore.session import get_session

from types_aiobotocore_cloudfront import CloudFrontClient

session = get_session()
async with session.create_client("cloudfront") as client:
    client: CloudFrontClient
    # now client usage is checked by mypy and IDE should provide code completion
```

<a id="paginators-annotations"></a>

### Paginators annotations

`types_aiobotocore_cloudfront.paginator` module contains type annotations for
all paginators.

````python
from aiobotocore.session import get_session

from types_aiobotocore_cloudfront import CloudFrontClient
from types_aiobotocore_cloudfront.paginator import (
    ListCloudFrontOriginAccessIdentitiesPaginator,
    ListDistributionsPaginator,
    ListInvalidationsPaginator,
    ListStreamingDistributionsPaginator,
)

session = get_session()
async with session.create_client("cloudfront") as client:
    client: CloudFrontClient

    # Explicit type annotations are optional here
    # Type should be correctly discovered by mypy and IDEs
    # VSCode requires explicit type annotations
        list_cloud_front_origin_access_identities_paginator: ListCloudFrontOriginAccessIdentitiesPaginator = client.get_paginator("list_cloud_front_origin_access_identities")
        list_distributions_paginator: ListDistributionsPaginator = client.get_paginator("list_distributions")
        list_invalidations_paginator: ListInvalidationsPaginator = client.get_paginator("list_invalidations")
        list_streaming_distributions_paginator: ListStreamingDistributionsPaginator = client.get_paginator("list_streaming_distributions")
    ```


### Waiters annotations

`types_aiobotocore_cloudfront.waiter` module contains type annotations for all waiters.

```python
from aiobotocore.session import get_session

from types_aiobotocore_cloudfront.client import CloudFrontClient
from types_aiobotocore_cloudfront.waiter import (
    DistributionDeployedWaiter,
    InvalidationCompletedWaiter,
    StreamingDistributionDeployedWaiter,
)

session = get_session()
async with session.create_client("cloudfront") as client:
    client: CloudFrontClient

    # Explicit type annotations are optional here
    # Type should be correctly discovered by mypy and IDEs
    # VSCode requires explicit type annotations
        distribution_deployed_waiter: DistributionDeployedWaiter = client.get_waiter("distribution_deployed")
        invalidation_completed_waiter: InvalidationCompletedWaiter = client.get_waiter("invalidation_completed")
        streaming_distribution_deployed_waiter: StreamingDistributionDeployedWaiter = client.get_waiter("streaming_distribution_deployed")
    ```





<a id="literals"></a>

### Literals

`types_aiobotocore_cloudfront.literals` module contains literals extracted from shapes
that can be used in user code for type checking.

```python
from types_aiobotocore_cloudfront.literals import (
    CachePolicyCookieBehaviorType,
    CachePolicyHeaderBehaviorType,
    CachePolicyQueryStringBehaviorType,
    CachePolicyTypeType,
    CertificateSourceType,
    DistributionDeployedWaiterName,
    EventTypeType,
    FormatType,
    FrameOptionsListType,
    FunctionRuntimeType,
    FunctionStageType,
    GeoRestrictionTypeType,
    HttpVersionType,
    ICPRecordalStatusType,
    InvalidationCompletedWaiterName,
    ItemSelectionType,
    ListCloudFrontOriginAccessIdentitiesPaginatorName,
    ListDistributionsPaginatorName,
    ListInvalidationsPaginatorName,
    ListStreamingDistributionsPaginatorName,
    MethodType,
    MinimumProtocolVersionType,
    OriginProtocolPolicyType,
    OriginRequestPolicyCookieBehaviorType,
    OriginRequestPolicyHeaderBehaviorType,
    OriginRequestPolicyQueryStringBehaviorType,
    OriginRequestPolicyTypeType,
    PriceClassType,
    RealtimeMetricsSubscriptionStatusType,
    ReferrerPolicyListType,
    ResponseHeadersPolicyAccessControlAllowMethodsValuesType,
    ResponseHeadersPolicyTypeType,
    SSLSupportMethodType,
    SslProtocolType,
    StreamingDistributionDeployedWaiterName,
    ViewerProtocolPolicyType,
    CloudFrontServiceName,
    ServiceName,
    ResourceServiceName,
    PaginatorName,
    WaiterName,
)

def check_value(value: CachePolicyCookieBehaviorType) -> bool:
    ...
````

<a id="typed-dictionaries"></a>

### Typed dictionaries

`types_aiobotocore_cloudfront.type_defs` module contains structures and shapes
assembled to typed dictionaries for additional type checking.

```python
from types_aiobotocore_cloudfront.type_defs import (
    AliasICPRecordalTypeDef,
    AliasesTypeDef,
    CachedMethodsTypeDef,
    AssociateAliasRequestRequestTypeDef,
    TrustedKeyGroupsTypeDef,
    TrustedSignersTypeDef,
    CookieNamesTypeDef,
    HeadersTypeDef,
    QueryStringNamesTypeDef,
    CloudFrontOriginAccessIdentityConfigTypeDef,
    CloudFrontOriginAccessIdentitySummaryTypeDef,
    ConflictingAliasTypeDef,
    ContentTypeProfileTypeDef,
    ResponseMetadataTypeDef,
    FunctionConfigTypeDef,
    KeyGroupConfigTypeDef,
    PublicKeyConfigTypeDef,
    CustomErrorResponseTypeDef,
    OriginCustomHeaderTypeDef,
    OriginSslProtocolsTypeDef,
    DeleteCachePolicyRequestRequestTypeDef,
    DeleteCloudFrontOriginAccessIdentityRequestRequestTypeDef,
    DeleteDistributionRequestRequestTypeDef,
    DeleteFieldLevelEncryptionConfigRequestRequestTypeDef,
    DeleteFieldLevelEncryptionProfileRequestRequestTypeDef,
    DeleteFunctionRequestRequestTypeDef,
    DeleteKeyGroupRequestRequestTypeDef,
    DeleteMonitoringSubscriptionRequestRequestTypeDef,
    DeleteOriginRequestPolicyRequestRequestTypeDef,
    DeletePublicKeyRequestRequestTypeDef,
    DeleteRealtimeLogConfigRequestRequestTypeDef,
    DeleteResponseHeadersPolicyRequestRequestTypeDef,
    DeleteStreamingDistributionRequestRequestTypeDef,
    DescribeFunctionRequestRequestTypeDef,
    LoggingConfigTypeDef,
    ViewerCertificateTypeDef,
    DistributionIdListTypeDef,
    FieldPatternsTypeDef,
    KinesisStreamConfigTypeDef,
    QueryStringCacheKeysTypeDef,
    FunctionAssociationTypeDef,
    FunctionMetadataTypeDef,
    GeoRestrictionTypeDef,
    GetCachePolicyConfigRequestRequestTypeDef,
    GetCachePolicyRequestRequestTypeDef,
    GetCloudFrontOriginAccessIdentityConfigRequestRequestTypeDef,
    GetCloudFrontOriginAccessIdentityRequestRequestTypeDef,
    GetDistributionConfigRequestRequestTypeDef,
    WaiterConfigTypeDef,
    GetDistributionRequestRequestTypeDef,
    GetFieldLevelEncryptionConfigRequestRequestTypeDef,
    GetFieldLevelEncryptionProfileConfigRequestRequestTypeDef,
    GetFieldLevelEncryptionProfileRequestRequestTypeDef,
    GetFieldLevelEncryptionRequestRequestTypeDef,
    GetFunctionRequestRequestTypeDef,
    GetInvalidationRequestRequestTypeDef,
    GetKeyGroupConfigRequestRequestTypeDef,
    GetKeyGroupRequestRequestTypeDef,
    GetMonitoringSubscriptionRequestRequestTypeDef,
    GetOriginRequestPolicyConfigRequestRequestTypeDef,
    GetOriginRequestPolicyRequestRequestTypeDef,
    GetPublicKeyConfigRequestRequestTypeDef,
    GetPublicKeyRequestRequestTypeDef,
    GetRealtimeLogConfigRequestRequestTypeDef,
    GetResponseHeadersPolicyConfigRequestRequestTypeDef,
    GetResponseHeadersPolicyRequestRequestTypeDef,
    GetStreamingDistributionConfigRequestRequestTypeDef,
    GetStreamingDistributionRequestRequestTypeDef,
    PathsTypeDef,
    InvalidationSummaryTypeDef,
    KeyPairIdsTypeDef,
    LambdaFunctionAssociationTypeDef,
    ListCachePoliciesRequestRequestTypeDef,
    PaginatorConfigTypeDef,
    ListCloudFrontOriginAccessIdentitiesRequestRequestTypeDef,
    ListConflictingAliasesRequestRequestTypeDef,
    ListDistributionsByCachePolicyIdRequestRequestTypeDef,
    ListDistributionsByKeyGroupRequestRequestTypeDef,
    ListDistributionsByOriginRequestPolicyIdRequestRequestTypeDef,
    ListDistributionsByRealtimeLogConfigRequestRequestTypeDef,
    ListDistributionsByResponseHeadersPolicyIdRequestRequestTypeDef,
    ListDistributionsByWebACLIdRequestRequestTypeDef,
    ListDistributionsRequestRequestTypeDef,
    ListFieldLevelEncryptionConfigsRequestRequestTypeDef,
    ListFieldLevelEncryptionProfilesRequestRequestTypeDef,
    ListFunctionsRequestRequestTypeDef,
    ListInvalidationsRequestRequestTypeDef,
    ListKeyGroupsRequestRequestTypeDef,
    ListOriginRequestPoliciesRequestRequestTypeDef,
    ListPublicKeysRequestRequestTypeDef,
    ListRealtimeLogConfigsRequestRequestTypeDef,
    ListResponseHeadersPoliciesRequestRequestTypeDef,
    ListStreamingDistributionsRequestRequestTypeDef,
    ListTagsForResourceRequestRequestTypeDef,
    RealtimeMetricsSubscriptionConfigTypeDef,
    StatusCodesTypeDef,
    OriginGroupMemberTypeDef,
    OriginShieldTypeDef,
    S3OriginConfigTypeDef,
    PublicKeySummaryTypeDef,
    PublishFunctionRequestRequestTypeDef,
    QueryArgProfileTypeDef,
    ResponseHeadersPolicyAccessControlAllowHeadersTypeDef,
    ResponseHeadersPolicyAccessControlAllowMethodsTypeDef,
    ResponseHeadersPolicyAccessControlAllowOriginsTypeDef,
    ResponseHeadersPolicyAccessControlExposeHeadersTypeDef,
    ResponseHeadersPolicyContentSecurityPolicyTypeDef,
    ResponseHeadersPolicyContentTypeOptionsTypeDef,
    ResponseHeadersPolicyCustomHeaderTypeDef,
    ResponseHeadersPolicyFrameOptionsTypeDef,
    ResponseHeadersPolicyReferrerPolicyTypeDef,
    ResponseHeadersPolicyStrictTransportSecurityTypeDef,
    ResponseHeadersPolicyXSSProtectionTypeDef,
    S3OriginTypeDef,
    StreamingLoggingConfigTypeDef,
    TagKeysTypeDef,
    TagTypeDef,
    TestFunctionRequestRequestTypeDef,
    AllowedMethodsTypeDef,
    CachePolicyCookiesConfigTypeDef,
    CookiePreferenceTypeDef,
    OriginRequestPolicyCookiesConfigTypeDef,
    CachePolicyHeadersConfigTypeDef,
    OriginRequestPolicyHeadersConfigTypeDef,
    CachePolicyQueryStringsConfigTypeDef,
    OriginRequestPolicyQueryStringsConfigTypeDef,
    CloudFrontOriginAccessIdentityTypeDef,
    CreateCloudFrontOriginAccessIdentityRequestRequestTypeDef,
    UpdateCloudFrontOriginAccessIdentityRequestRequestTypeDef,
    CloudFrontOriginAccessIdentityListTypeDef,
    ConflictingAliasesListTypeDef,
    ContentTypeProfilesTypeDef,
    EmptyResponseMetadataTypeDef,
    GetCloudFrontOriginAccessIdentityConfigResultTypeDef,
    GetFunctionResultTypeDef,
    CreateFunctionRequestRequestTypeDef,
    UpdateFunctionRequestRequestTypeDef,
    CreateKeyGroupRequestRequestTypeDef,
    GetKeyGroupConfigResultTypeDef,
    KeyGroupTypeDef,
    UpdateKeyGroupRequestRequestTypeDef,
    CreatePublicKeyRequestRequestTypeDef,
    GetPublicKeyConfigResultTypeDef,
    PublicKeyTypeDef,
    UpdatePublicKeyRequestRequestTypeDef,
    CustomErrorResponsesTypeDef,
    CustomHeadersTypeDef,
    CustomOriginConfigTypeDef,
    ListDistributionsByCachePolicyIdResultTypeDef,
    ListDistributionsByKeyGroupResultTypeDef,
    ListDistributionsByOriginRequestPolicyIdResultTypeDef,
    ListDistributionsByResponseHeadersPolicyIdResultTypeDef,
    EncryptionEntityTypeDef,
    EndPointTypeDef,
    FunctionAssociationsTypeDef,
    FunctionSummaryTypeDef,
    RestrictionsTypeDef,
    GetDistributionRequestDistributionDeployedWaitTypeDef,
    GetInvalidationRequestInvalidationCompletedWaitTypeDef,
    GetStreamingDistributionRequestStreamingDistributionDeployedWaitTypeDef,
    InvalidationBatchTypeDef,
    InvalidationListTypeDef,
    KGKeyPairIdsTypeDef,
    SignerTypeDef,
    LambdaFunctionAssociationsTypeDef,
    ListCloudFrontOriginAccessIdentitiesRequestListCloudFrontOriginAccessIdentitiesPaginateTypeDef,
    ListDistributionsRequestListDistributionsPaginateTypeDef,
    ListInvalidationsRequestListInvalidationsPaginateTypeDef,
    ListStreamingDistributionsRequestListStreamingDistributionsPaginateTypeDef,
    MonitoringSubscriptionTypeDef,
    OriginGroupFailoverCriteriaTypeDef,
    OriginGroupMembersTypeDef,
    PublicKeyListTypeDef,
    QueryArgProfilesTypeDef,
    ResponseHeadersPolicyCorsConfigTypeDef,
    ResponseHeadersPolicyCustomHeadersConfigTypeDef,
    ResponseHeadersPolicySecurityHeadersConfigTypeDef,
    StreamingDistributionSummaryTypeDef,
    StreamingDistributionConfigTypeDef,
    UntagResourceRequestRequestTypeDef,
    TagsTypeDef,
    ForwardedValuesTypeDef,
    ParametersInCacheKeyAndForwardedToOriginTypeDef,
    OriginRequestPolicyConfigTypeDef,
    CreateCloudFrontOriginAccessIdentityResultTypeDef,
    GetCloudFrontOriginAccessIdentityResultTypeDef,
    UpdateCloudFrontOriginAccessIdentityResultTypeDef,
    ListCloudFrontOriginAccessIdentitiesResultTypeDef,
    ListConflictingAliasesResultTypeDef,
    ContentTypeProfileConfigTypeDef,
    CreateKeyGroupResultTypeDef,
    GetKeyGroupResultTypeDef,
    KeyGroupSummaryTypeDef,
    UpdateKeyGroupResultTypeDef,
    CreatePublicKeyResultTypeDef,
    GetPublicKeyResultTypeDef,
    UpdatePublicKeyResultTypeDef,
    OriginTypeDef,
    EncryptionEntitiesTypeDef,
    CreateRealtimeLogConfigRequestRequestTypeDef,
    RealtimeLogConfigTypeDef,
    UpdateRealtimeLogConfigRequestRequestTypeDef,
    CreateFunctionResultTypeDef,
    DescribeFunctionResultTypeDef,
    FunctionListTypeDef,
    PublishFunctionResultTypeDef,
    TestResultTypeDef,
    UpdateFunctionResultTypeDef,
    CreateInvalidationRequestRequestTypeDef,
    InvalidationTypeDef,
    ListInvalidationsResultTypeDef,
    ActiveTrustedKeyGroupsTypeDef,
    ActiveTrustedSignersTypeDef,
    CreateMonitoringSubscriptionRequestRequestTypeDef,
    CreateMonitoringSubscriptionResultTypeDef,
    GetMonitoringSubscriptionResultTypeDef,
    OriginGroupTypeDef,
    ListPublicKeysResultTypeDef,
    QueryArgProfileConfigTypeDef,
    ResponseHeadersPolicyConfigTypeDef,
    StreamingDistributionListTypeDef,
    CreateStreamingDistributionRequestRequestTypeDef,
    GetStreamingDistributionConfigResultTypeDef,
    UpdateStreamingDistributionRequestRequestTypeDef,
    ListTagsForResourceResultTypeDef,
    StreamingDistributionConfigWithTagsTypeDef,
    TagResourceRequestRequestTypeDef,
    CacheBehaviorTypeDef,
    DefaultCacheBehaviorTypeDef,
    CachePolicyConfigTypeDef,
    CreateOriginRequestPolicyRequestRequestTypeDef,
    GetOriginRequestPolicyConfigResultTypeDef,
    OriginRequestPolicyTypeDef,
    UpdateOriginRequestPolicyRequestRequestTypeDef,
    KeyGroupListTypeDef,
    OriginsTypeDef,
    FieldLevelEncryptionProfileConfigTypeDef,
    FieldLevelEncryptionProfileSummaryTypeDef,
    CreateRealtimeLogConfigResultTypeDef,
    GetRealtimeLogConfigResultTypeDef,
    RealtimeLogConfigsTypeDef,
    UpdateRealtimeLogConfigResultTypeDef,
    ListFunctionsResultTypeDef,
    TestFunctionResultTypeDef,
    CreateInvalidationResultTypeDef,
    GetInvalidationResultTypeDef,
    StreamingDistributionTypeDef,
    OriginGroupsTypeDef,
    FieldLevelEncryptionConfigTypeDef,
    FieldLevelEncryptionSummaryTypeDef,
    CreateResponseHeadersPolicyRequestRequestTypeDef,
    GetResponseHeadersPolicyConfigResultTypeDef,
    ResponseHeadersPolicyTypeDef,
    UpdateResponseHeadersPolicyRequestRequestTypeDef,
    ListStreamingDistributionsResultTypeDef,
    CreateStreamingDistributionWithTagsRequestRequestTypeDef,
    CacheBehaviorsTypeDef,
    CachePolicyTypeDef,
    CreateCachePolicyRequestRequestTypeDef,
    GetCachePolicyConfigResultTypeDef,
    UpdateCachePolicyRequestRequestTypeDef,
    CreateOriginRequestPolicyResultTypeDef,
    GetOriginRequestPolicyResultTypeDef,
    OriginRequestPolicySummaryTypeDef,
    UpdateOriginRequestPolicyResultTypeDef,
    ListKeyGroupsResultTypeDef,
    CreateFieldLevelEncryptionProfileRequestRequestTypeDef,
    FieldLevelEncryptionProfileTypeDef,
    GetFieldLevelEncryptionProfileConfigResultTypeDef,
    UpdateFieldLevelEncryptionProfileRequestRequestTypeDef,
    FieldLevelEncryptionProfileListTypeDef,
    ListRealtimeLogConfigsResultTypeDef,
    CreateStreamingDistributionResultTypeDef,
    CreateStreamingDistributionWithTagsResultTypeDef,
    GetStreamingDistributionResultTypeDef,
    UpdateStreamingDistributionResultTypeDef,
    CreateFieldLevelEncryptionConfigRequestRequestTypeDef,
    FieldLevelEncryptionTypeDef,
    GetFieldLevelEncryptionConfigResultTypeDef,
    UpdateFieldLevelEncryptionConfigRequestRequestTypeDef,
    FieldLevelEncryptionListTypeDef,
    CreateResponseHeadersPolicyResultTypeDef,
    GetResponseHeadersPolicyResultTypeDef,
    ResponseHeadersPolicySummaryTypeDef,
    UpdateResponseHeadersPolicyResultTypeDef,
    DistributionConfigTypeDef,
    DistributionSummaryTypeDef,
    CachePolicySummaryTypeDef,
    CreateCachePolicyResultTypeDef,
    GetCachePolicyResultTypeDef,
    UpdateCachePolicyResultTypeDef,
    OriginRequestPolicyListTypeDef,
    CreateFieldLevelEncryptionProfileResultTypeDef,
    GetFieldLevelEncryptionProfileResultTypeDef,
    UpdateFieldLevelEncryptionProfileResultTypeDef,
    ListFieldLevelEncryptionProfilesResultTypeDef,
    CreateFieldLevelEncryptionConfigResultTypeDef,
    GetFieldLevelEncryptionResultTypeDef,
    UpdateFieldLevelEncryptionConfigResultTypeDef,
    ListFieldLevelEncryptionConfigsResultTypeDef,
    ResponseHeadersPolicyListTypeDef,
    CreateDistributionRequestRequestTypeDef,
    DistributionConfigWithTagsTypeDef,
    DistributionTypeDef,
    GetDistributionConfigResultTypeDef,
    UpdateDistributionRequestRequestTypeDef,
    DistributionListTypeDef,
    CachePolicyListTypeDef,
    ListOriginRequestPoliciesResultTypeDef,
    ListResponseHeadersPoliciesResultTypeDef,
    CreateDistributionWithTagsRequestRequestTypeDef,
    CreateDistributionResultTypeDef,
    CreateDistributionWithTagsResultTypeDef,
    GetDistributionResultTypeDef,
    UpdateDistributionResultTypeDef,
    ListDistributionsByRealtimeLogConfigResultTypeDef,
    ListDistributionsByWebACLIdResultTypeDef,
    ListDistributionsResultTypeDef,
    ListCachePoliciesResultTypeDef,
)

def get_structure() -> AliasICPRecordalTypeDef:
    return {
      ...
    }
```

<a id="how-it-works"></a>

## How it works

Fully automated
[mypy-boto3-builder](https://github.com/youtype/mypy_boto3_builder) carefully
generates type annotations for each service, patiently waiting for
`aiobotocore` updates. It delivers a drop-in type annotations for you and makes
sure that:

- All available `aiobotocore` services are covered.
- Each public class and method of every `aiobotocore` service gets valid type
  annotations extracted from the documentation (blame `botocore` docs if types
  are incorrect).
- Type annotations include up-to-date documentation.
- Link to documentation is provided for every method.
- Code is processed by [black](https://github.com/psf/black) and
  [isort](https://github.com/PyCQA/isort) for readability.

<a id="what's-new"></a>

## What's new

<a id="implemented-features"></a>

### Implemented features

- Fully type annotated `boto3`, `botocore` and `aiobotocore` libraries
- `mypy`, `pyright`, `VSCode`, `PyCharm`, `Sublime Text` and `Emacs`
  compatibility
- `Client`, `ServiceResource`, `Resource`, `Waiter` `Paginator` type
  annotations for each service
- Generated `TypeDefs` for each service
- Generated `Literals` for each service
- Auto discovery of types for `boto3.client` and `boto3.session` calls
- Auto discovery of types for `session.client` and `session.session` calls
- Auto discovery of types for `client.get_waiter` and `client.get_paginator`
  calls
- Auto discovery of types for `ServiceResource` and `Resource` collections
- Auto discovery of types for `aiobotocore.Session.create_client` calls

<a id="latest-changes"></a>

### Latest changes

Builder changelog can be found in
[Releases](https://github.com/youtype/mypy_boto3_builder/releases).

<a id="versioning"></a>

## Versioning

`types-aiobotocore-cloudfront` version is the same as related `aiobotocore`
version and follows [PEP 440](https://www.python.org/dev/peps/pep-0440/)
format.

<a id="thank-you"></a>

## Thank you

- [Allie Fitter](https://github.com/alliefitter) for
  [boto3-type-annotations](https://pypi.org/project/boto3-type-annotations/),
  this package is based on top of his work
- [black](https://github.com/psf/black) developers for an awesome formatting
  tool
- [Timothy Edmund Crosley](https://github.com/timothycrosley) for
  [isort](https://github.com/PyCQA/isort) and how flexible it is
- [mypy](https://github.com/python/mypy) developers for doing all dirty work
  for us
- [pyright](https://github.com/microsoft/pyright) team for the new era of typed
  Python

<a id="documentation"></a>

## Documentation

All services type annotations can be found in
[aiobotocore docs](https://youtype.github.io/types_aiobotocore_docs/types_aiobotocore_cloudfront/)

<a id="support-and-contributing"></a>

## Support and contributing

This package is auto-generated. Please reports any bugs or request new features
in [mypy-boto3-builder](https://github.com/youtype/mypy_boto3_builder/issues/)
repository.


